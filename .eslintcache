[{"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\index.js":"1","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\reportWebVitals.js":"2","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\App.js":"3","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\store.js":"4","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\reducer.js":"5","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\reducer.js":"6","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\reducer.js":"7","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\reducer.js":"8","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppHeader\\AppHeader.jsx":"9","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Footer\\Footer.jsx":"10","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\RestaurantList.jsx":"11","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actionTypes.js":"12","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actionTypes.js":"13","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\operations.js":"14","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\operations.js":"15","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actionTypes.js":"16","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actionTypes.js":"17","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\operations.js":"18","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\utils\\localStorage.js":"19","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actions.js":"20","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\asyncActions.js":"21","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actions.js":"22","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\index.js":"23","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\LoadingBar\\LoadingBar.jsx":"24","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\PageNotFound\\PageNotFound.jsx":"25","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\RestaurantInformation.jsx":"26","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\utils.js":"27","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\asyncActions.js":"28","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\asyncActions.js":"29","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\selectors.js":"30","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actions.js":"31","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\Restaurants.jsx":"32","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\MyOrders.jsx":"33","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\Information\\Information.jsx":"34","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Slider\\Slider.jsx":"35","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\RestaurantCard\\RestaurantCard.jsx":"36","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuCategories\\MenuCategories.jsx":"37","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrderDetails\\MyOrderDetails.jsx":"38","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\MenuItems\\MenuItems.jsx":"39","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuTable\\MenuTable.jsx":"40","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ForcedModifiers.jsx":"41","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\OptionalModifiers\\OptionalModifiers.jsx":"42","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ModifiersCategory\\ModifierCategory.jsx":"43","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\Cart.jsx":"44","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Login\\Login.jsx":"45","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\CreateAccount\\CreateAccount.js":"46","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ForgotPassword\\ForgotPassword.js":"47","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actions.js":"48","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyProfile\\MyProfile.jsx":"49","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\ManageAddress.jsx":"50","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\ChooseAddress.jsx":"51","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\GoogleMap\\GoogleMap.jsx":"52","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Loader\\Loader.jsx":"53","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\Checkout.jsx":"54","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\WaitingOverlay\\WaitingOverlay.jsx":"55","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\utils.js":"56","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentForm.jsx":"57","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\OrderSuccess\\OrderSuccess.jsx":"58","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\ItemList.jsx":"59","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentFailed.jsx":"60","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ModifierOption.jsx":"61","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\AddAddress.jsx":"62","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\Address.jsx":"63","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppModal\\AppModal.jsx":"64","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\DishModal.jsx":"65","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\ModalHeader.jsx":"66","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppModal\\constants.js":"67","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\FooterModifier.jsx":"68","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\IntermediateAddModal.jsx":"69","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\RenderModifiers.jsx":"70","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\Detours\\utils.js":"71","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\Detours\\Detours.jsx":"72","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\PizzaModal.jsx":"73","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\SizeAndBase\\SizeAndBase.jsx":"74","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\HalfAndHalf\\HalfAndHalf.jsx":"75","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\Toppings\\Toppings.jsx":"76","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuTable\\PizzaMenuTable.jsx":"77","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\constants.js":"78","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\HomeSlider\\HomeSlider.jsx":"79","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PizzaDetailsForCheckout.jsx":"80","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\PaginationOrderList.jsx":"81","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\Pagination.jsx":"82","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\ScrollToTop.jsx":"83","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\Information\\InfoSlider.jsx":"84","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\RestrictUser\\RestrictUser.jsx":"85","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\DeliveryType.jsx":"86","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\TakeAddress.jsx":"87","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\SelectTimingsForPickup.jsx":"88","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\SelectTimingsForDelivery.jsx":"89"},{"size":780,"mtime":1628062500085,"results":"90","hashOfConfig":"91"},{"size":375,"mtime":1619596618133,"results":"92","hashOfConfig":"91"},{"size":1487,"mtime":1624995791226,"results":"93","hashOfConfig":"91"},{"size":976,"mtime":1619973364808,"results":"94","hashOfConfig":"91"},{"size":7748,"mtime":1629871847120,"results":"95","hashOfConfig":"91"},{"size":906,"mtime":1619596618164,"results":"96","hashOfConfig":"91"},{"size":3559,"mtime":1632303880246,"results":"97","hashOfConfig":"91"},{"size":8598,"mtime":1627998859366,"results":"98","hashOfConfig":"91"},{"size":11982,"mtime":1627895525616,"results":"99","hashOfConfig":"91"},{"size":6473,"mtime":1629918913555,"results":"100","hashOfConfig":"91"},{"size":4436,"mtime":1627560840207,"results":"101","hashOfConfig":"91"},{"size":82,"mtime":1619596618164,"results":"102","hashOfConfig":"91"},{"size":5194,"mtime":1623396663972,"results":"103","hashOfConfig":"91"},{"size":996,"mtime":1619596618164,"results":"104","hashOfConfig":"91"},{"size":5527,"mtime":1627560635275,"results":"105","hashOfConfig":"91"},{"size":1475,"mtime":1632303026799,"results":"106","hashOfConfig":"91"},{"size":3576,"mtime":1627990511412,"results":"107","hashOfConfig":"91"},{"size":21481,"mtime":1625210827660,"results":"108","hashOfConfig":"91"},{"size":568,"mtime":1619596618180,"results":"109","hashOfConfig":"91"},{"size":6476,"mtime":1628062758500,"results":"110","hashOfConfig":"91"},{"size":2488,"mtime":1627378314791,"results":"111","hashOfConfig":"91"},{"size":2506,"mtime":1632303503360,"results":"112","hashOfConfig":"91"},{"size":37,"mtime":1619596618133,"results":"113","hashOfConfig":"91"},{"size":785,"mtime":1629282843616,"results":"114","hashOfConfig":"91"},{"size":275,"mtime":1619596618096,"results":"115","hashOfConfig":"91"},{"size":7092,"mtime":1628156751432,"results":"116","hashOfConfig":"91"},{"size":7590,"mtime":1625062236483,"results":"117","hashOfConfig":"91"},{"size":8383,"mtime":1628074647106,"results":"118","hashOfConfig":"91"},{"size":10988,"mtime":1629793978736,"results":"119","hashOfConfig":"91"},{"size":1874,"mtime":1625054027853,"results":"120","hashOfConfig":"91"},{"size":9236,"mtime":1629742936786,"results":"121","hashOfConfig":"91"},{"size":1517,"mtime":1626861251428,"results":"122","hashOfConfig":"91"},{"size":39657,"mtime":1633602085905,"results":"123","hashOfConfig":"91"},{"size":20557,"mtime":1632236973741,"results":"124","hashOfConfig":"91"},{"size":2522,"mtime":1619596618096,"results":"125","hashOfConfig":"91"},{"size":3577,"mtime":1628230642331,"results":"126","hashOfConfig":"91"},{"size":30593,"mtime":1631788714578,"results":"127","hashOfConfig":"91"},{"size":6472,"mtime":1627032120586,"results":"128","hashOfConfig":"91"},{"size":14440,"mtime":1630398641241,"results":"129","hashOfConfig":"91"},{"size":25653,"mtime":1628511776278,"results":"130","hashOfConfig":"91"},{"size":2164,"mtime":1622729738382,"results":"131","hashOfConfig":"91"},{"size":5538,"mtime":1626795466059,"results":"132","hashOfConfig":"91"},{"size":2543,"mtime":1626794966731,"results":"133","hashOfConfig":"91"},{"size":15423,"mtime":1634047995462,"results":"134","hashOfConfig":"91"},{"size":25217,"mtime":1629894617242,"results":"135","hashOfConfig":"91"},{"size":10686,"mtime":1625469532059,"results":"136","hashOfConfig":"91"},{"size":11424,"mtime":1620740749899,"results":"137","hashOfConfig":"91"},{"size":364,"mtime":1619596618164,"results":"138","hashOfConfig":"91"},{"size":7833,"mtime":1629800515119,"results":"139","hashOfConfig":"91"},{"size":10567,"mtime":1632401085574,"results":"140","hashOfConfig":"91"},{"size":22918,"mtime":1632642909700,"results":"141","hashOfConfig":"91"},{"size":10464,"mtime":1632388105770,"results":"142","hashOfConfig":"91"},{"size":261,"mtime":1620740149847,"results":"143","hashOfConfig":"91"},{"size":58409,"mtime":1632824578620,"results":"144","hashOfConfig":"91"},{"size":464,"mtime":1629281995831,"results":"145","hashOfConfig":"91"},{"size":7828,"mtime":1633601092659,"results":"146","hashOfConfig":"91"},{"size":16104,"mtime":1632826427576,"results":"147","hashOfConfig":"91"},{"size":11873,"mtime":1632903718651,"results":"148","hashOfConfig":"91"},{"size":14299,"mtime":1634048049501,"results":"149","hashOfConfig":"91"},{"size":860,"mtime":1629289605728,"results":"150","hashOfConfig":"91"},{"size":1902,"mtime":1626794828420,"results":"151","hashOfConfig":"91"},{"size":12446,"mtime":1632642784329,"results":"152","hashOfConfig":"91"},{"size":1576,"mtime":1632239000979,"results":"153","hashOfConfig":"91"},{"size":3908,"mtime":1623755427821,"results":"154","hashOfConfig":"91"},{"size":10019,"mtime":1626775689366,"results":"155","hashOfConfig":"91"},{"size":471,"mtime":1622702380682,"results":"156","hashOfConfig":"91"},{"size":498,"mtime":1623755231538,"results":"157","hashOfConfig":"91"},{"size":496,"mtime":1626795792943,"results":"158","hashOfConfig":"91"},{"size":5314,"mtime":1624784419934,"results":"159","hashOfConfig":"91"},{"size":1888,"mtime":1623760726574,"results":"160","hashOfConfig":"91"},{"size":786,"mtime":1622803961645,"results":"161","hashOfConfig":"91"},{"size":6072,"mtime":1626795629178,"results":"162","hashOfConfig":"91"},{"size":15271,"mtime":1629275558411,"results":"163","hashOfConfig":"91"},{"size":1394,"mtime":1629275496836,"results":"164","hashOfConfig":"91"},{"size":1991,"mtime":1626796597035,"results":"165","hashOfConfig":"91"},{"size":3731,"mtime":1626796299854,"results":"166","hashOfConfig":"91"},{"size":18187,"mtime":1626773123405,"results":"167","hashOfConfig":"91"},{"size":177,"mtime":1623236213115,"results":"168","hashOfConfig":"91"},{"size":5029,"mtime":1623615954233,"results":"169","hashOfConfig":"91"},{"size":2966,"mtime":1623756410920,"results":"170","hashOfConfig":"91"},{"size":3808,"mtime":1627901557790,"results":"171","hashOfConfig":"91"},{"size":2796,"mtime":1626088411560,"results":"172","hashOfConfig":"91"},{"size":258,"mtime":1624966775113,"results":"173","hashOfConfig":"91"},{"size":6784,"mtime":1630401654535,"results":"174","hashOfConfig":"91"},{"size":586,"mtime":1629358098597,"results":"175","hashOfConfig":"91"},{"size":6998,"mtime":1632815268159,"results":"176","hashOfConfig":"91"},{"size":28271,"mtime":1632902362018,"results":"177","hashOfConfig":"91"},{"size":8202,"mtime":1634127223482,"results":"178","hashOfConfig":"91"},{"size":8038,"mtime":1634127271423,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"1sz4uph",{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"182"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"182"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"182"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"182"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"182"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"182"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"182"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"182"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"182"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"182"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"182"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"182"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"182"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"182"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"182"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"182"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"182"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"182"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"182"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"182"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"182"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"182"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"182"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"182"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"182"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"182"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"182"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"182"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"182"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"322","usedDeprecatedRules":"182"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"182"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"182"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"182"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"182"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"182"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"182"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"182"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"182"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"365"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"182"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"182"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"182"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"182"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"182"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"182"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"182"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"182"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"182"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"182"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"182"},"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\index.js",[],["411","412"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\reportWebVitals.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\App.js",["413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import RestaurantList from \"./containers/RestaurantList/RestaurantList\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Appheader from \"./components/AppHeader/AppHeader\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Checkout from \"./components/Checkout/Checkout\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport ReactPlaceholder from \"react-placeholder\";\r\nimport \"react-placeholder/lib/reactPlaceholder.css\";\r\n\r\nfunction App() {\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const timer = setTimeout(() => {\r\n  //     fetch(\"https://randomuser.me/api/?results=100\")\r\n  //       .then((response) => response.json())\r\n  //       .then((data) => {\r\n  //         setUsers(data.results);\r\n  //         setLoading(false);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //         setLoading(false);\r\n  //         setError(true);\r\n  //       });\r\n  //   }, 2000);\r\n\r\n  //   return () => clearTimeout(timer);\r\n  // }, []);\r\n  const [state, setState] = useState(true);\r\n  const menu = useSelector((state) => state.menu);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* <Appheader /> */}\r\n        <RestaurantList />\r\n\r\n        {/* <Footer /> */}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\store.js",["427"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport menuReducer from \"./menu/reducer\";\r\nimport mainReducer from \"./main/reducer\";\r\nimport userReducer from \"./user/reducer\";\r\nimport modalReducer from \"./modal/reducer\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      /* Options like actionSanitizer, stateSanitizer */\r\n    })\r\n  : compose;\r\nconst middlewareCandidates = [thunk];\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   middlewareCandidates.push(createLogger());\r\n// }\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewareCandidates));\r\nconst rootReducer = combineReducers({\r\n  menu: menuReducer,\r\n  main: mainReducer,\r\n  user: userReducer,\r\n  modal: modalReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\reducer.js",["428"],"import * as actionTypes from \"./actionTypes\";\r\nimport { persistState, getPersistedState } from \"../operations\";\r\nimport { clearState } from \"../utils/localStorage\";\r\n\r\nconst REDUCER_KEY = \"user-reducer\";\r\n\r\nconst initialState = {\r\n  delivery_cost: \"\",\r\n  showLoginForm: false,\r\n  showForgotPasswordForm: false,\r\n  showRegisterForm: false,\r\n  waitingOverlay: false,\r\n  user: {\r\n    isUserLoggedIn: false,\r\n    token: null,\r\n    email: null,\r\n    clientId: null,\r\n    mobile: \"\",\r\n    profileImage: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    phonecode: \"\",\r\n  },\r\n  selectedDeliveryTime: null,\r\n  selectedPickUpTime: null,\r\n  deliveryOption: null,\r\n  defaultAddress: null,\r\n  selectedAddress: null,\r\n  distance: -1,\r\n  isTakeAway: false,\r\n  cards: [],\r\n  viewType: \"user\",\r\n\r\n  ...getPersistedState(\"user\", \"\", REDUCER_KEY),\r\n};\r\n\r\nconst itemsToPersist = [\r\n  \"user\",\r\n  \"cards\",\r\n  \"deliveryOption\",\r\n  \"selectedAddress\",\r\n  \"isTakeAway\",\r\n];\r\n\r\nlet newState;\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER_LOGGED_IN:\r\n      console.log(\"actions of profile\", action.payload);\r\n      newState = {\r\n        ...state,\r\n        waitingOverlay: false,\r\n        showLoginForm: false,\r\n        user: {\r\n          ...state.user,\r\n          isUserLoggedIn: true,\r\n          token: action.payload.token,\r\n          email: action.payload.email,\r\n          clientId: action.payload.clientId,\r\n          mobile: action.payload.mobile,\r\n          profileImage: action.payload.profileImage,\r\n          firstName: action.payload.firstName,\r\n          lastName: action.payload.lastName,\r\n        },\r\n      };\r\n\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    case actionTypes.SET_USER_LOGGED_OUT:\r\n      newState = {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isUserLoggedIn: false,\r\n          loggedInToken: null,\r\n        },\r\n      };\r\n\r\n      clearState(state.viewType);\r\n\r\n      return newState;\r\n    case actionTypes.SHOW_LOGIN_FORM:\r\n      return {\r\n        ...state,\r\n        showLoginForm: true,\r\n        showRegisterForm: false,\r\n        showForgotPasswordForm: false,\r\n      };\r\n    case actionTypes.SHOW_REGISTER_FORM:\r\n      return {\r\n        ...state,\r\n        showRegisterForm: true,\r\n      };\r\n    case actionTypes.HIDE_LOGIN_FORM:\r\n      return {\r\n        ...state,\r\n        showLoginForm: false,\r\n      };\r\n    case actionTypes.POST_LOGIN_FORM_REQUEST:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: true,\r\n      };\r\n    case actionTypes.POST_LOGIN_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: false,\r\n      };\r\n    // REGISTER\r\n    case actionTypes.SHOW_REGISTER_FORM:\r\n      return {\r\n        ...state,\r\n        showRegisterForm: true,\r\n      };\r\n    case actionTypes.HIDE_REGISTER_FORM:\r\n      return {\r\n        ...state,\r\n        showRegisterForm: false,\r\n      };\r\n    case actionTypes.POST_REGISTER_FORM_REQUEST:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: true,\r\n      };\r\n    case actionTypes.POST_REGISTER_FORM_FAILED:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: false,\r\n      };\r\n    case actionTypes.POST_REGISTER_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: false,\r\n      };\r\n\r\n    // FORGOT PASSWORD\r\n    case actionTypes.SHOW_FORGOT_PASSWORD_FORM:\r\n      return {\r\n        ...state,\r\n        showLoginForm: false,\r\n        showForgotPasswordForm: true,\r\n        forgotPasswordSuccess: false,\r\n        forgotPasswordError: false,\r\n      };\r\n    case actionTypes.HIDE_FORGOT_PASSWORD_FORM:\r\n      return {\r\n        ...state,\r\n        showForgotPasswordForm: false,\r\n      };\r\n    case actionTypes.POST_FORGOT_PASSWORD_FORM_REQUEST:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: true,\r\n      };\r\n    case actionTypes.POST_FORGOT_PASSWORD_FORM_FAILED:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: false,\r\n      };\r\n    case actionTypes.POST_FORGOT_PASSWORD_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        waitingOverlay: false,\r\n      };\r\n    case actionTypes.UPDATE_USER_DETAILS: {\r\n      newState = {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          ...action.user,\r\n        },\r\n      };\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.ADD_CARD: {\r\n      newState = {\r\n        ...state,\r\n        cards: [...state.cards, action.card],\r\n      };\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SET_DELIVERY_OPTION: {\r\n      newState = {\r\n        ...state,\r\n        deliveryOption: action.deliveryOption,\r\n      };\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SET_SELECTED_ADDRESS: {\r\n      newState = {\r\n        ...state,\r\n        selectedAddress: action.address,\r\n      };\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SET_DELIVERY_DISTANCE: {\r\n      newState = {\r\n        ...state,\r\n        distance: action.distance,\r\n      };\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    }\r\n\r\n    // ? set delivery time\r\n\r\n    case actionTypes.SET_IS_TAKE_AWAY: {\r\n      newState = {\r\n        ...state,\r\n        isTakeAway: action.isTakeAway,\r\n      };\r\n      persistState(newState, itemsToPersist, REDUCER_KEY);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.SET_PICKUP_TIME: {\r\n      return {\r\n        ...state,\r\n        selectedPickUpTime: `${action.pickupTime}:00`,\r\n      };\r\n    }\r\n    case actionTypes.SET_PHONE_CODE: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          phonecode: action.phonecode,\r\n        },\r\n      };\r\n    }\r\n    case actionTypes.SET_DEFAULT_ADDRESSS: {\r\n      return {\r\n        ...state,\r\n        defaultAddress: action.defaultAddress,\r\n      };\r\n    }\r\n    case actionTypes.SET_DELIVERY_TIME: {\r\n      return {\r\n        ...state,\r\n        selectedDeliveryTime: `${action.deliveryTime}:00`,\r\n      };\r\n    }\r\n\r\n    case actionTypes.SET_DELIVERY_COST: {\r\n      return {\r\n        ...state,\r\n        delivery_cost: action.payload,\r\n      };\r\n    }\r\n\r\n    case actionTypes.POST_MYPROFILE_FORM_SUCCESS: {\r\n      newState = {\r\n        ...state,\r\n        waitingOverlay: false,\r\n        showLoginForm: false,\r\n        user: {\r\n          ...state.user,\r\n          mobile: action.payload.data.mobile,\r\n          firstName: action.payload.data.firstname,\r\n          lastName: action.payload.data.lastname,\r\n          phonecode: action.payload.data.phonecode,\r\n          zipcode: action.payload.data.zipcode,\r\n          address: action.payload.data.address,\r\n          city: action.payload.data.city,\r\n          country: action.payload.data.country,\r\n          state: action.payload.data.state,\r\n        },\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case actionTypes.UPDATE_MYPROFILE_FORM_SUCCESS: {\r\n      console.log(\"payload of update\", action.payload);\r\n      newState = {\r\n        ...state,\r\n        waitingOverlay: false,\r\n        showLoginForm: false,\r\n        user: {\r\n          ...state.user,\r\n          clientId: action.payload.client_id,\r\n          mobile: action.payload.mobile,\r\n          firstName: action.payload.firstname,\r\n          lastName: action.payload.lastname,\r\n          email: action.payload.email,\r\n        },\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppHeader\\AppHeader.jsx",["429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n//import Logo from \"../../assets/img/zottoLogo.png\";\r\nimport {\r\n  setUserLoggedOut,\r\n  showLoginFormMethod,\r\n  showRegisterFormMethod,\r\n} from \"../../state-management/user/actions\";\r\n// import \"./AppHeader.scss\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"./AppHeader.css\";\r\nimport img1 from \"./Bold-2px-person.png\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nconst Appheader = () => {\r\n  const History = useHistory();\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n\r\n  const [navbar, setNavbar] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 60) {\r\n      setNavbar(true);\r\n    } else {\r\n      setNavbar(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackground);\r\n\r\n  const callLogout = () => {\r\n    dispatch(setUserLoggedOut());\r\n    window.location.replace(\r\n      `${process.env.REACT_APP_PUBLIC_URL}restId=${menu.restaurantInfo.restaurant_id}/menu`\r\n    );\r\n  };\r\n\r\n  const showMobileMenu = () => {\r\n    var x = document.getElementById(\"main-menu-id\");\r\n    x.classList.add(\"show\");\r\n  };\r\n\r\n  const showEditProfileOnMobile = () => {\r\n    var x = document.getElementById(\"editprofile\");\r\n    x.classList.add(\"show_normal\");\r\n  };\r\n  const closemobilemenu = () => {\r\n    var x = document.getElementById(\"main-menu-id\");\r\n    x.classList.remove(\"show\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"main-header header-bg\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-4 col-sm-4 col-4\"\r\n            style={{ fontSize: \"1.2rem\", color: \"black\" }}\r\n          >\r\n            {/* paste logo here */}\r\n            {/* <img\r\n              style={{ marginTop: \"-12px\" }}\r\n              width=\"130px\"\r\n              height=\"50px\"\r\n              src={main.selectedRestaurant.logo}\r\n              alt=\"zotto\"\r\n\r\n            /> */}\r\n            <div className=\"left-parent hide-on-mobile\">\r\n              <ul>\r\n                {Number(menu.restaurantInfo[\"chain_owner_id\"]) ? (\r\n                  <>\r\n                    <>\r\n                      <li key={11} className=\"navigation-buttons\">\r\n                        <a\r\n                          className=\"text-pizzamodal\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: \"600\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                          href={`?/chainId=${menu.restaurantInfo.chain_owner_id}`}\r\n                        >\r\n                          HOME\r\n                        </a>\r\n                      </li>\r\n                    </>\r\n                  </>\r\n                ) : null}\r\n              </ul>\r\n\r\n              <ul style={{ marginLeft: \"40px\" }}>\r\n                <li onClick={() => History.push(\"menu\")}>\r\n                  <a\r\n                    style={{\r\n                      color: \"black\",\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      fontWeight: \"600\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                    className=\"text-pizzamodal\"\r\n                    // href={`?/restId=${menu.restaurantInfo.restaurant_id}/menu`}\r\n                  >\r\n                    MENU\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <nav className=\"col-md-8 col-sm-8 col-8\">\r\n            <div className=\"hide-on-desktop hamburger-container\">\r\n              <a\r\n                className=\"cmn-toggle-switch cmn-toggle-switch__htx open_close \"\r\n                style={{\r\n                  marginTop: \"12px\",\r\n                }}\r\n                onClick={showMobileMenu}\r\n              >\r\n                <span className=\"color-black\">Menu mobile</span>\r\n              </a>\r\n            </div>\r\n\r\n            <div className=\"main-menu\" id=\"main-menu-id\">\r\n              <div id=\"header_menu\" style={{ backgroundColor: \"white\" }}></div>\r\n              <a\r\n                href=\"#\"\r\n                className=\"open_close\"\r\n                id=\"close_in\"\r\n                onClick={closemobilemenu}\r\n              >\r\n                <CloseIcon style={{ color: \"black\" }} />\r\n              </a>\r\n              <ul>\r\n                {Number(menu.restaurantInfo[\"chain_owner_id\"]) ? (\r\n                  <>\r\n                    <li>\r\n                      {\" \"}\r\n                      <a\r\n                        style={{\r\n                          color: \"black\",\r\n                          cursor: \"pointer\",\r\n                          color: \"black\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"16px\",\r\n                          letterSpacing: \"0.15em\",\r\n                        }}\r\n                        className=\"hide-on-desktop text-pizzamodal\"\r\n                        href={`?/chainId=${menu.restaurantInfo.chain_owner_id}`}\r\n                      >\r\n                        Home\r\n                      </a>\r\n                    </li>\r\n                  </>\r\n                ) : null}\r\n                <li onClick={() => History.push(\"menu\")}>\r\n                  <a\r\n                    style={{\r\n                      color: \"black\",\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      fontWeight: \"600\",\r\n                      fontSize: \"16px\",\r\n                      letterSpacing: \"0.15em\",\r\n                    }}\r\n                    className=\"hide-on-desktop text-pizzamodal\"\r\n                    // href={`?/restId=${menu.restaurantInfo.restaurant_id}/menu`}\r\n                  >\r\n                    Menu\r\n                  </a>\r\n                </li>\r\n\r\n                {user.user.isUserLoggedIn ? (\r\n                  <li\r\n                    className=\"submenu\"\r\n                    style={{ color: \"black\", cursor: \"pointer\" }}\r\n                    onClick={showEditProfileOnMobile}\r\n                  >\r\n                    {user.user.isUserLoggedIn ? (\r\n                      <a\r\n                        className=\"show-submenu text-pizzamodal\"\r\n                        style={{\r\n                          color: \"black\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"16px\",\r\n                          letterSpacing: \"0.15em\",\r\n                          marginTop: \"-0px\",\r\n                        }}\r\n                      >\r\n                        {user.user.firstName} &nbsp;\r\n                        {/* <PersonIcon\r\n                          style={{\r\n                            float: \"right\",\r\n                            color: \"black\",\r\n                            marginTop: \"7px\",\r\n                          }}\r\n                        /> */}\r\n                        <img src={img1} className=\"img-profile\" />\r\n                      </a>\r\n                    ) : (\r\n                      <a\r\n                        className=\"show-submenu text-pizzamodal\"\r\n                        style={{ fontWeight: \"600\" }}\r\n                      >\r\n                        user\r\n                        <ExpandMoreIcon fontSize=\"small\" />\r\n                      </a>\r\n                    )}\r\n                    {/* <a href=\"javascript:void(0);\" className=\"show-submenu\">\r\n                    user\r\n                    <i className=\"icon-down-open-mini\" />\r\n                  </a> */}\r\n\r\n                    <ul className=\"\" id=\"editprofile\">\r\n                      <li\r\n                        style={{\r\n                          color: \"black\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => History.push(\"myOrders\")}\r\n                      >\r\n                        <a\r\n                          style={{ color: \"black\", cursor: \"pointer\" }}\r\n                          //href={`?/restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\r\n                          //onClick={()=>History.push(`/restId=${menu.restaurantInfo.restaurant_id}/myProfile`)}\r\n                        >\r\n                          My Profile\r\n                        </a>\r\n                      </li>\r\n                      {/* <li\r\n                        style={{ color: \"black\", cursor: \"pointer\" }}\r\n                        onClick={() => History.push(\"myOrders\")}\r\n                      >\r\n                        <a\r\n                          style={{ color: \"black\" }}\r\n                          style={{ color: \"black\" }}\r\n                          //href={`?/restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\r\n                        >\r\n                          Manage Addresses\r\n                        </a>\r\n                      </li> */}\r\n                      {/* <li\r\n                        style={{ color: \"white\", cursor: \"pointer\" }}\r\n                        onClick={() => History.push(\"myOrders\")}\r\n                      >\r\n                        <a\r\n                          style={{ color: \"black\" }}\r\n                          //href={`?/restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\r\n                        >\r\n                          My Orders\r\n                        </a>\r\n                      </li> */}\r\n                      <li>\r\n                        <a\r\n                          onClick={callLogout}\r\n                          style={{ color: \"black\", cursor: \"pointer\" }}\r\n                        >\r\n                          Logout\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                ) : null}\r\n\r\n                {!user.user.isUserLoggedIn ? (\r\n                  <>\r\n                    <li>\r\n                      <a\r\n                        className=\"text-pizzamodal\"\r\n                        style={{\r\n                          color: \"black\",\r\n                          cursor: \"pointer\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"16px\",\r\n                        }}\r\n                        onClick={() => {\r\n                          var x = document.getElementById(\"main-menu-id\");\r\n                          x.classList.remove(\"show\");\r\n                          dispatch(showLoginFormMethod());\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#login_2\"\r\n                      >\r\n                        Login\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        className=\"text-pizzamodal\"\r\n                        style={{\r\n                          color: \"black\",\r\n                          cursor: \"pointer\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"16px\",\r\n                        }}\r\n                        onClick={() => {\r\n                          var x = document.getElementById(\"main-menu-id\");\r\n                          x.classList.remove(\"show\");\r\n                          dispatch(showRegisterFormMethod());\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#login_2\"\r\n                      >\r\n                        Register\r\n                      </a>\r\n                    </li>\r\n                  </>\r\n                ) : null}\r\n              </ul>\r\n            </div>\r\n            {/* End main-menu */}\r\n          </nav>\r\n        </div>\r\n        {/* End row */}\r\n      </div>\r\n      {/* End container */}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Appheader;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Footer\\Footer.jsx",["448","449","450","451","452","453","454","455"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Logo from \"./zottoLogo.png\";\r\nimport FacebookIcon from \"./facebook@3x.png\";\r\nimport TwitterIcon from \"./twitter@3x.png\";\r\nimport InstagramIcon from \"./ig@3x.png\";\r\nimport {\r\n  setUserLoggedOut,\r\n  showLoginFormMethod,\r\n  showRegisterFormMethod,\r\n} from \"../../state-management/user/actions\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const dispatch = useDispatch();\r\n  var d = new Date();\r\n  var n = d.getFullYear();\r\n\r\n  function renderBusinessHours() {\r\n    return (\r\n      menu.restaurantInfo.business_hours &&\r\n      menu.restaurantInfo.business_hours.map((business, i) => {\r\n        const businessFromSplit = business.from.split(\":\");\r\n        const businessToSplit = business.to.split(\":\");\r\n\r\n        const businessFrom = `${businessFromSplit[0]}:${businessFromSplit[1]}`;\r\n        const businessTo = `${businessToSplit[0]}:${businessToSplit[1]}`;\r\n\r\n        let businessHour = `${businessFrom} - ${businessTo}`;\r\n\r\n        if (businessHour === \"00:00 - 00:00\") {\r\n          businessHour = \"Closed\";\r\n        }\r\n\r\n        return (\r\n          <>\r\n            <div className='main-footer-container'>\r\n              <div className='footer-parent'>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"500\",\r\n                    color: \"#302F31\",\r\n                    letterSpacing: \"0.07em\",\r\n                    color: \"#666171\",\r\n                    lineHeight: \"2\",\r\n                  }}\r\n                >\r\n                  {business.day_name}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='footer-parent' style={{ marginRight: \"140px\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"500\",\r\n                    color: \"#666171\",\r\n                    lineHeight: \"2\",\r\n                  }}\r\n                >\r\n                  {businessHour}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  const showLogin = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n\r\n  const showRegister = () => {\r\n    dispatch(showRegisterFormMethod());\r\n  };\r\n\r\n  return (\r\n    <footer>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <p\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"#302F31\",\r\n                fontWeight: \"700\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              Secure payments with\r\n            </p>\r\n\r\n            <img\r\n              className='logo-measurements'\r\n              //src={Logo}\r\n              src='https://zotto.io/wp-content/uploads/2020/09/logo.png'\r\n              alt='zotto-Logo'\r\n              style={{ marginTop: \"10px\" }}\r\n            />\r\n          </div>\r\n          <div className='col-md-4 margin-for-mobile margin-left-for-iphoneplus'>\r\n            <p\r\n              style={{\r\n                letterSpacing: \"0.15em\",\r\n                color: \"#302F31\",\r\n                fontWeight: \"700\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            >\r\n              ABOUT\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                <a\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    fontSize: \"16px\",\r\n                    letterSpacing: \"0.07em\",\r\n                    color: \"#666171\",\r\n                  }}\r\n                  onClick={showLogin}\r\n                >\r\n                  Login\r\n                </a>\r\n              </li>\r\n\r\n              <li style={{ marginTop: \"10px\" }}>\r\n                <a\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    fontSize: \"16px\",\r\n                    letterSpacing: \"0.07em\",\r\n                    color: \"#666171\",\r\n                  }}\r\n                  onClick={showRegister}\r\n                >\r\n                  Register\r\n                </a>\r\n              </li>\r\n\r\n              <li style={{ marginTop: \"10px\" }}>\r\n                <a\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    fontSize: \"16px\",\r\n                    letterSpacing: \"0.07em\",\r\n                    color: \"#666171\",\r\n                    whiteSpace: \"nowrap\",\r\n                  }}\r\n                  href='#0'\r\n                >\r\n                  Terms and conditions\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='col-md-4 margin-for-mobile'>\r\n            <p\r\n              style={{\r\n                letterSpacing: \"0.15em\",\r\n                color: \"#302F31\",\r\n                fontWeight: \"700\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            >\r\n              BUSINESS HOURS\r\n            </p>\r\n            {renderBusinessHours()}\r\n          </div>\r\n        </div>\r\n        {/* End row */}\r\n        <div className='row'>\r\n          <div className='col-md-12'>\r\n            <div id='social_footer'>\r\n              <ul>\r\n                <li>\r\n                  <a href='#0'>\r\n                    <img\r\n                      src={FacebookIcon}\r\n                      style={{ height: \"35px\", width: \"35px\" }}\r\n                    />\r\n                  </a>\r\n                </li>\r\n\r\n                <li>\r\n                  <a href='#0'>\r\n                    <img\r\n                      src={TwitterIcon}\r\n                      style={{ height: \"35px\", width: \"35px\" }}\r\n                    />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href='#0'>\r\n                    <img\r\n                      src={InstagramIcon}\r\n                      style={{ height: \"35px\", width: \"35px\" }}\r\n                    />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              <p style={{ fontSize: \"16px\", fontWeight: \"500\" }}>© zotto {n}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* End row */}\r\n      </div>\r\n      {/* End container */}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\RestaurantList.jsx",["456","457","458"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n// import RestaurantInformation from \"../RestaurantInformation\";\r\nimport { setSelectedRestaurant } from \"../../state-management/main/actions\";\r\nimport {\r\n  setLoadingDisplay,\r\n  clearMenuState,\r\n  clearState,\r\n  showHideOverlay,\r\n} from \"../../state-management/menu/actions\";\r\nimport {\r\n  fetchRestuarantInformation,\r\n  fetchRestuarantList,\r\n} from \"../../state-management/main/asyncActions\";\r\n// import \"./RestaurantList.scss\";\r\nimport Restaurants from \"./Restaurants/\";\r\nimport PageNotFound from \"../../components/PageNotFound/PageNotFound\";\r\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\nimport RestaurantInformation from \"../RestaurantInformation/RestaurantInformation\";\r\nimport Login from \"../../components/Login/Login\";\r\n// import { LoadingBar } from \"../../components/LoadingBar\";\r\n\r\nclass RestaurantList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { showLoading: true };\r\n    this.initialize();\r\n  }\r\n\r\n  async initialize() {\r\n    const param = window.location.href.split(\"feedmii/?/\")[1];\r\n\r\n    if (param) {\r\n      const restOrChainId = param.split(\"=\")[0];\r\n      const chainText = param.split(\"=\")[1];\r\n\r\n      if (!chainText) {\r\n        this.setState({ showLoading: false });\r\n        this.props.setLoadingDisplay(true);\r\n\r\n        return;\r\n      }\r\n      const value = chainText.split(\"/\")[0];\r\n\r\n      if (restOrChainId === \"chainId\") {\r\n        this.fetchRestaurantList(value);\r\n      } else {\r\n        const { payload } = await this.props.fetchRestuarantInformation(value);\r\n\r\n        if (payload) {\r\n          this.props.setSelectedRestaurant(payload[0], value);\r\n        }\r\n        this.props.setLoadingDisplay(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchRestaurantList(chainId) {\r\n    await this.props.fetchRestuarantList(chainId);\r\n    this.setState({ showLoading: false });\r\n    this.props.setLoadingDisplay(true);\r\n  }\r\n\r\n  handleHomeClick = (chainId) => {\r\n    this.setState({ showLoading: true });\r\n    this.props.setLoadingDisplay(false);\r\n    this.props.clearMenuState();\r\n    this.fetchRestaurantList(chainId);\r\n    window.location.replace(\r\n      `${process.env.REACT_APP_PUBLIC_URL}chainId=${chainId}`\r\n    );\r\n  };\r\n\r\n  renderRestaurantList() {\r\n    return <Restaurants restaurants={this.props.restaurants} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.REACT_APP_PUBLIC_URL}>\r\n        {this.props.canShow ? (\r\n          <div className={\"restaurant-list-container\"}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                {this.props.restId ? (\r\n                  <Redirect to={`/restId=${this.props.restId}`} />\r\n                ) : (\r\n                  this.renderRestaurantList()\r\n                )}\r\n              </Route>\r\n              <Route\r\n                exact\r\n                path={`/chainId=${this.props.chainId}`}\r\n                children={this.renderRestaurantList()}\r\n              />\r\n              {/* <Route path=\"*\">\r\n                <PageNotFound />\r\n              </Route> */}\r\n              {/* Should fimd a way to redirect 404 */}\r\n            </Switch>\r\n\r\n            {console.log(\"selectedRestaurant\", this.props.selectedRestaurant)}\r\n            {this.props.selectedRestaurant ? (\r\n              <RestaurantInformation\r\n                timezone={this.props.selectedRestaurant.timezone}\r\n                restaurantId={this.props.restId}\r\n                onHomeClick={this.handleHomeClick}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ main, menu }) {\r\n  return {\r\n    restaurants: main.restaurants,\r\n    chainId: main.chainId,\r\n    restId: main.restId,\r\n    canShow: menu.canShow,\r\n    displayAddressModal: menu.displayAddressModal,\r\n    selectedRestaurant: main.selectedRestaurant,\r\n    showHideOverlay: menu.showHideOverlay,\r\n    previousSelectedRestaurantId: menu.restaurantId,\r\n  };\r\n}\r\n\r\nexport const mapDispatchToProps = {\r\n  setSelectedRestaurant,\r\n  fetchRestuarantInformation,\r\n  setLoadingDisplay,\r\n  fetchRestuarantList,\r\n  clearMenuState,\r\n  showHideOverlay,\r\n  clearState,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\operations.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\operations.js",["459","460","461","462","463","464","465","466","467","468","469","470","471","472"],"export function getBusinessHours(payload) {\r\n  if (!payload.business_hours) {\r\n    return \"00:00 - 23:59\";\r\n  }\r\n  const options = {\r\n    timeZone: payload.timezone,\r\n    weekday: \"long\",\r\n  };\r\n\r\n  const currentDay = new Date().toLocaleString(\"en-SG\", options);\r\n  const businessHours = payload.business_hours.find(\r\n    (bHour) => bHour.day_name === currentDay\r\n  );\r\n\r\n  console.log(\"what is bhour\", businessHours);\r\n  if (businessHours) {\r\n    const { from, to } = businessHours;\r\n    const opening = from.substr(0, from.lastIndexOf(\":\"));\r\n    const closing = to.substr(0, to.lastIndexOf(\":\"));\r\n    const businessHour = `${opening} - ${closing}`;\r\n    const isClosed = businessHour === \"00:00 - 00:00\";\r\n\r\n    console.log(\"isClosed in operation\", isClosed);\r\n\r\n    return {\r\n      opening,\r\n      closing,\r\n      businessHour,\r\n      isClosed,\r\n    };\r\n  }\r\n\r\n  return {\r\n    businessHour: \"\",\r\n    opening: \"\",\r\n    closing: \"\",\r\n    isClosed: false,\r\n  };\r\n}\r\n\r\nexport function getClosedForWeekday(payload, timezone) {\r\n  console.log(\"timezon in operation\", timezone);\r\n  var moment = require(\"moment-timezone\");\r\n  const options = {\r\n    timeZone: timezone,\r\n    weekday: \"long\",\r\n  };\r\n\r\n  var x = moment.tz(moment(), `${timezone}`).format(\"HH:mm\");\r\n  var current_time = x.substr(0, x.lastIndexOf(\":\"));\r\n  const current_day = new Date().toLocaleString(\"en-SG\", options);\r\n  const daytime = [];\r\n\r\n  payload.map((val) => {\r\n    if (val.type == \"DAYTIME\") {\r\n      daytime.push(val);\r\n    }\r\n  });\r\n\r\n  for (let val of daytime) {\r\n    const options = {\r\n      timeZone: timezone,\r\n      weekday: \"long\",\r\n    };\r\n\r\n    const current_day = new Date().toLocaleString(\"en-SG\", options);\r\n    const weekDays = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n    var moment = require(\"moment-timezone\");\r\n\r\n    var x = moment.tz(moment(), `${timezone}`).format(\"HH:mm\");\r\n    var current_time = x.substr(0, x.lastIndexOf(\":\"));\r\n\r\n    var y = val.time_from;\r\n    var a = y.substr(0, y.lastIndexOf(\":\"));\r\n    var z = val.time_to;\r\n    var b = z.substr(0, z.lastIndexOf(\":\"));\r\n\r\n    var from = a.substr(0, a.lastIndexOf(\":\"));\r\n    var to = b.substr(0, b.lastIndexOf(\":\"));\r\n\r\n    console.log(\"today is\", current_time);\r\n    console.log(\"today is\", from);\r\n    console.log(\"today is\", to);\r\n    console.log(\"today is\", current_day);\r\n\r\n    if (\r\n      current_day === weekDays[val.week_day] &&\r\n      current_time >= from &&\r\n      current_time <= to\r\n    ) {\r\n      return {\r\n        isClosedForWeekday: true,\r\n        messageForWeekday: `we are closed on every ${\r\n          weekDays[val.week_day]\r\n        } between ${from > 12 ? `${from - 12} PM` : `${from} AM`} to ${\r\n          to > 12 ? `${to - 12} PM` : `${to} AM`\r\n        }`,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function getClosedForMonth(payload, timezone) {\r\n  var moment = require(\"moment-timezone\");\r\n  const options = {\r\n    timeZone: timezone,\r\n    weekday: \"long\",\r\n  };\r\n\r\n  var x = moment.tz(moment(), `${timezone}`).format(\"HH:mm\");\r\n  var current_time = x.substr(0, x.lastIndexOf(\":\"));\r\n  const current_day = new Date().toLocaleString(\"en-SG\", options);\r\n  const datetime = [];\r\n\r\n  payload.map((val) => {\r\n    if (val.type == \"DATETIME\") {\r\n      datetime.push(val);\r\n    }\r\n  });\r\n\r\n  for (let val of datetime) {\r\n    var date_obj = new Date().toISOString().slice(0, 10);\r\n    var off = val.close_date;\r\n    var y = val.time_from;\r\n    var a = y.substr(0, y.lastIndexOf(\":\"));\r\n    var z = val.time_to;\r\n    var b = z.substr(0, z.lastIndexOf(\":\"));\r\n\r\n    var from = a.substr(0, a.lastIndexOf(\":\"));\r\n    var to = b.substr(0, b.lastIndexOf(\":\"));\r\n    var date_off = off.slice(8);\r\n    var dateObj = date_obj.slice(8);\r\n\r\n    console.log(\"Date time api\", date_off);\r\n\r\n    console.log(\"Date time current\", dateObj);\r\n    if (date_off == dateObj && current_time >= from && current_time <= to) {\r\n      return {\r\n        isClosedForMonth: true,\r\n        messageForMonth: `we are closed on ${date_off}th of every month between ${\r\n          from > 12 ? `${from - 12} PM` : `${from} AM`\r\n        } to ${to > 12 ? `${to - 12} PM` : `${to} AM`}`,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function getClosedForOnceAMonth(payload, timezone) {\r\n  var moment = require(\"moment-timezone\");\r\n  const options = {\r\n    timeZone: timezone,\r\n    weekday: \"long\",\r\n  };\r\n\r\n  var x = moment.tz(moment(), `${timezone}`).format(\"HH:mm\");\r\n  var current_time = x.substr(0, x.lastIndexOf(\":\"));\r\n  const current_day = new Date().toLocaleString(\"en-SG\", options);\r\n  const once = [];\r\n\r\n  payload.map((val) => {\r\n    if (val.type == \"ONCE\") {\r\n      once.push(val);\r\n    }\r\n  });\r\n\r\n  for (let val of once) {\r\n    var date_off = val.close_date;\r\n    var dateObj = new Date().toISOString().slice(0, 10);\r\n    var y = val.time_from;\r\n    var a = y.substr(0, y.lastIndexOf(\":\"));\r\n    var z = val.time_to;\r\n    var b = z.substr(0, z.lastIndexOf(\":\"));\r\n\r\n    var from = a.substr(0, a.lastIndexOf(\":\"));\r\n    var to = b.substr(0, b.lastIndexOf(\":\"));\r\n\r\n    console.log(\"Date time api\", date_off);\r\n\r\n    console.log(\"Date time current\", dateObj);\r\n    if (date_off == dateObj && current_time >= from && current_time <= to) {\r\n      return {\r\n        isClosedForOnceAMonth: true,\r\n        messageForOnceAMonth: `we are closed on ${date_off} between ${\r\n          from > 12 ? `${from - 12} PM` : `${from} AM`\r\n        } to ${to > 12 ? `${to - 12} PM` : `${to} AM`}`,\r\n      };\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\operations.js",["473","474","475","476","477","478"],"import { getModifierIds, getDetours, isSameItem, getDetoursIds } from \"./utils\";\r\nimport { truncateDecimal } from \"./utils\";\r\n\r\nexport function updateMenuItemsWithCart(menuList, cart) {\r\n  const updatedItems = menuList.map((item) => {\r\n    const cartItems = cart.filter(({ id }) => item.id === id);\r\n    //console.log(\"item in update item\", item);\r\n    console.log(\"item in update cartitem\", cartItems);\r\n\r\n    // cartItems.reduce((acc, item) => {\r\n    //   console.log(\"acc is\", acc);\r\n    //   console.log(\"acc item is\", item);\r\n    // });\r\n\r\n    const totalQty = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n    const totalHappyHourQty = cartItems.reduce(\r\n      (acc, item) => acc + (item.happyHourItem ? item.happyHourItem.qty : 0),\r\n      0\r\n    );\r\n    const cartItemsWithNonZeroQty = cartItems.filter((item) => item.qty > 0);\r\n\r\n    if (cartItems.length) {\r\n      return {\r\n        ...item,\r\n        ...cartItems[0],\r\n        subTotal:\r\n          cartItems.reduce((acc, item) => acc + item.subTotal, 0) ||\r\n          Number(item.price),\r\n        qty:\r\n          cartItems.length > 1 ? totalQty : cartItems[cartItems.length - 1].qty,\r\n        similarItems: cartItemsWithNonZeroQty.length\r\n          ? cartItemsWithNonZeroQty\r\n          : [],\r\n        happyHourItem:\r\n          cartItems[cartItems.length - 1].happyHourItem &&\r\n          totalHappyHourQty !== 0\r\n            ? {\r\n                ...cartItems[cartItems.length - 1].happyHourItem,\r\n                qty:\r\n                  cartItems.length > 1\r\n                    ? totalHappyHourQty\r\n                    : cartItems[cartItems.length - 1].happyHourItem.qty,\r\n              }\r\n            : null,\r\n      };\r\n    }\r\n\r\n    return getInitialMenuItem(item);\r\n  });\r\n\r\n  return updatedItems;\r\n}\r\n\r\nexport function updatePizzaItemsWithCart(pizzaList, cart) {\r\n  const updatedItems = pizzaList.map((item) => {\r\n    const cartItems = cart.filter(({ id }) => item.pizza_id === id);\r\n    const totalQty = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n    const totalHappyHourQty = cartItems.reduce(\r\n      (acc, item) => acc + (item.happyHourItem ? item.happyHourItem.qty : 0),\r\n      0\r\n    );\r\n    const cartItemsWithNonZeroQty = cartItems.filter((item) => item.qty > 0);\r\n\r\n    if (cartItems.length) {\r\n      return {\r\n        ...item,\r\n        ...cartItems[0],\r\n        subTotal:\r\n          cartItems.reduce((acc, item) => acc + item.subTotal, 0) ||\r\n          Number(item.price),\r\n        qty:\r\n          cartItems.length > 1 ? totalQty : cartItems[cartItems.length - 1].qty,\r\n        similarItems: cartItemsWithNonZeroQty.length\r\n          ? cartItemsWithNonZeroQty\r\n          : [],\r\n        happyHourItem:\r\n          cartItems[cartItems.length - 1].happyHourItem &&\r\n          totalHappyHourQty !== 0\r\n            ? {\r\n                ...cartItems[cartItems.length - 1].happyHourItem,\r\n                qty:\r\n                  cartItems.length > 1\r\n                    ? totalHappyHourQty\r\n                    : cartItems[cartItems.length - 1].happyHourItem.qty,\r\n              }\r\n            : null,\r\n      };\r\n    }\r\n\r\n    return getInitialPizzaItem(item);\r\n  });\r\n\r\n  return updatedItems;\r\n}\r\n\r\nfunction getInitialMenuItem(item) {\r\n  return {\r\n    ...item,\r\n    similarItems: [],\r\n    modifiers: null,\r\n    subTotal: 0,\r\n    grandTotal: 0,\r\n    fmId: \"\",\r\n    omId: \"\",\r\n    detours: \"\",\r\n    qty: 0,\r\n    vat: 0,\r\n    tax: 0,\r\n    happyHourItem: null,\r\n    service_tax: 0,\r\n    local_tax: 0,\r\n    other_tax: 0,\r\n  };\r\n}\r\n\r\nfunction getInitialPizzaItem(item) {\r\n  return {\r\n    ...item,\r\n    similarItems: [],\r\n    modifiers: null,\r\n    subTotal: 0,\r\n    grandTotal: 0,\r\n    toppingIdx1: [],\r\n    baseId: null,\r\n    sizeId: null,\r\n    selectedBase: null,\r\n    defaultToppings: [],\r\n    optionalToppings: [],\r\n    firstHalf: null,\r\n    secondHalf: null,\r\n    qty: 0,\r\n    vat: 0,\r\n    tax: 0,\r\n    happyHourItem: null,\r\n    service_tax: 0,\r\n    local_tax: 0,\r\n    other_tax: 0,\r\n  };\r\n}\r\n\r\nexport function revertMenuItemsToInitialState(menuItems) {\r\n  return menuItems.map((menuItem) => getInitialMenuItem(menuItem));\r\n}\r\n\r\nexport function revertCartItemsToInitialState(pizzaItems) {\r\n  return pizzaItems.map((pizzaItem) => getInitialPizzaItem(pizzaItem));\r\n}\r\n\r\nfunction getNewQuantity(itemExisted, qty, buyQty, getQty) {\r\n  if (itemExisted.happyHourItem && itemExisted.happyHourItem.qty) {\r\n    if (buyQty > getQty) {\r\n      return qty % (buyQty + getQty) === 0\r\n        ? (qty / (buyQty + getQty)) * getQty\r\n        : itemExisted.happyHourItem.freeQty;\r\n    } else if (buyQty === getQty) {\r\n      const reminder = qty % (buyQty + getQty);\r\n\r\n      return reminder > buyQty || reminder === 0\r\n        ? (itemExisted.happyHourItem.freeQty || 0) + 1\r\n        : itemExisted.happyHourItem.freeQty || 0;\r\n    } else {\r\n      const val = qty % (buyQty + getQty);\r\n\r\n      if (val && val % getQty === 0) {\r\n        return (\r\n          (itemExisted.happyHourItem.freeQty || 0) +\r\n          (qty % (buyQty + getQty)) / getQty\r\n        );\r\n      } else if (qty % (buyQty + getQty) === 0) {\r\n        return (qty / (buyQty + getQty)) * getQty;\r\n      }\r\n\r\n      return itemExisted.happyHourItem.freeQty;\r\n    }\r\n  }\r\n\r\n  return itemExisted.happyHourItem ? itemExisted.happyHourItem.freeQty : 0;\r\n}\r\n\r\nfunction getHappyHoursSubTotalAndQuantity(item) {\r\n  switch (item.happyHourDetail.type) {\r\n    case \"Discount\": {\r\n      const newTotal = item.grandTotal / item.qty || Number(item.price);\r\n      const grandTotal =\r\n        item.grandTotal -\r\n        item.qty * (newTotal * (Number(item.happyHourDetail.discount) / 100));\r\n\r\n      return {\r\n        subTotal: grandTotal - item.tax,\r\n        grandTotal,\r\n        qty: item.qty,\r\n      };\r\n    }\r\n    case \"Amount\": {\r\n      const grandTotal =\r\n        item.grandTotal -\r\n        Number(item.qty) * Number(item.happyHourDetail.amount);\r\n\r\n      return {\r\n        subTotal: grandTotal - item.tax,\r\n        grandTotal,\r\n        qty: item.qty,\r\n      };\r\n    }\r\n    default: {\r\n      const buyQty = Number(item.happyHourDetail[\"buy_qty\"]);\r\n      const getQty = Number(item.happyHourDetail[\"get_qty\"]);\r\n\r\n      if (item.qty >= buyQty) {\r\n        const freeQty = getNewQuantity(item, item.qty, buyQty, getQty);\r\n        const freeSubTotal = freeQty\r\n          ? item.subTotal - freeQty * (item.subTotal / item.qty)\r\n          : item.subTotal;\r\n        const freeGrandTotal = freeQty\r\n          ? item.grandTotal - freeQty * (item.grandTotal / item.qty)\r\n          : item.grandTotal;\r\n\r\n        return {\r\n          qty: item.qty,\r\n          subTotal: freeSubTotal,\r\n          grandTotal: freeGrandTotal,\r\n          freeQty,\r\n        };\r\n      }\r\n\r\n      return {\r\n        subTotal: item.subTotal,\r\n        grandTotal: item.grandTotal,\r\n        qty: item.qty,\r\n        freeQty: 0,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function addItem(\r\n  item,\r\n  modifiers,\r\n  subTotal,\r\n  menuList,\r\n  cart,\r\n  restaurantInfo,\r\n  pizzas\r\n) {\r\n  // console.log(\"modifiers in opertaion\", modifiers.forcedModifier[0]);\r\n\r\n  console.log(\"subTotal is\", subTotal);\r\n\r\n  const itemFmId = modifiers\r\n    ? getModifierIds(modifiers.forcedModifier) || item.fmId\r\n    : \"\";\r\n  const itemOmId = modifiers\r\n    ? getModifierIds(modifiers.optionalModifier) || item.omId\r\n    : \"\";\r\n  const itemDetours = modifiers ? getDetours(modifiers.forcedModifier) : \"\";\r\n  //const detourid = getDetoursIds(modifiers.forcedModifier) || item.detours;\r\n  console.log(\"current item is\", item);\r\n  const itemExisted = cart.find((cartItem) =>\r\n    isSameItem(item, modifiers, cartItem)\r\n  );\r\n  const { isHappyHourActive } = item;\r\n  console.log(\"itemFmId opertaion\", itemFmId);\r\n  console.log(\"itemExisted opertaion\", itemExisted);\r\n  // console.log(\"id of itemDetours opertaion\", detoursIds);\r\n  const minQty = Number(item.min_qty) === 0 ? 1 : Number(item.min_qty);\r\n  //var newItem;\r\n\r\n  // if (!itemExisted) {\r\n  //   var newItem = {\r\n  //     ...item,\r\n  //     qty: minQty,\r\n  //     fmId: itemFmId,\r\n  //     omId: itemOmId,\r\n  //     detours: itemDetours,\r\n  //     // selectedDetourId: detoursIds,\r\n  //     modifiers,\r\n  //     subTotal: subTotal * minQty || Number(item.price) * minQty,\r\n  //     happyHourItem: null,\r\n  //   };\r\n  // } else if (itemFmId && itemExisted) {\r\n  //   if (!itemFmId && itemExisted) {\r\n  //     var newItem = {\r\n  //       ...itemExisted,\r\n  //       qty: itemExisted.qty + 1,\r\n\r\n  //       subTotal:\r\n  //         itemExisted.subTotal +\r\n  //         (item.subTotal / itemExisted.qty || Number(item.price)),\r\n  //     };\r\n  //   } else if (itemExisted.modifiers !== null) {\r\n  //     var newItem = {\r\n  //       ...itemExisted,\r\n  //       qty: itemExisted.qty + 1,\r\n\r\n  //       subTotal: item.subTotal - itemExisted.subTotal / itemExisted.qty + 1,\r\n  //     };\r\n  //   }\r\n  // }\r\n\r\n  let newItem = itemExisted\r\n    ? {\r\n        ...itemExisted,\r\n        qty: itemExisted.qty + 1,\r\n\r\n        // subTotal:\r\n        //   itemExisted.subTotal +\r\n        //   (item.subTotal / itemExisted.qty || Number(item.price)),\r\n\r\n        subTotal:\r\n          (itemExisted.subTotal / itemExisted.qty) * (itemExisted.qty + 1),\r\n      }\r\n    : {\r\n        ...item,\r\n        qty: minQty,\r\n        fmId: itemFmId,\r\n        omId: itemOmId,\r\n        detours: itemDetours,\r\n        // selectedDetourId: detoursIds,\r\n        modifiers,\r\n        subTotal: subTotal * minQty || Number(item.price) * minQty,\r\n        happyHourItem: null,\r\n      };\r\n\r\n  console.log(\"new Item\", newItem);\r\n  const taxes = getTaxes(item, newItem.subTotal, restaurantInfo);\r\n\r\n  newItem = {\r\n    ...newItem,\r\n    grandTotal: newItem.subTotal + taxes.tax,\r\n    ...taxes,\r\n  };\r\n\r\n  newItem = {\r\n    ...newItem,\r\n    happyHourItem: isHappyHourActive\r\n      ? {\r\n          ...getHappyHoursSubTotalAndQuantity(newItem),\r\n          ...taxes,\r\n        }\r\n      : null,\r\n  };\r\n\r\n  const updatedCart = itemExisted\r\n    ? cart.map((item) => {\r\n        if (isSameItem(newItem, modifiers, item)) {\r\n          if (!modifiers) {\r\n            return newItem;\r\n          }\r\n          console.log(\"old item\", item);\r\n          console.log(\"old new item\", newItem);\r\n          if (modifiers) {\r\n            var old_modifier_array = [];\r\n            var new_modifier_array = [];\r\n            item.modifiers.forcedModifier.map((currval, i) => {\r\n              new_modifier_array.push(currval.optionalModifiers);\r\n            });\r\n\r\n            modifiers.forcedModifier.map((currval, i) => {\r\n              old_modifier_array.push(currval.optionalModifiers);\r\n            });\r\n\r\n            console.log(\"old item\", old_modifier_array);\r\n            console.log(\"old new item\", new_modifier_array);\r\n\r\n            if (old_modifier_array[0].length == new_modifier_array[0].length) {\r\n              return newItem;\r\n            } else {\r\n              return item;\r\n            }\r\n          }\r\n        } else if (!itemExisted && newItem.id === item.id) {\r\n          return {\r\n            ...item,\r\n            grandTotal: subTotal + taxes.taxSubtotal,\r\n            ...taxes,\r\n          };\r\n        }\r\n\r\n        return item;\r\n      })\r\n    : [...cart, newItem];\r\n  console.log(\"updated cart\", updatedCart);\r\n\r\n  return {\r\n    cart: updatedCart,\r\n    menuItems: updateMenuItemsWithCart(menuList, updatedCart),\r\n    pizzas: updatePizzaItemsWithCart(pizzas, updatedCart),\r\n  };\r\n}\r\n\r\nfunction getHappyHourDetailsForRemovedItem(item, qty) {\r\n  switch (item.happyHourDetail.type) {\r\n    case \"Amount\":\r\n    case \"Discount\": {\r\n      const subTotal =\r\n        item.happyHourItem.subTotal - item.happyHourItem.subTotal / item.qty;\r\n      const grandTotal =\r\n        item.happyHourItem.grandTotal -\r\n        item.happyHourItem.grandTotal / item.qty;\r\n\r\n      return {\r\n        subTotal,\r\n        grandTotal,\r\n        qty,\r\n      };\r\n    }\r\n    default: {\r\n      const happyQty = item.happyHourItem.qty - item.happyHourItem.freeQty;\r\n      const happySubTotal =\r\n        item.happyHourItem.subTotal - item.happyHourItem.subTotal / happyQty;\r\n      const happyGrandTotal =\r\n        item.happyHourItem.grandTotal -\r\n        item.happyHourItem.grandTotal / happyQty;\r\n      const buyQty = Number(item.happyHourDetail[\"buy_qty\"]);\r\n      const getQty = Number(item.happyHourDetail[\"get_qty\"]);\r\n      const reminder = item.happyHourItem.qty % (buyQty + getQty);\r\n\r\n      if (\r\n        (item.happyHourItem.freeQty &&\r\n          ((buyQty > getQty &&\r\n            item.happyHourItem.qty % (buyQty + getQty) === 0) ||\r\n            (buyQty < getQty &&\r\n              (item.happyHourItem.qty % (buyQty + getQty)) % getQty === 0))) ||\r\n        (buyQty === getQty && (reminder === 0 || reminder > buyQty))\r\n      ) {\r\n        return {\r\n          qty,\r\n          freeQty: item.happyHourItem.freeQty - 1,\r\n          subTotal: item.happyHourItem.subTotal,\r\n          grandTotal: item.happyHourItem.grandTotal,\r\n        };\r\n      }\r\n\r\n      return {\r\n        qty,\r\n        freeQty: item.happyHourItem.freeQty,\r\n        subTotal: happySubTotal,\r\n        grandTotal: happyGrandTotal,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeItem(item, menuList, cart, restaurantInfo, pizzas) {\r\n  const updatedCart = cart.map((cartItem) => {\r\n    if (isSameItem(item, item.modifiers, cartItem)) {\r\n      const minQty = Number(item.min_qty) === 0 ? 1 : Number(item.min_qty);\r\n\r\n      let subtractQty = 1;\r\n\r\n      if (minQty > 0 && cartItem.qty === minQty) {\r\n        subtractQty = minQty;\r\n      }\r\n      const qty = cartItem.qty - subtractQty;\r\n      const subTotal = cartItem.subTotal - cartItem.subTotal / cartItem.qty;\r\n      const { isHappyHourActive } = cartItem;\r\n      const taxes = getTaxes(item, subTotal, restaurantInfo);\r\n      const happyHrDetails =\r\n        cartItem.happyHourItem && isHappyHourActive\r\n          ? getHappyHourDetailsForRemovedItem(\r\n              cartItem,\r\n              qty,\r\n              subTotal,\r\n              taxes.tax\r\n            )\r\n          : null;\r\n\r\n      return {\r\n        ...cartItem,\r\n        qty,\r\n        subTotal: qty > 0 ? subTotal : 0,\r\n        grandTotal: qty > 0 ? subTotal + taxes.tax : 0,\r\n        fmId: qty > 0 ? cartItem.fmId : \"\",\r\n        omId: qty > 0 ? cartItem.omId : \"\",\r\n        detours: qty > 0 ? cartItem.detours : \"\",\r\n        modifiers: qty > 0 ? item.modifiers : null,\r\n        ...taxes,\r\n        happyHourItem:\r\n          qty && isHappyHourActive && happyHrDetails && happyHrDetails.qty\r\n            ? {\r\n                ...happyHrDetails,\r\n                ...taxes,\r\n              }\r\n            : null,\r\n      };\r\n    }\r\n\r\n    return cartItem;\r\n  });\r\n\r\n  return {\r\n    cart: updatedCart.filter((item) => item.qty > 0),\r\n    menuItems: updateMenuItemsWithCart(menuList, updatedCart),\r\n    pizzas: updatePizzaItemsWithCart(pizzas, updatedCart),\r\n  };\r\n}\r\n\r\nexport function removeCartItem(item, menuList, pizzas, cart) {\r\n  const updatedCart = cart.filter((_, i) => i !== item.index);\r\n  const updatedMenuItems = menuList.map((menuItem) => {\r\n    if (menuItem.id === item.id) {\r\n      return getInitialMenuItem(menuItem);\r\n    }\r\n\r\n    return menuItem;\r\n  });\r\n\r\n  const updatedPizzaItems = pizzas.map((pizza) => {\r\n    if (pizza.pizza_id === item.id) {\r\n      return getInitialPizzaItem(pizza);\r\n    }\r\n\r\n    return pizza;\r\n  });\r\n\r\n  return {\r\n    cart: updatedCart,\r\n    menuItems:\r\n      item.qty > 0\r\n        ? updateMenuItemsWithCart(menuList, updatedCart)\r\n        : updatedMenuItems,\r\n    pizzas:\r\n      item.qty > 0 && item.isPizza\r\n        ? updatePizzaItemsWithCart(pizzas, updatedCart)\r\n        : updatedPizzaItems,\r\n  };\r\n}\r\n\r\nexport function getTaxes(item, subTotal, restaurantInfo) {\r\n  const {\r\n    is_localtax: isLocal,\r\n    is_othertax: isOther,\r\n    is_vat: isVat,\r\n    is_servicetax: isService,\r\n  } = item;\r\n  const {\r\n    local_tax: localTax,\r\n    vat: vatAmt,\r\n    service_tax: serviceTax,\r\n    other_tax: otherTax,\r\n  } = restaurantInfo;\r\n  const service = Number(isService) ? subTotal * (Number(serviceTax) / 100) : 0;\r\n  const vat = Number(isVat) ? subTotal * (Number(vatAmt) / 100) : 0;\r\n  const local = Number(isLocal) ? subTotal * (Number(localTax) / 100) : 0;\r\n  const other = Number(isOther) ? subTotal * (Number(otherTax) / 100) : 0;\r\n  const tax = service + vat + local + other;\r\n\r\n  return {\r\n    vatAmt: vat,\r\n    tax,\r\n    serviceTax: service,\r\n    localTax: local,\r\n    otherTax: other,\r\n  };\r\n}\r\n\r\nexport function getPizzaActualPrice(pizza, price, restaurantInfo) {\r\n  const isPriceWithoutTax = Number(restaurantInfo[\"price_without_tax_flag\"]);\r\n\r\n  return isPriceWithoutTax\r\n    ? Number(price)\r\n    : truncateDecimal(\r\n        Number(price) +\r\n          Number(getTaxes(pizza, Number(price), restaurantInfo).tax)\r\n      );\r\n}\r\n\r\nexport function getSelectedCategoryId(categoryList) {\r\n  console.log(\"sub cate in operations\", categoryList);\r\n  if (categoryList.length) {\r\n    const subCategory = categoryList[0][\"sub_category\"]\r\n      ? categoryList[0][\"sub_category\"][0]\r\n      : null;\r\n\r\n    return subCategory ? subCategory[\"category_id\"] : \"\";\r\n  }\r\n}\r\n\r\n// happy hours related.\r\nexport function updateHappyHourInfoToMenuItems(menuList, restInfo, happyHours) {\r\n  // check for each Item if happy hour is avaliable\r\n  // If available then add happy hour related info in item object\r\n  // like happy hour data(type, discount) , time left for availing offer\r\n\r\n  const menuItems = menuList.map(function (item) {\r\n    const result = isAvailableInHappyHours(item, restInfo, happyHours);\r\n    // if item don't have offer Id return as it is\r\n\r\n    if (!result.isHappyHourActive) {\r\n      item.isHappyHourActive = false;\r\n    } else {\r\n      // update happy hours details Item object and return\r\n      item.isHappyHourActive = true;\r\n      item.happyHourDetail = result.happyHourDetail;\r\n    }\r\n\r\n    return item;\r\n  });\r\n\r\n  return menuItems;\r\n}\r\n\r\nexport function isAvailableInHappyHours(item, restInfo, happyHours) {\r\n  // check if this item is available in happy hours or not\r\n  const result = {\r\n    isHappyHourActive: false,\r\n    happyHourDetail: {},\r\n    timeoutIndex: 0,\r\n  };\r\n\r\n  const options = {\r\n    timeZone: restInfo.timezone,\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n    hour12: false,\r\n  };\r\n\r\n  const getRestaurantTimeNDay = new Date().toLocaleString(\"en-SG\", options);\r\n\r\n  const currentDay = getRestaurantTimeNDay.split(\",\")[0].trim();\r\n\r\n  const currentTime = getRestaurantTimeNDay.split(\",\")[2].trim();\r\n\r\n  const currentMonthDay = `${getRestaurantTimeNDay\r\n    .split(\",\")[1]\r\n    .trim()\r\n    .split(\" \")[0]\r\n    .trim()} ${getRestaurantTimeNDay\r\n    .split(\",\")[1]\r\n    .trim()\r\n    .split(\" \")[1]\r\n    .trim()}`;\r\n\r\n  const currentYear = getRestaurantTimeNDay\r\n    .split(\",\")[1]\r\n    .trim()\r\n    .split(\" \")[2]\r\n    .trim();\r\n\r\n  const happyHourIds = item.happy_hours_id.split(\",\");\r\n\r\n  let countDownTime;\r\n\r\n  let countDownDateTime;\r\n\r\n  let timeoutIndex = 0;\r\n\r\n  let found;\r\n\r\n  for (let i = 0; i < happyHourIds.length; i++) {\r\n    found = happyHours.find((element) => {\r\n      if (\r\n        element.happy_hours_id === happyHourIds[i] &&\r\n        isDayAvailable(currentDay, element) &&\r\n        isAvailableInTimeLimit(element, currentTime)\r\n      ) {\r\n        // if length is 1 then straight away return element\r\n        countDownTime = `${element.time_to}:00`;\r\n        countDownDateTime = `${currentDay}, ${currentMonthDay} ${currentYear}, ${countDownTime}`;\r\n\r\n        if (happyHourIds.length === 1) {\r\n          return element;\r\n        } else if (element.type === \"Buy_n_Get\") {\r\n          //\r\n          return element;\r\n        } else if (i === happyHourIds.length - 1) {\r\n          return element;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (found !== undefined) {\r\n    result.isHappyHourActive = true;\r\n    result.happyHourDetail = found;\r\n    result.happyHourDetail.countDownDate = countDownDateTime;\r\n    //setTimer(getRestaurantTimeNDay, countDownDateTime);\r\n    result.happyHourDetail.happyHourTimeOutIndex = timeoutIndex;\r\n    timeoutIndex++;\r\n\r\n    if (found.type === \"Buy_n_Get\") {\r\n      result.happyHourDetail.happyHourDisplayText = `Pay for ${Number(\r\n        found.buy_qty\r\n      )} get upto ${Number(found.get_qty) + Number(found.buy_qty)}`;\r\n    } else if (found.type === \"Amount\") {\r\n      result.happyHourDetail.happyHourDisplayText = `Get ${restInfo.monetary_symbol} ${found.amount} Off`;\r\n    } else {\r\n      result.happyHourDetail.happyHourDisplayText = `Get ${found.discount}% Off`;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function isDayAvailable(day, happyHour) {\r\n  let result = false;\r\n  const found = happyHour.day\r\n    .split(\",\")\r\n    .find((element) => element.toLowerCase() === day.toLowerCase());\r\n\r\n  if (found !== undefined) {\r\n    result = true;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function isAvailableInTimeLimit(item, time) {\r\n  const currentHour = parseInt(time.split(\":\")[0]);\r\n\r\n  const currentMinute = parseInt(time.split(\":\")[1]);\r\n\r\n  const timeFromHour = parseInt(item.time_from.split(\":\")[0]);\r\n\r\n  const timeFromMinute = parseInt(item.time_from.split(\":\")[1]);\r\n\r\n  const timeToHour = parseInt(item.time_to.split(\":\")[0]);\r\n\r\n  const timeToMinute = parseInt(item.time_to.split(\":\")[1]);\r\n\r\n  if (\r\n    (currentHour > timeFromHour ||\r\n      (currentHour === timeFromHour && currentMinute >= timeFromMinute)) &&\r\n    (currentHour < timeToHour ||\r\n      (currentHour === timeToHour && currentMinute <= timeToMinute))\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\utils\\localStorage.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\asyncActions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\index.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\LoadingBar\\LoadingBar.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\PageNotFound\\PageNotFound.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\RestaurantInformation.jsx",["479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport { modalNames } from \"../../components/AppModal/constants\";\r\nimport {\r\n  fetchCategories,\r\n  fetchMenuItems,\r\n  fetchPizzas,\r\n  fetchAllForcedModifiers,\r\n  fetchAllOptionalModifiers,\r\n  fetchHappyHours,\r\n  fetchCoupons,\r\n} from \"../../state-management/menu/asyncActions\";\r\nimport {\r\n  setLoadingDisplay,\r\n  addItem,\r\n  removeItem,\r\n  setSearchQuery,\r\n  initializeStoreState,\r\n  clearState,\r\n  clearMenuState,\r\n  displayAddressModal,\r\n} from \"../../state-management/menu/actions\";\r\nimport {\r\n  fetchRestuarantInformation,\r\n  fetchRestuarantList,\r\n  fetchRestuarantDeliveryRange,\r\n  fetchClosedInformation,\r\n} from \"../../state-management/main/asyncActions\";\r\nimport { fetchAddressesList } from \"../../state-management/user/asyncActions\";\r\nimport { setSelectedRestaurant } from \"../../state-management/main/actions\";\r\nimport {\r\n  showLoginFormMethod,\r\n  setSelectedAddress,\r\n} from \"../../state-management/user/actions\";\r\nimport { getFilterredList } from \"../../state-management/menu/selectors\";\r\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\nimport Information from \"./Information/Information\";\r\nimport MyOrders from \"../../components/MyOrders/MyOrders\";\r\nimport MyProfile from \"../../components/MyProfile/MyProfile\";\r\nimport ManageAddress from \"../../components/ManageAddress/ManageAddress\";\r\nimport Checkout from \"../../components/Checkout/Checkout\";\r\nimport OrderSuccess from \"../../components/OrderSuccess/OrderSuccess\";\r\nimport PaymentFailed from \"../../components/Checkout/PaymentFailed\";\r\nimport AppModal from \"../../components/AppModal/AppModal\";\r\n//import LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport {\r\n  postMyProfileForm,\r\n  postProfile,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport moment from \"moment\";\r\nconst RestaurantInformation = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const dataforcoupon = {\r\n    date: moment().format(\"yyyy-MM-DD\"),\r\n    restaurant_id: props.restaurantId,\r\n  };\r\n\r\n  const initialize = async () => {\r\n    await dispatch(initializeStoreState(props.restaurantId));\r\n    await dispatch(postMyProfileForm(user.user.clientId));\r\n    await dispatch(fetchHappyHours(props.restaurantId));\r\n    await dispatch(fetchMenuItems(props.restaurantId));\r\n    await dispatch(fetchCategories(props.restaurantId));\r\n\r\n    await dispatch(fetchClosedInformation(props.restaurantId, props.timezone));\r\n    await dispatch(\r\n      fetchCoupons(moment().format(\"yyyy-MM-DD\"), props.restaurantId)\r\n    );\r\n    setLoading(false);\r\n    await dispatch(fetchAllForcedModifiers(props.restaurantId));\r\n    await dispatch(fetchAllOptionalModifiers(props.restaurantId));\r\n    await dispatch(fetchPizzas(props.restaurantId));\r\n    await dispatch(fetchRestuarantDeliveryRange(props.restaurantId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"===================================\");\r\n    if (props.restaurantId) initialize();\r\n  }, [props.restaurantId]);\r\n\r\n  // console.log(\"user\",user, \"menu\",menu, \"main\", main);\r\n  const handleAddItem = (item, isHappyHoursActive) => {\r\n    const menuItems = menu.menuItems;\r\n    const itemsinmenu = menuItems.find(({ id }) => item.id === id);\r\n    console.log(\"items at the time of add\", itemsinmenu);\r\n\r\n    if (item.optional_modifier !== \"0\" || item.forced_modifier !== \"0\") {\r\n      if (itemsinmenu.qty) {\r\n        dispatch(\r\n          openModal(modalNames.INTERMEDIATE_ADD_MODAL, {\r\n            item: {\r\n              ...item,\r\n              isHappyHoursActive,\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          openModal(modalNames.DISH_MODAL, {\r\n            item: {\r\n              ...item,\r\n              isHappyHoursActive,\r\n            },\r\n          })\r\n        );\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    //this.props.addItem(item, null, 0, this.props.restaurantInfo);\r\n\r\n    dispatch(\r\n      addItem(\r\n        itemsinmenu,\r\n        itemsinmenu.modifiers || null,\r\n        0,\r\n        menu.restaurantInfo\r\n      )\r\n    );\r\n  };\r\n  const handleRemoveItem = (item) => {\r\n    dispatch(removeItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  };\r\n  const renderMenuItems = () => {\r\n    return (\r\n      <Information\r\n        searchQuery={menu.searchQuery}\r\n        categories={menu.categoriesList}\r\n        selectedCategoryId={menu.selectedCategoryId}\r\n        menuItems={menu.menuItems}\r\n        pizzas={menu.pizzas}\r\n        categoriesList={menu.categoriesList}\r\n        restaurantInfo={menu.restaurantInfo}\r\n        happyHours={menu.happyHours}\r\n        onAddItem={handleAddItem}\r\n        onRemoveItem={handleRemoveItem}\r\n        loading={loading}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* {console.log(\"ResInfo-props\", props)} */}\r\n      {/* {console.log(\"user\", user, \"menu\", menu, \"main\", main)} */}\r\n      {/* {loading && <LoadingBar />} */}\r\n      <AppModal />\r\n      <Switch>\r\n        <Route exact path={`/restId=${props.restaurantId}`}>\r\n          <Redirect to={`/restId=${props.restaurantId}/menu`} />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path={`/restId=${props.restaurantId}/menu`}\r\n          children={renderMenuItems()}\r\n        />\r\n        <Route exact path={`/restId=${props.restaurantId}/myProfile`}>\r\n          {user.user.isUserLoggedIn ? <MyProfile /> : null}\r\n          {/* <MyProfile /> */}\r\n        </Route>\r\n        <Route exact path={`/restId=${props.restaurantId}/manageAddress`}>\r\n          {user.user.isUserLoggedIn ? <ManageAddress /> : null}\r\n        </Route>\r\n        <Route exact path={`/restId=${props.restaurantId}/myOrders`}>\r\n          <MyOrders restaurantId={props.restaurantId} />\r\n        </Route>\r\n        <Route exact path={`/restId=${props.restaurantId}/checkout`}>\r\n          <ScrollToTop />\r\n          <Checkout\r\n            //orderId={generateOrderId()}\r\n            restaurantInfo={menu.restaurantInfo}\r\n            deliveryRange={main.deliveryRange}\r\n            //onAddItem={this.handleAddItem}\r\n            //onRemoveItem={this.handleRemoveItem}\r\n            //displayLogin={this.props.showLoginFormMethod}\r\n            //displayAddressModal={displayAddressModal}\r\n          />\r\n        </Route>{\" \"}\r\n        <Route exact path={`/restId=${props.restaurantId}/ordersuccess`}>\r\n          <OrderSuccess />\r\n        </Route>{\" \"}\r\n        <Route exact path={`/restId=${props.restaurantId}/paymentfailed`}>\r\n          <PaymentFailed />\r\n        </Route>{\" \"}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantInformation;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\utils.js",["498","499","500","501","502","503","504"],"export function getDetours(forcedModifers) {\r\n  console.log(\"modifiers in utils\", forcedModifers);\r\n  const detours = forcedModifers\r\n    ? forcedModifers.reduce((acc, fm) => {\r\n        const detour = fm.detour ? { [fm.id]: fm.detour } : [];\r\n\r\n        return detour.length\r\n          ? {\r\n              ...acc,\r\n              ...detour,\r\n            }\r\n          : acc;\r\n      }, {})\r\n    : \"\";\r\n  console.log(\"detours in utils\", detours);\r\n  return JSON.stringify(detours);\r\n}\r\n\r\nexport function getModifierIds(modifers) {\r\n  console.log(\"id of modifiers\", modifers);\r\n  return modifers ? modifers.map(({ id }) => id).join() : \"\";\r\n}\r\n\r\nexport function getDetoursIds(modifers) {\r\n  var temparr = [];\r\n  var array_id = [];\r\n  modifers.map((currval, i) => {\r\n    temparr.push(currval.optionalModifiers);\r\n  });\r\n\r\n  console.log(\"temp arr is\", temparr);\r\n  console.log(\"temp arr length\", temparr.length);\r\n\r\n  for (let i = 0; i < temparr.length; i++) {\r\n    console.log(\"temp\", temparr[i]);\r\n    var temp = [];\r\n    temp.push(temparr[i]);\r\n    console.log(\"temp is\", temp);\r\n    console.log(\"temp length\", temp[0].length);\r\n    for (let j = 0; j < temp[0].length; j++) {\r\n      console.log(\"value\", temparr[i][j].id);\r\n      array_id.push(temparr[i][j].id);\r\n    }\r\n  }\r\n\r\n  var string = array_id.toString();\r\n  return string;\r\n}\r\n\r\nexport function isSameItem(item1, modifiers, item2) {\r\n  console.log(\"item1\", item1);\r\n  console.log(\"item2\", item2);\r\n  //console.log(\"item2\", item2.modifiers.forcedModifier[0].optionalModifiers[0]);\r\n\r\n  // console.log(\"detour_val\", detour_val);\r\n  const sameId = item1.id === item2.id;\r\n  console.log(\"same id\", sameId);\r\n\r\n  if (modifiers) {\r\n    var current_string;\r\n    if (item2.fmId == \"\") {\r\n      var current_string = null;\r\n    } else {\r\n      var temparr = [];\r\n      var array_id = [];\r\n      item2.modifiers.forcedModifier.map((currval, i) => {\r\n        temparr.push(currval.optionalModifiers);\r\n      });\r\n\r\n      console.log(\"temp arr is\", temparr);\r\n      console.log(\"temp arr length\", temparr.length);\r\n\r\n      for (let i = 0; i < temparr.length; i++) {\r\n        console.log(\"temp\", temparr[i]);\r\n        var temp = [];\r\n        temp.push(temparr[i]);\r\n        console.log(\"temp is\", temp);\r\n        console.log(\"temp length\", temp[0].length);\r\n        for (let j = 0; j < temp[0].length; j++) {\r\n          console.log(\"value\", temparr[i][j].id);\r\n          array_id.push(temparr[i][j].id);\r\n        }\r\n      }\r\n\r\n      current_string = array_id.toString();\r\n    }\r\n    console.log(\"current_string is\", current_string);\r\n\r\n    //temp.push(item2.modifiers.forcedModifers);\r\n    const itemFmId = getModifierIds(modifiers.forcedModifier) || item1.fmId;\r\n    const itemOmId = getModifierIds(modifiers.optionalModifier) || item1.omId;\r\n    const itemDetours = getDetours(modifiers.forcedModifier) || item1.detours;\r\n    const detourid = getDetoursIds(modifiers.forcedModifier) || item1.detours;\r\n    console.log(\"id of modifiers\", itemFmId);\r\n    console.log(\"id of detours\", JSON.stringify(detourid));\r\n\r\n    // console.log(\"detour_val current\", detourid);\r\n\r\n    const isFmid = itemFmId && itemFmId.length !== 0;\r\n    console.log(\"isFmId\", itemFmId);\r\n    console.log(\"isFmId\", item2.fmId);\r\n    const isDetourId = detourid && detourid.length !== 0;\r\n    console.log(\"isDetourId\", detourid.length);\r\n\r\n    if (detourid.length > 2) {\r\n      const isSpecialCases =\r\n        item2.id === item1.id &&\r\n        item2.omId === itemOmId &&\r\n        current_string === detourid &&\r\n        item2.type === item1.type;\r\n      console.log(\"spcial cases\", isSpecialCases);\r\n\r\n      return isFmid\r\n        ? itemFmId === item2.fmId &&\r\n            item2.detours === itemDetours &&\r\n            //current_string === detourid &&\r\n            isSpecialCases\r\n        : isSpecialCases;\r\n    } else if (detourid.length == 2 && item2.fmId == itemFmId) {\r\n      const isSpecialCases =\r\n        item2.id === item1.id &&\r\n        item2.omId === itemOmId &&\r\n        //current_string === detourid &&\r\n        item2.type === item1.type;\r\n      console.log(\"spcial cases\", isSpecialCases);\r\n\r\n      return isFmid\r\n        ? itemFmId === item2.fmId &&\r\n            item2.detours === itemDetours &&\r\n            //current_string === detourid &&\r\n            isSpecialCases\r\n        : isSpecialCases;\r\n    } else {\r\n      const isSpecialCases =\r\n        item2.id === item1.id &&\r\n        item2.omId === itemOmId &&\r\n        //current_string === detourid &&\r\n        item2.type === item1.type;\r\n      console.log(\"spcial cases\", isSpecialCases);\r\n\r\n      return isFmid\r\n        ? itemFmId === item2.fmId &&\r\n            item2.detours === itemDetours &&\r\n            //current_string === detourid &&\r\n            isSpecialCases\r\n        : isSpecialCases;\r\n    }\r\n  } else if (item1.isPizza && item2.isPizza) {\r\n    const firsthalf = item1.first_half_toppings === item2.first_half_toppings;\r\n    const secondhalf =\r\n      item1.second_half_toppings === item2.second_half_toppings;\r\n    const isSameToppings = item1.toppingIdx1 === item2.toppingIdx1;\r\n    const isSameBase = item1.baseId === item2.baseId;\r\n    const isSameSize = item1.sizeId === item2.sizeId;\r\n\r\n    return (\r\n      sameId &&\r\n      isSameBase &&\r\n      firsthalf &&\r\n      secondhalf &&\r\n      isSameToppings &&\r\n      isSameSize\r\n    );\r\n  }\r\n\r\n  return sameId;\r\n}\r\n\r\nexport function isHappyHourStillActive(item, timezone) {\r\n  if (!item.isHappyHourActive) {\r\n    return {\r\n      isActive: false,\r\n      distance: 0,\r\n    };\r\n  }\r\n  const options = {\r\n    timeZone: timezone,\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n    hour12: false,\r\n  };\r\n\r\n  const getRestaurantTimeNDay = new Date().toLocaleString(\"en-SG\", options);\r\n\r\n  const countDownDate = new Date(item.happyHourDetail.countDownDate).getTime();\r\n  const nowTime = new Date(getRestaurantTimeNDay).getTime();\r\n\r\n  const distance = countDownDate - nowTime;\r\n\r\n  if (distance > 60000) {\r\n    return {\r\n      isActive: true,\r\n      distance,\r\n    };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function truncateDecimal(number) {\r\n  return Number.isInteger(Number(number))\r\n    ? Number(number).toFixed(2)\r\n    : Number(number).toFixed(2);\r\n}\r\n\r\nexport function setTimer(calDistance, timeOutRef) {\r\n  let distance = calDistance;\r\n\r\n  const hours = Math.floor(\r\n    (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n\r\n  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  setTimeout(() => {\r\n    if (\r\n      timeOutRef &&\r\n      timeOutRef.current !== undefined &&\r\n      timeOutRef.current !== null\r\n    ) {\r\n      timeOutRef.current.innerText = `${hours}h ${minutes}m`;\r\n    }\r\n  }, 0);\r\n\r\n  const x = setInterval(function () {\r\n    // Find the distance between now and the count down date\r\n    distance -= 60000;\r\n    // Time calculations for days, hours, minutes and seconds\r\n    const hours = Math.floor(\r\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n    //const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n    if (distance <= 0) {\r\n      timeOutRef.current.innerText = \"HappyHour Expired\";\r\n      clearInterval(x);\r\n    }\r\n\r\n    if (\r\n      timeOutRef &&\r\n      (timeOutRef.current === undefined || timeOutRef.current === null)\r\n    ) {\r\n      clearInterval(x);\r\n    } else if (timeOutRef) {\r\n      timeOutRef.current.innerText = `${hours}h ${minutes}m`;\r\n    }\r\n  }, 60000);\r\n}\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\asyncActions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\asyncActions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\selectors.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\Restaurants.jsx",["505","506","507","508"],"import React, { useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Slider from \"../../../components/Slider/Slider\";\r\n\r\nimport RestaurantCard from \"./RestaurantCard/RestaurantCard\";\r\n// import './Restaurants.scss'\r\n\r\nconst Restaurants = ({ restaurants }) => {\r\n  // useEffect(() => {\r\n  //   let slider = document.getElementById(\"layerslider\");\r\n  //   slider.layerSlider({\r\n  //     autoStart: true,\r\n  //     responsive: true,\r\n  //     responsiveUnder: 1280,\r\n  //     layersContainer: 1170,\r\n  //     navButtons:false,\r\n  //     showCircleTimer:false,\r\n  //     navStartStop:false,\r\n  //     // skinsPath: require('../../../assets/layerslider/skins')\r\n  //     // Please make sure that you didn't forget to add a comma to the line endings\r\n  //     // except the last line!\r\n  // });\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <Slider/> */}\r\n      <div className=\"white_bg\">\r\n        <div className=\"container margin_60\">\r\n          <div className=\"main_title\">\r\n            <h2 className=\"nomargin_top\">Choose from Most Popular</h2>\r\n            <p>Your Favourite Restaurants</p>\r\n          </div>\r\n          <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n            {restaurants.map((restaurant) => {\r\n              return <RestaurantCard restaurant={restaurant} />;\r\n            })}\r\n            {/* End strip_list*/}\r\n          </div>\r\n\r\n          {/* End row */}\r\n        </div>\r\n        {/* End container */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\MyOrders.jsx",["509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  fetchMyOrderList,\r\n  fetchMyOrderDetails,\r\n  updatePassword,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport LoadingBar from \"../LoadingBar/LoadingBar\";\r\nimport MyOrderDetails from \"../MyOrderDetails/MyOrderDetails\";\r\nimport \"./MyOrders.css\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport MyProfile from \"../MyProfile/MyProfile\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport { notification } from \"antd\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport moment from \"moment\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport axios from \"axios\";\r\nimport ManageAddress from \"../ManageAddress/ManageAddress\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport PaginationOrderList from \"./PaginationOrderList\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport RenderModifiers from \"../../containers/Modifiers/RenderModifiers\";\r\nimport clipboard from \"./Regular-1.5px-clipboard@3x.png\";\r\nimport mapicon from \"./Regular-1.5px-map@3x.png\";\r\nimport bag from \"./Regular-1.5px-shopping_bag@3x.png\";\r\nimport lock from \"./lock@3x.png\";\r\nimport RestrictUser from \"../RestrictUser/RestrictUser\";\r\n\r\nconst MyOrders = React.memo(({ restaurantId }) => {\r\n  const main = useSelector((state) => state.main);\r\n  //const modal = useSelector((state) => state.modal);\r\n  const user = useSelector((state) => state.user);\r\n  const menu = useSelector((state) => state.menu);\r\n  const dispatch = useDispatch();\r\n  const [restrict, setRestrict] = useState(false);\r\n  const [passworddata, setpassworddata] = useState({\r\n    oldpass: \"\",\r\n    newpass: \"\",\r\n    //confirmnewpass: \"\",\r\n    token: user.user.token,\r\n  });\r\n  const [state, setstate] = useState({\r\n    showaddress: false,\r\n    showorder: false,\r\n    showprofile: false,\r\n    showOrderDetails: false,\r\n    showpassword: false,\r\n    showloader: false,\r\n    showpasswordoverlay: false,\r\n    // loadingData: false,\r\n    // showOverlay: false,\r\n    // errorMessage: false,\r\n    // requestSuccess: null,\r\n  });\r\n\r\n  const [currentdata, setcurrentdata] = useState({\r\n    orderid: \"\",\r\n    date: \"\",\r\n    paymentmethod: \"\",\r\n    type: \"\",\r\n    stotal: \"\",\r\n    tax: \"\",\r\n    gtotal: \"\",\r\n    delivery_time: \"\",\r\n  });\r\n  const [handleadd, sethandleadd] = useState(false);\r\n  const [orderList, setorderList] = useState([]);\r\n  const [currentorderData, setcurrentorderData] = useState([]);\r\n  const [product, setproduct] = useState([]);\r\n  const [subtotal, setsubtotal] = useState([]);\r\n  const [modal, setmodal] = useState(false);\r\n  const fetchdata = async () => {\r\n    const response = await dispatch(fetchMyOrderList(user.user.clientId));\r\n\r\n    setorderList(response.payload.data);\r\n\r\n    console.log(\"o list\", orderList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user.user.isUserLoggedIn) {\r\n      setRestrict(true);\r\n    }\r\n    fetchdata();\r\n\r\n    setstate({\r\n      ...state,\r\n      showorder: false,\r\n      showaddress: true,\r\n      showprofile: false,\r\n      showpassword: false,\r\n    });\r\n    var x = document.getElementById(\"nav-parent-id-2\");\r\n    var y = document.getElementById(\"mob-parent-id-2\");\r\n    // var y = document.getElementById(\"nav-parent-id-2\");\r\n    // var z = document.getElementById(\"nav-parent-id-3\");\r\n    // var a = document.getElementById(\"nav-parent-id-4\");\r\n    // a.classList.remove(\"add-color\");\r\n    // y.classList.remove(\"add-color\");\r\n    // z.classList.remove(\"add-color\");\r\n    x.classList.add(\"add-color\");\r\n    if (window.screen.width <= 768) {\r\n      y.classList.add(\"add-border\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"window screen\", window.screen.width);\r\n  }, [window.screen.width]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"o list\", orderList);\r\n  }, [orderList]);\r\n\r\n  const onProfileClick = () => {\r\n    if (window.screen.width <= 768) {\r\n      var x = document.getElementById(\"mob-parent-id-2\");\r\n      var y = document.getElementById(\"mob-parent-id\");\r\n      var z = document.getElementById(\"mob-parent-id-3\");\r\n      var a = document.getElementById(\"mob-parent-id-4\");\r\n      x.classList.remove(\"add-border\");\r\n      y.classList.remove(\"add-border\");\r\n      z.classList.remove(\"add-border\");\r\n      a.classList.add(\"add-border\");\r\n    }\r\n    var x = document.getElementById(\"nav-parent-id-2\");\r\n    var y = document.getElementById(\"nav-parent-id\");\r\n    var z = document.getElementById(\"nav-parent-id-3\");\r\n    var a = document.getElementById(\"nav-parent-id-4\");\r\n    x.classList.remove(\"add-color\");\r\n    y.classList.remove(\"add-color\");\r\n    z.classList.remove(\"add-color\");\r\n    a.classList.add(\"add-color\");\r\n\r\n    setstate({\r\n      ...state,\r\n      showprofile: true,\r\n      showorder: false,\r\n      showaddress: false,\r\n      showpassword: false,\r\n    });\r\n  };\r\n  const onOrderClick = () => {\r\n    if (window.screen.width <= 768) {\r\n      var x = document.getElementById(\"mob-parent-id\");\r\n      var y = document.getElementById(\"mob-parent-id-2\");\r\n      var z = document.getElementById(\"mob-parent-id-3\");\r\n      var a = document.getElementById(\"mob-parent-id-4\");\r\n      a.classList.remove(\"add-border\");\r\n      y.classList.remove(\"add-border\");\r\n      z.classList.remove(\"add-border\");\r\n      x.classList.add(\"add-border\");\r\n    }\r\n    setstate({\r\n      ...state,\r\n      showprofile: false,\r\n      showorder: true,\r\n      showpassword: false,\r\n      showaddress: false,\r\n    });\r\n\r\n    var x = document.getElementById(\"nav-parent-id\");\r\n    var y = document.getElementById(\"nav-parent-id-2\");\r\n    var z = document.getElementById(\"nav-parent-id-3\");\r\n    var a = document.getElementById(\"nav-parent-id-4\");\r\n    a.classList.remove(\"add-color\");\r\n    y.classList.remove(\"add-color\");\r\n    z.classList.remove(\"add-color\");\r\n    x.classList.add(\"add-color\");\r\n  };\r\n\r\n  const onAddressClick = () => {\r\n    if (window.screen.width <= 768) {\r\n      var x = document.getElementById(\"mob-parent-id-2\");\r\n      var y = document.getElementById(\"mob-parent-id\");\r\n      var z = document.getElementById(\"mob-parent-id-3\");\r\n      var a = document.getElementById(\"mob-parent-id-4\");\r\n      a.classList.remove(\"add-border\");\r\n      y.classList.remove(\"add-border\");\r\n      z.classList.remove(\"add-border\");\r\n\r\n      x.classList.add(\"add-border\");\r\n    }\r\n    var x = document.getElementById(\"nav-parent-id-2\");\r\n    var y = document.getElementById(\"nav-parent-id\");\r\n    var z = document.getElementById(\"nav-parent-id-3\");\r\n    var a = document.getElementById(\"nav-parent-id-4\");\r\n    a.classList.remove(\"add-color\");\r\n    y.classList.remove(\"add-color\");\r\n    z.classList.remove(\"add-color\");\r\n\r\n    x.classList.add(\"add-color\");\r\n    setstate({\r\n      ...state,\r\n      showprofile: false,\r\n      showorder: false,\r\n      showpassword: false,\r\n      showaddress: true,\r\n    });\r\n  };\r\n  const onChangePasswordClick = () => {\r\n    if (window.screen.width <= 768) {\r\n      var x = document.getElementById(\"mob-parent-id-2\");\r\n      var y = document.getElementById(\"mob-parent-id\");\r\n      var z = document.getElementById(\"mob-parent-id-3\");\r\n      var a = document.getElementById(\"mob-parent-id-4\");\r\n      a.classList.remove(\"add-border\");\r\n      x.classList.remove(\"add-border\");\r\n      y.classList.remove(\"add-border\");\r\n      z.classList.add(\"add-border\");\r\n    }\r\n    var x = document.getElementById(\"nav-parent-id-2\");\r\n    var y = document.getElementById(\"nav-parent-id\");\r\n    var z = document.getElementById(\"nav-parent-id-3\");\r\n    var a = document.getElementById(\"nav-parent-id-4\");\r\n    a.classList.remove(\"add-color\");\r\n    x.classList.remove(\"add-color\");\r\n    y.classList.remove(\"add-color\");\r\n    z.classList.add(\"add-color\");\r\n    setstate({\r\n      ...state,\r\n      showprofile: false,\r\n      showorder: false,\r\n      showpassword: true,\r\n      showaddress: false,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setmodal(false);\r\n  };\r\n\r\n  const [extradetails, setextradetails] = useState();\r\n  const [pickuptime, setpickuptime] = useState();\r\n  const [deliverytime, setdeliverytime] = useState();\r\n  const [paymethod, setpaymethod] = useState();\r\n\r\n  const showModal = async (currentitem) => {\r\n    console.log(\"cyrrent item is\", currentitem);\r\n    setstate({ ...state, showloader: true });\r\n    //console.log(\"orderid of modal\", orderid);\r\n    if (currentitem.pay_method === \"2\") {\r\n      setpaymethod(\"Cash\");\r\n    } else if (currentitem.pay_method == \"1\") {\r\n      setpaymethod(\"Card\");\r\n    } else {\r\n      setpaymethod(\"Bank\");\r\n    }\r\n    setcurrentdata({\r\n      ...currentdata,\r\n      orderid: currentitem.order_id,\r\n      date: currentitem.order_date,\r\n      // paymentmethod: currentitem.pay_method,\r\n      type: currentitem.delivery_option,\r\n      tax: currentitem.tax,\r\n      gtotal: currentitem.grand_total,\r\n    });\r\n\r\n    const response = await dispatch(fetchMyOrderDetails(currentitem.order_id));\r\n    console.log(\"response of order details\", response);\r\n    // var formatted = moment(\r\n    //   response.payload.data[0].delivery_time,\r\n    //   \"HH:mm\"\r\n    // ).format(\"HH:mm A\");\r\n    setextradetails(response.payload.data[0].order_time);\r\n    setpickuptime(response.payload.data[0].delivery_time);\r\n    setdeliverytime(response.payload.data[0].delivery_time);\r\n\r\n    setcurrentorderData(response.payload.data);\r\n    setsubtotal(response.payload.data[0].subtotal);\r\n    setproduct(response.payload.data[0].products);\r\n    setmodal(true);\r\n\r\n    setstate({ ...state, showloader: false });\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"current subtotal is\", subtotal);\r\n  }, [subtotal]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current order data is\", product);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current order  is\", extradetails);\r\n  }, [extradetails]);\r\n\r\n  const handleOldPassword = (e) => {\r\n    setpassworddata({ ...passworddata, oldpass: e });\r\n  };\r\n\r\n  const handleNewPassword = (e) => {\r\n    setpassworddata({ ...passworddata, newpass: e });\r\n  };\r\n\r\n  const handleConfirmNewPassword = (e) => {\r\n    setpassworddata({ ...passworddata, confirmnewpass: e });\r\n  };\r\n\r\n  const changePasswordFormSubmit = async () => {\r\n    setstate({ ...state, showpasswordoverlay: true });\r\n    var axios = require(\"axios\");\r\n\r\n    const data = {\r\n      current_password: passworddata.oldpass,\r\n      new_password: passworddata.newpass,\r\n    };\r\n    console.log(\"data is\", data);\r\n\r\n    const token = user.user.token;\r\n\r\n    var status;\r\n\r\n    const api = \"https://ciboapp.com/api/clients/v2/client/changePassword/\";\r\n    axios\r\n      .post(api, data, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        //setmsg(res.data.message);\r\n        status = res.data.success;\r\n        notification.open({\r\n          message: res.data.message,\r\n          style: {\r\n            marginTop: \"50px\",\r\n            color: \"rgba(0, 0, 0, 0.65)\",\r\n            border: \"1px solid #b7eb8f\",\r\n            backgroundColor: \"#f6ffed\",\r\n          },\r\n        });\r\n      });\r\n    //console.log(\"msg is\", msg);\r\n    setstate({ ...state, showpasswordoverlay: false });\r\n\r\n    // notification.open({\r\n    //   message: msg,\r\n    //   style: {\r\n    //     marginTop: \"50px\",\r\n    //     color: \"rgba(0, 0, 0, 0.65)\",\r\n    //     border: \"1px solid #b7eb8f\",\r\n    //     backgroundColor: \"#f6ffed\",\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  const getSavedAmount = () => {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.subTotal -\r\n                  ((item.happyHourItem && item.happyHourItem.subTotal) || 0))\r\n              );\r\n            }\r\n\r\n            return acc;\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  };\r\n\r\n  const savedAmount = Math.abs(getSavedAmount());\r\n\r\n  const isFmHaveDetours = (fmId, detoursList) => {\r\n    let data = \"\";\r\n\r\n    let result = false;\r\n\r\n    detoursList.map((detour) => {\r\n      if (detour.fm_item_id === fmId) {\r\n        // detour availabe\r\n        result = true;\r\n        // now loop through items\r\n        detour.dom.map((op) => {\r\n          data += ` , ${op.om_item_name}`;\r\n        });\r\n      }\r\n    });\r\n\r\n    return {\r\n      result,\r\n      data,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {restrict ? (\r\n        <RestrictUser />\r\n      ) : (\r\n        <>\r\n          {state.showloader ? <WaitingOverlay /> : null}\r\n          {state.showpasswordoverlay ? <WaitingOverlay /> : null}\r\n\r\n          <AppHeader />\r\n\r\n          <div className='parent-catbar-mobile'>\r\n            <div\r\n              className='child-catbar-mobile'\r\n              id='mob-parent-id-2'\r\n              onClick={onAddressClick}\r\n            >\r\n              <p className='child-catbar-text'>My Address</p>\r\n            </div>\r\n            <div className='child-catbar-mobile' id='mob-parent-id'>\r\n              <p\r\n                className='child-catbar-text-orderhistory'\r\n                onClick={onOrderClick}\r\n              >\r\n                Order History\r\n              </p>\r\n            </div>\r\n            <div className='child-catbar-mobile' id='mob-parent-id-4'>\r\n              <p\r\n                className='child-catbar-text-myprofile'\r\n                onClick={onProfileClick}\r\n              >\r\n                My Profile\r\n              </p>\r\n            </div>\r\n            <div className='child-catbar-mobile' id='mob-parent-id-3'>\r\n              <p className='child-catbar-text' onClick={onChangePasswordClick}>\r\n                My passowrd\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='container margin_60_35'>\r\n            <div className='row customised_row '>\r\n              <div\r\n                className='col-lg-3 customise-width hide-on-mobile'\r\n                style={{\r\n                  backgroundColor: \"rgb(234, 232, 237)\",\r\n                  marginTop: \"20px\",\r\n                  height: \"280px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className='sub-cat-myorder'\r\n                  onClick={onAddressClick}\r\n                  id='nav-parent-id-2'\r\n                >\r\n                  <div className='myorder-icontext-parent'>\r\n                    <img src={mapicon} className='img-myorder-icon' />{\" \"}\r\n                    <p className='myorder-text'>My Address</p>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className='sub-cat-myorder'\r\n                  onClick={onOrderClick}\r\n                  id='nav-parent-id'\r\n                >\r\n                  <div className='myorder-icontext-parent'>\r\n                    <img src={bag} className='img-myorder-icon' />{\" \"}\r\n                    <p className='myorder-text'>Order History</p>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className='sub-cat-myorder'\r\n                  onClick={onProfileClick}\r\n                  id='nav-parent-id-4'\r\n                >\r\n                  <div className='myorder-icontext-parent'>\r\n                    <img src={clipboard} className='img-myorder-icon' />{\" \"}\r\n                    <p className='myorder-text'>My Profile</p>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className='sub-cat-myorder'\r\n                  onClick={onChangePasswordClick}\r\n                  id='nav-parent-id-3'\r\n                >\r\n                  <div className='myorder-icontext-parent'>\r\n                    <img src={lock} className='img-myorder-icon' />\r\n                    <p className='myorder-text'>Change Password</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-lg-9'>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n\r\n                    marginTop: \"-13px\",\r\n                  }}\r\n                >\r\n                  <div className='row'>\r\n                    <div className='parent-below-row'>\r\n                      {state.showorder ? (\r\n                        <>\r\n                          {orderList.length == 0 ? (\r\n                            <>\r\n                              <img\r\n                                src='https://biryaniblues.com/assets/frontend/images/empty-box.png'\r\n                                style={{ marginLeft: \"30%\" }}\r\n                              />\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <PaginationOrderList\r\n                                orderList={orderList}\r\n                                showModal={showModal}\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {/* {orderList.map((currval) => {\r\n                  return (\r\n                  \r\n                  );\r\n                })} */}\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    {/* popup */}\r\n                    {/* <div> */}\r\n                    {modal ? (\r\n                      <>\r\n                        <div className='modal-wrapper'>\r\n                          <div className='modal-overlay'></div>\r\n                          <div\r\n                            className='modal-content'\r\n                            style={{ marginTop: \"50px\" }}\r\n                          >\r\n                            <section className='section-header'>\r\n                              <h2\r\n                                className='heading-modal'\r\n                                style={{ textAlign: \"center\" }}\r\n                              >\r\n                                <b>Order # {currentdata.orderid}</b>\r\n                              </h2>\r\n                              <span className='close-modal'>\r\n                                <CloseIcon\r\n                                  onClick={closeModal}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                />\r\n                              </span>\r\n                            </section>\r\n                            <section className='order-contents'>\r\n                              <div className='restroname'>\r\n                                <div className='namerestroflex'>\r\n                                  <div className='exactrestroname'>\r\n                                    <h4 className='headrestro'>\r\n                                      {menu.restaurantInfo.rname}\r\n                                    </h4>\r\n                                    <div className='restrolocation'>\r\n                                      {menu.restaurantInfo.city},{\" \"}\r\n                                      {menu.restaurantInfo.country}\r\n                                    </div>{\" \"}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <hr\r\n                                style={{\r\n                                  width: \"90%\",\r\n                                  backgroundColor: \"black\",\r\n                                }}\r\n                              />\r\n                              <div className='item-list'>\r\n                                <h5 className='heading-list'>Order List</h5>\r\n                                {product &&\r\n                                  product.map((currval) => {\r\n                                    let item = currval;\r\n                                    let forcedModifier = \"\";\r\n\r\n                                    let optionalModifier = \"\";\r\n\r\n                                    let toppings = \"\";\r\n\r\n                                    let sizeAndBase = \"\";\r\n\r\n                                    let halfNhalf = \"\";\r\n\r\n                                    if (\r\n                                      item.forced_modifier === undefined ||\r\n                                      item.forced_modifier.length !== 0\r\n                                    ) {\r\n                                      item.forced_modifier.map(function (fm) {\r\n                                        // check if there is detour availabe\r\n                                        const detours = isFmHaveDetours(\r\n                                          fm.fmid,\r\n                                          item.detours\r\n                                        );\r\n\r\n                                        forcedModifier += `, ${fm.name}`;\r\n                                        forcedModifier = forcedModifier\r\n                                          .replace(/[\\s,]+/, \" \")\r\n                                          .trim();\r\n                                        if (detours.result) {\r\n                                          detours.data = detours.data\r\n                                            .replace(/[\\s,]+/, \" \")\r\n                                            .trim();\r\n                                          forcedModifier += `(${detours.data})`;\r\n                                        }\r\n                                      });\r\n                                    }\r\n                                    if (\r\n                                      item.optional_modifier === undefined ||\r\n                                      item.optional_modifier.length !== 0\r\n                                    ) {\r\n                                      item.optional_modifier.map(function (om) {\r\n                                        optionalModifier += `, ${om.name}`;\r\n                                      });\r\n                                      optionalModifier = optionalModifier\r\n                                        .replace(/[\\s,]+/, \" \")\r\n                                        .trim();\r\n                                    }\r\n\r\n                                    // PIZZA Details\r\n\r\n                                    // Toppings\r\n                                    if (item.toppings !== undefined) {\r\n                                      item.toppings.map(function (top) {\r\n                                        toppings += `, ${top.name}`;\r\n                                      });\r\n                                      toppings = toppings\r\n                                        .replace(/[\\s,]+/, \" \")\r\n                                        .trim();\r\n                                    }\r\n\r\n                                    // SizeAndBase\r\n                                    if (item.base !== undefined) {\r\n                                      console.log(\"pizaa bug\", item);\r\n                                      sizeAndBase = `${item.size_vlaue} ${item.base.base_name}`;\r\n                                    }\r\n\r\n                                    // HalfNhalf\r\n                                    if (\r\n                                      item.first_half_toppings !== undefined &&\r\n                                      item.second_half_toppings !== undefined &&\r\n                                      item.first_half_toppings.length > 0 &&\r\n                                      item.second_half_toppings.length > 0\r\n                                    ) {\r\n                                      halfNhalf = `First Half: ${item.first_half_toppings[0].name}, Second Half: ${item.second_half_toppings[0].name}`;\r\n                                    }\r\n\r\n                                    console.log(\"half n half is\", halfNhalf);\r\n\r\n                                    return (\r\n                                      <>\r\n                                        <div className='dish-item'>\r\n                                          <div className='dish-name'>\r\n                                            <div className='dish-name-child'>\r\n                                              <div className='para-tax'>\r\n                                                {currval.quantity} x{\" \"}\r\n                                                {currval.product_name}\r\n                                              </div>\r\n\r\n                                              <div className='para-tax'>\r\n                                                {truncateDecimal(\r\n                                                  Number(currval.subtotal) +\r\n                                                    Number(currval.tax)\r\n                                                )}\r\n                                                {/* Number(currval.tax)} */}\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                          style={{\r\n                                            width: \"50%\",\r\n                                            marginLeft: \"28px\",\r\n                                            marginTop: \"10px\",\r\n                                            fontSize: \"13px\",\r\n                                          }}\r\n                                        >\r\n                                          {forcedModifier !== \"\" ? (\r\n                                            <section className='modifiers'>\r\n                                              <span className='modifiers-heading'>\r\n                                                Modifiers:\r\n                                              </span>\r\n                                              {forcedModifier}\r\n                                            </section>\r\n                                          ) : null}\r\n                                          {optionalModifier !== \"\" ? (\r\n                                            <section className='modifiers'>\r\n                                              <span className='modifiers-heading'>\r\n                                                Extras:\r\n                                              </span>\r\n                                              {optionalModifier}\r\n                                            </section>\r\n                                          ) : null}\r\n                                          {toppings !== \"\" ? (\r\n                                            <section className='modifiers'>\r\n                                              <span className='modifiers-heading'>\r\n                                                Toppings:\r\n                                              </span>\r\n                                              {toppings}\r\n                                            </section>\r\n                                          ) : null}\r\n                                          {halfNhalf !== \"\" ? (\r\n                                            <section className='modifiers'>\r\n                                              <span className='modifiers-heading'>\r\n                                                Half And Half Choice:\r\n                                              </span>\r\n                                              {halfNhalf}\r\n                                            </section>\r\n                                          ) : null}\r\n                                        </div>\r\n                                      </>\r\n                                    );\r\n                                  })}\r\n\r\n                                {/* <div className=\"dish-item\">\r\n                          <div className=\"dish-name\">\r\n                            <div className=\"dish-name-child\">\r\n                              <div className=\"para-tax\">1 x dish1</div>\r\n                              <div className=\"para-tax\">EUR 200</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"dish-item\">\r\n                          <div className=\"dish-name\">\r\n                            <div className=\"dish-name-child\">\r\n                              <div className=\"para-tax\">1 x dish1</div>\r\n                              <div className=\"para-tax\">EUR 200</div>\r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n                              </div>\r\n                              <hr\r\n                                style={{\r\n                                  width: \"90%\",\r\n                                  backgroundColor: \"black\",\r\n                                }}\r\n                              />\r\n                              <div className='tax-area'>\r\n                                <div className='subtotal'>\r\n                                  <p className='para-tax'>Subtotal</p>\r\n                                  <p className='para-tax'>\r\n                                    {truncateDecimal(subtotal)}\r\n                                  </p>\r\n                                </div>\r\n\r\n                                <div className='subtotal'>\r\n                                  <p className='para-tax'>Taxes</p>\r\n                                  <p className='para-tax'>\r\n                                    {truncateDecimal(currentdata.tax)}\r\n                                  </p>\r\n                                </div>\r\n\r\n                                <div className='subtotal'>\r\n                                  <p className='para-tax'>Delivery Charge</p>\r\n                                  <p className='para-tax'>\r\n                                    {user.delivery_cost}.00\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {savedAmount ? (\r\n                                <>\r\n                                  <div className='savings'>\r\n                                    <p className='para-savings'>YOU SAVED</p>\r\n                                    <p className='para-savings'>EUR 10</p>\r\n                                  </div>\r\n                                </>\r\n                              ) : null}\r\n                              <hr\r\n                                style={{\r\n                                  width: \"90%\",\r\n                                  backgroundColor: \"black\",\r\n                                }}\r\n                              />\r\n                              <div\r\n                                className='subtotal'\r\n                                style={{\r\n                                  marginLeft: \"20px\",\r\n                                  marginRight: \"20px\",\r\n                                }}\r\n                              >\r\n                                <p className='para-tax'>\r\n                                  <b>GRAND TOTAL</b>\r\n                                </p>\r\n                                <p className='para-tax'>\r\n                                  <b>{truncateDecimal(currentdata.gtotal)}</b>\r\n                                </p>\r\n                              </div>\r\n                              <hr />\r\n                              <br />\r\n                              <div className='order-details'>\r\n                                <h5\r\n                                  className='order-detail-header'\r\n                                  style={{ marginLeft: \"20px\" }}\r\n                                >\r\n                                  <b>Order Details</b>\r\n                                </h5>\r\n                                <div className='payment-opted'>\r\n                                  <div className='pay-opt'>Payment</div>\r\n                                  <div className='pay-name'>\r\n                                    <div className='pay-method'>\r\n                                      {paymethod}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                <div className='pay-opt'>Ordered ON</div>\r\n                                <div className='pay-name'>\r\n                                  <div className='pay-method'>\r\n                                    {currentdata.date}\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                <div className='pay-opt'>Order Time</div>\r\n                                <div className='pay-name'>\r\n                                  <div className='pay-method'>\r\n                                    {extradetails}\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                {currentdata.type == \"pickup\" ? (\r\n                                  <>\r\n                                    <div className='pay-opt'>Pickup Time</div>\r\n                                    <div className='pay-name'>\r\n                                      <div className='pay-method'>\r\n                                        {pickuptime}\r\n                                      </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <br />\r\n                                  </>\r\n                                ) : null}\r\n                                {currentdata.type == \"delivery\" ? (\r\n                                  <>\r\n                                    <div className='pay-opt'>Delivery Time</div>\r\n                                    <div className='pay-name'>\r\n                                      <div className='pay-method'>\r\n                                        {deliverytime}\r\n                                      </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <br />\r\n                                  </>\r\n                                ) : null}\r\n\r\n                                <div className='pay-opt'>Order type</div>\r\n                                <div className='pay-name'>\r\n                                  <div className='pay-method'>\r\n                                    {currentdata.type}\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                              </div>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : null}\r\n\r\n                    {/* popup */}\r\n\r\n                    {state.showprofile ? (\r\n                      <>\r\n                        <div style={{ marginLeft: \"-10%\" }}>\r\n                          <MyProfile />\r\n                        </div>\r\n                      </>\r\n                    ) : null}\r\n\r\n                    {state.showaddress ? (\r\n                      <>\r\n                        {\" \"}\r\n                        <ManageAddress />{\" \"}\r\n                      </>\r\n                    ) : null}\r\n\r\n                    {state.showpassword ? (\r\n                      <>\r\n                        <div style={{ marginLeft: \"-15%\" }}>\r\n                          <div className='col-lg-6 password-parent-container'>\r\n                            <div\r\n                              className='box_style_2 box-passowrd-container'\r\n                              id='main_menu'\r\n                            >\r\n                              <div className='parent-container-password-height-width'>\r\n                                <div className='password-child-conatiner'>\r\n                                  <TextField\r\n                                    size='small'\r\n                                    className='input-passowrd-texfield'\r\n                                    // style={{ width: \"120%\" }}\r\n                                    label='Old Password'\r\n                                    variant='outlined'\r\n                                    value={passworddata.oldpass}\r\n                                    onChange={(e) =>\r\n                                      handleOldPassword(e.target.value)\r\n                                    }\r\n                                  />\r\n                                  <br />\r\n                                  <br />\r\n                                  <TextField\r\n                                    size='small'\r\n                                    className='input-passowrd-texfield'\r\n                                    label='New Password'\r\n                                    variant='outlined'\r\n                                    value={passworddata.newpass}\r\n                                    onChange={(e) =>\r\n                                      handleNewPassword(e.target.value)\r\n                                    }\r\n                                  />\r\n                                  <br />\r\n                                  <br />\r\n                                  <TextField\r\n                                    size='small'\r\n                                    className='input-passowrd-texfield'\r\n                                    label='New Password'\r\n                                    variant='outlined'\r\n                                    value={passworddata.confirmnewpass}\r\n                                    onChange={(e) =>\r\n                                      handleConfirmNewPassword(e.target.value)\r\n                                    }\r\n                                  />\r\n                                  <br />\r\n                                  <br />\r\n\r\n                                  <Button\r\n                                    onClick={changePasswordFormSubmit}\r\n                                    className='password-submit-button'\r\n                                    style={{\r\n                                      height: \"45px\",\r\n                                      backgroundColor: \"#000000\",\r\n\r\n                                      borderRadius: \"12px\",\r\n\r\n                                      color: \"white\",\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            {/* End box_style_1 */}\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MyOrders;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\Information\\Information.jsx",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport MenuCategories from \"../../../components/MenuCategories/MenuCategories\";\r\nimport MenuItems from \"../../MenuItems/MenuItems\";\r\nimport Cart from \"../../../components/Cart/Cart\";\r\nimport Login from \"../../../components/Login/Login\";\r\nimport CreateAccount from \"../../../components/CreateAccount/CreateAccount\";\r\nimport ForgotPassword from \"../../../components/ForgotPassword/ForgotPassword\";\r\nimport AppHeader from \"../../../components/AppHeader/AppHeader\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport AppModal from \"../../../components/AppModal/AppModal\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport HomeSlider from \"../../../components/HomeSlider/HomeSlider\";\r\nimport moment from \"moment\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport { Divider } from \"antd\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"./Information.css\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Box, Drawer, ListItem, SwipeableDrawer } from \"@material-ui/core\";\r\nimport { List } from \"antd/lib/form/Form\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { ListItemText } from \"@material-ui/core\";\r\nimport { notification } from \"antd\";\r\nimport { showLoginFormMethod } from \"../../../state-management/user/actions\";\r\nimport InfoSlider from \"./InfoSlider\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nconst useStyle = makeStyles({\r\n  list: {\r\n    width: 360,\r\n    height: 250,\r\n  },\r\n});\r\n\r\nconst buttonStyle = {\r\n  position: \"fixed\",\r\n  bottom: \"5%\",\r\n  right: \"10%\",\r\n  border: \"none\",\r\n  outline: \"none\",\r\n  backgroundColor: \"#302f31\",\r\n  borderRadius: \"25px\",\r\n  height: \"40px\",\r\n  width: \"40px\",\r\n  color: \"white\",\r\n  fontSize: \"0.8rem\",\r\n  fontWeight: \"600\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst Information = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const main = useSelector((state) => state.main);\r\n  const dispatch = useDispatch();\r\n  const [showdish, setshowdish] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [freeEligible, setfreeEligible] = useState();\r\n  console.log(\"menu in selector is\", menu);\r\n  console.log(\"loading in menuItems\", props.loading);\r\n  const [timings, settimings] = useState();\r\n\r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled >= 1000) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    //scroll.scrollToTop();\r\n    scroll.scrollTo(\"250\");\r\n\r\n    // window.onscroll = function () {\r\n    //   var pageOffset = document.documentElement.scrollTop;\r\n\r\n    //   if (pageOffset >= 1000) {\r\n    //     document.getElementById(\"stotop\").style.visibility = \"visible\";\r\n    //   } else {\r\n    //     document.getElementById(\"stotop\").style.visibility = \"hidden\";\r\n    //   }\r\n    // };\r\n  };\r\n  window.addEventListener(\"scroll\", toggleVisible);\r\n  useEffect(() => {\r\n    //setfreeEligible(menu.restaurantInfo.cost.free_delivery_eligible_amount);\r\n    if (main.isClosed) {\r\n      settimings(\"closed\");\r\n    } else {\r\n      settimings(main.businessHour);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"set eligible is\", freeEligible);\r\n  }, [freeEligible]);\r\n\r\n  const handleAddItem = (item, isHappyHoursActive) => {\r\n    console.log(\"items in cart is\", item);\r\n    // if (item.optional_modifier !== '0' || item.forced_modifier !== '0') {\r\n    //   if (item.qty) {\r\n    //     this.props.openModal(\r\n    //       modalNames.INTERMEDIATE_ADD_MODAL,\r\n    //       {\r\n    //         item: {\r\n    //           ...item,\r\n    //           isHappyHoursActive,\r\n    //         },\r\n    //       },\r\n    //     );\r\n    //   } else {\r\n    //     this.props.openModal(\r\n    //       modalNames.DISH_MODAL,\r\n    //       {\r\n    //         item: {\r\n    //           ...item,\r\n    //           isHappyHoursActive,\r\n    //         },\r\n    //       },\r\n    //     );\r\n    //   }\r\n\r\n    //   return;\r\n    // }\r\n\r\n    // this.props.addItem(item, null, 0, this.props.restaurantInfo);\r\n  };\r\n\r\n  const [draweropen, setdraweropen] = useState(false);\r\n  const classes = useStyle();\r\n  const History = useHistory();\r\n\r\n  const checkoutformobile = () => {\r\n    if (main.isClosed) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: \"Oops ! Restaurant is closed.\",\r\n      });\r\n    } else if (main.isClosedForWeekday) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: `${main.messageForWeekday}`,\r\n      });\r\n    } else if (main.isClosedForMonth) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: `${main.messageForMonth}`,\r\n      });\r\n    } else if (main.isClosedForOnceAMonth) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: `${main.messageForOnceAMonth}`,\r\n      });\r\n    } else {\r\n      History.push(`/restId=${menu.restaurantInfo.restaurant_id}/checkout`);\r\n    }\r\n  };\r\n\r\n  // const toggleDrawer = (open) => (event) => {\r\n  //   setdraweropen(open);\r\n  // };\r\n\r\n  const loginformobile = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n\r\n  var x = main.opening;\r\n  var opening_time = x.substring(0, x.length - 3);\r\n\r\n  var arr = [];\r\n  arr.push(menu.restaurantInfo?.order_option?.split(\",\"));\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      {console.log(\"informations\", props)}\r\n\r\n      <InfoSlider />\r\n      {/* <section\r\n          className=\"parallax-window\"\r\n          data-parallax=\"scroll\"\r\n          style={{\r\n            background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\r\n            backgroundSize: \"cover\",\r\n          }}\r\n          data-natural-width={1400}\r\n          data-natural-height={470}\r\n        >\r\n          <div id=\"subheader\">\r\n            <div id=\"sub_content\">\r\n              <h1>{props.restaurantInfo.rname}</h1>\r\n              <div>\r\n                <em>{props.restaurantInfo.description}</em>\r\n              </div>\r\n              <div>\r\n                <LocationOnIcon />{\" \"}\r\n                {`${props.restaurantInfo.address} - ${props.restaurantInfo.city} - ${props.restaurantInfo.country}- ${props.restaurantInfo.zipcode}`}{\" \"}\r\n                <br />\r\n                {menu.restaurantInfo.cost.free_delivery_eligible_amount > 0 ? (\r\n                  <>\r\n                    <strong>Delivery charge:</strong> free over&nbsp;\r\n                    {menu.restaurantInfo.cost.free_delivery_eligible_amount}\r\n                    &nbsp;\r\n                    {props.restaurantInfo?.monetary_symbol}\r\n                    <br />\r\n                  </>\r\n                ) : null}\r\n                Delivery Options : &nbsp;\r\n                {menu.restaurantInfo.order_option\r\n                  ?.split(\",\")\r\n                  .map((option, i) => {\r\n                    return (\r\n                      <b style={{ textTransform: \"capitalize\" }}>\r\n                        {option}\r\n                        <CheckCircleOutlineIcon /> &nbsp;\r\n                      </b>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section> */}\r\n\r\n      {/* End section */}\r\n      {/* content */}\r\n      <div className='container margin_60_35'>\r\n        <div className='row customised_row '>\r\n          <div className='col-lg-3' style={{ marginTop: \"250px\" }}>\r\n            <div\r\n              className='customised_theiaStickySidebar  hide-on-mobile '\r\n              style={{ position: \"sticky\", top: \"85px\", width: \"95%\" }}\r\n            >\r\n              <MenuCategories\r\n                categories={menu.categoriesList}\r\n                loading={props.loading}\r\n                drinkstatus={setshowdish}\r\n              />\r\n            </div>\r\n\r\n            {/* End box_style_1 */}\r\n            {/* <div className=\"box_style_2 d-none d-sm-block\" id=\"help\">\r\n              \r\n\r\n             \r\n             \r\n\r\n              <a href=\"#\" className=\"phone\" style={{ color: \"black\" }}>\r\n                {props.restaurantInfo.phone_code}&nbsp;\r\n                {props.restaurantInfo.phone}\r\n              </a>\r\n              <small>\r\n                <b>\r\n                  {`${moment().format(\"dddd\")}`} &nbsp;{timings}\r\n                </b>\r\n              </small>\r\n            </div> */}\r\n          </div>\r\n          {/* End col */}\r\n\r\n          <div className='col-lg-6'>\r\n            {/* <div style={{ marginTop: \"-25px\", marginLeft: \"20%\" }}>\r\n              Delivery Options : &nbsp;\r\n              {menu.restaurantInfo.order_option?.split(\",\").map((option, i) => {\r\n                return (\r\n                  <b style={{ textTransform: \"capitalize\" }}>\r\n                    {option}\r\n                    <CheckCircleOutlineIcon /> &nbsp;\r\n                  </b>\r\n                );\r\n              })}\r\n            </div> */}\r\n\r\n            <div\r\n              className='img-logo-container'\r\n              style={{ border: \"2px solid #e6e6e6\" }}\r\n            >\r\n              <img\r\n                src={main.selectedRestaurant.logo}\r\n                style={{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  objectFit: \"contain\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <h3 className='restro-name-text'>{props.restaurantInfo.rname}</h3>\r\n              <p className='restro-info-txt1'>\r\n                <LocationOnIcon />{\" \"}\r\n                {`${props.restaurantInfo.address} - ${props.restaurantInfo.city} - ${props.restaurantInfo.country}- ${props.restaurantInfo.zipcode}`}{\" \"}\r\n              </p>\r\n              <p className='restro-info-txt2'>\r\n                +{menu.restaurantInfo.phone_code} {menu.restaurantInfo.phone}\r\n              </p>\r\n            </div>\r\n            {/* <div className=\"info-container\">\r\n              {menu.restaurantInfo?.order_option?.split(\",\").map((val, i) => {\r\n                if (val == \"eatin\") {\r\n                  return (\r\n                    <>\r\n                      <div className=\"info-box-opens-container\">\r\n                        <p className=\"info-box-opens-text\">Eat-In available</p>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                } else if (val == \"delivery\") {\r\n                  return (\r\n                    <>\r\n                      <div className=\"info-box-delivery-container\">\r\n                        <p className=\"info-box-delivery-text\">\r\n                          Delivery-available{\" \"}\r\n                        </p>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                } else if (val == \"pickup\") {\r\n                  return (\r\n                    <>\r\n                      <div className=\"info-box-pickup-container\">\r\n                        <p className=\"info-box-pickup-text\">Pickup-available</p>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n\r\n              <div className=\"info-box-pickup-container\">\r\n                <p className=\"info-box-pickup-text\">Pickup-available</p>\r\n              </div>\r\n            </div> */}\r\n\r\n            <div className='info-container'>\r\n              {menu.restaurantInfo?.order_option?.split(\",\").map((val, i) => {\r\n                if (val == \"eatin\") {\r\n                  return (\r\n                    <>\r\n                      <div className='info-box-eatin-container'>\r\n                        <p className='info-box-eatin-text'>\r\n                          Eat-in <CheckBoxIcon />\r\n                        </p>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                } else if (val == \"delivery\") {\r\n                  return (\r\n                    <>\r\n                      <div className='info-box-delivery-container'>\r\n                        <p className='info-box-delivery-text'>\r\n                          Delivery <CheckBoxIcon />\r\n                        </p>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                } else if (val == \"pickup\") {\r\n                  return (\r\n                    <>\r\n                      <div className='info-box-pickup-container'>\r\n                        <p className='info-box-pickup-text'>\r\n                          Pickup <CheckBoxIcon />\r\n                        </p>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n\r\n              <div className='info-box-opens-container'>\r\n                <p className='info-box-opens-text'>\r\n                  Opens at{\" \"}\r\n                  {opening_time > 12\r\n                    ? `${opening_time - 12} PM`\r\n                    : `${opening_time} AM`}{\" \"}\r\n                </p>\r\n              </div>\r\n\r\n              {menu.restaurantInfo.cost &&\r\n              menu.restaurantInfo.cost.free_delivery_eligible_amount > 0 ? (\r\n                <div\r\n                  className={\r\n                    arr[0] && arr[0].length == 3\r\n                      ? `marginleft-class info-box-freedelivery-container`\r\n                      : `info-box-freedelivery-container`\r\n                  }\r\n                >\r\n                  <p className='info-box-freedelivery-text margin-for-text'>\r\n                    Free Delivery{\" \"}\r\n                  </p>\r\n                  <p\r\n                    className='info-box-freedelivery-text'\r\n                    style={{ marginTop: \"-17px\" }}\r\n                  >\r\n                    Over {props.restaurantInfo?.monetary_symbol}\r\n                    {\r\n                      menu.restaurantInfo.cost.free_delivery_eligible_amount\r\n                    }{\" \"}\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div\r\n              className='box_style_2 full-width-mobile'\r\n              id='main_menu'\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              {/* <h2\r\n                className=\"inner hide-on-mobile\"\r\n                style={{ backgroundColor: \"#666171\" }}\r\n              >\r\n                Menu\r\n              </h2> */}\r\n              <MenuItems\r\n                status={showdish}\r\n                pizzas={menu.pizzas}\r\n                selectedCategoryId={menu.selectedCategoryId}\r\n                menuItems={menu.menuItems}\r\n                restaurantInfo={menu.restaurantInfo}\r\n                searchQuery={menu.searchQuery}\r\n                categories={menu.categoriesList}\r\n                happyhours={menu.happyHours}\r\n                onAddItem={props.onAddItem}\r\n                onRemoveItem={props.onRemoveItem}\r\n                loading={props.loading}\r\n              />\r\n            </div>\r\n            {/* End box_style_1 */}\r\n          </div>\r\n          {/* End col */}\r\n          <div className='col-lg-3' id='sidebar' style={{ marginTop: \"250px\" }}>\r\n            <div\r\n              className='customised_theiaStickySidebar  hide-on-mobile '\r\n              style={{ position: \"sticky\", top: \"85px\" }}\r\n            >\r\n              <Cart\r\n                //addItem={handleAddItem}\r\n                addItem={props.onAddItem}\r\n                restinfo={menu.restaurantInfo}\r\n                cartlist={menu.cart}\r\n              />\r\n\r\n              {/* End cart_box */}\r\n            </div>\r\n\r\n            <button\r\n              className='scroll_to_top_button'\r\n              id='stotop'\r\n              onClick={scrollToTop}\r\n              //style={buttonStyle}\r\n              style={{ display: visible ? \"inline\" : \"none\" }}\r\n            >\r\n              <ExpandLessIcon />\r\n            </button>\r\n            {/* End theiaStickySidebar */}\r\n          </div>\r\n          {/* <button\r\n            \r\n\r\n            className=\"scroll_to_top_button\"\r\n            id=\"stotop\"\r\n            onClick={scrollToTop}\r\n            //style={buttonStyle}\r\n            style={{ display: visible ? \"inline\" : \"none\" }}\r\n          >\r\n            <ExpandLessIcon />\r\n          </button> */}\r\n          {/* End col */}\r\n        </div>\r\n\r\n        {/* End row */}\r\n      </div>\r\n\r\n      {menu.cart.length >= 1 ? (\r\n        <>\r\n          <div\r\n            class='fixed-bottom hide-on-desktop'\r\n            style={{ height: \"60px\", backgroundColor: \"black\" }}\r\n          >\r\n            <div className='parent-mob-footer'>\r\n              <div\r\n                className='parent-mob-child'\r\n                onClick={() => setdraweropen(true)}\r\n              >\r\n                <div>\r\n                  <p\r\n                    style={{\r\n                      fontSize: \"18px\",\r\n                      marginTop: \"12px\",\r\n                      marginLeft: \"16px\",\r\n                      whiteSpace: \"nowrap\",\r\n                    }}\r\n                  >\r\n                    View cart ( {menu.cart.length} items )\r\n                  </p>\r\n                </div>\r\n                {/* <div className=\"parent-mob-item-container\">\r\n                  <p className=\"parent-mob-item-text\">\r\n                    view cart ( {menu.cart.length} ) items\r\n                  </p>\r\n                </div> */}\r\n              </div>\r\n\r\n              {user.user.isUserLoggedIn ? (\r\n                <div\r\n                  className='mob-checkout-container'\r\n                  onClick={checkoutformobile}\r\n                >\r\n                  <div className='mob-checkout-button'>CHECKOUT</div>\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className='mob-checkout-container'\r\n                  onClick={loginformobile}\r\n                >\r\n                  <div className='mob-checkout-button-login'>LOGIN</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <SwipeableDrawer\r\n        anchor={\"bottom\"}\r\n        open={draweropen}\r\n        onClose={() => setdraweropen(false)}\r\n        onOpen={() => {}}\r\n      >\r\n        <div className={classes.list}>\r\n          <div className='orders-container'>\r\n            <h2 className='mob-header-text'>\r\n              Your Orders{\" \"}\r\n              <CloseIcon\r\n                style={{ float: \"right\", marginRight: \"25px\" }}\r\n                onClick={() => setdraweropen(false)}\r\n              />\r\n            </h2>\r\n          </div>\r\n          <div className='mob-cart-container'>\r\n            <Cart\r\n              //addItem={handleAddItem}\r\n              addItem={props.onAddItem}\r\n              restinfo={menu.restaurantInfo}\r\n              cartlist={menu.cart}\r\n            />\r\n          </div>\r\n\r\n          {/* <Box textAlign=\"center\">comppomemnts</Box>\r\n          <List>\r\n            <ListItem button onClick={() => {}}>\r\n              <ListItemText primary={\"container\"}></ListItemText>\r\n            </ListItem>\r\n            <ListItem button onClick={() => {}}>\r\n              <ListItemText primary={\"container\"}></ListItemText>\r\n            </ListItem>\r\n            <ListItem button onClick={() => {}}>\r\n              <ListItemText primary={\"container\"}>\r\n               \r\n              </ListItemText>\r\n            </ListItem>\r\n          </List>\r\n          <Divider /> */}\r\n        </div>\r\n      </SwipeableDrawer>\r\n\r\n      {user.showLoginForm ? <Login /> : null}\r\n      {user.showRegisterForm ? <CreateAccount /> : null}\r\n      {user.showForgotPasswordForm ? <ForgotPassword /> : null}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Slider\\Slider.jsx",["585"],"import React, {useState} from \"react\";\r\n\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst items = [\r\n  {\r\n    src:\r\n      \"https://images.unsplash.com/photo-1604382354936-07c5d9983bd3?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80\",\r\n    altText: \"Slide 1\",\r\n    caption: \"Slide 1\",\r\n  },\r\n  {\r\n    src:\r\n      \"https://images.unsplash.com/photo-1598514982901-ae62764ae75e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80\",\r\n    altText: \"Slide 2\",\r\n    caption: \"Slide 2\",\r\n  },\r\n  {\r\n    src:\r\n      \"https://images.unsplash.com/photo-1548943487-a2e4e43b4853?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjB8fHNvdXBzfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\r\n    altText: \"Slide 3\",\r\n    caption: \"Slide 3\",\r\n  },\r\n];\r\n\r\n\r\nconst Slider = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img style={{width:\"100%\", height:\"600px\"}} src={item.src} alt={item.altText} />\r\n        {/* <CarouselCaption\r\n          captionText={item.caption}\r\n          captionHeader={item.caption}\r\n        /> */}\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel style={{height:\"400px\"}} activeIndex={activeIndex} next={next} previous={previous}>\r\n      <CarouselIndicators\r\n        items={items}\r\n        activeIndex={activeIndex}\r\n        onClickHandler={goToIndex}\r\n      />\r\n      {slides}\r\n      <CarouselControl\r\n        direction=\"prev\"\r\n        directionText=\"Previous\"\r\n        onClickHandler={previous}\r\n      />\r\n      <CarouselControl\r\n        direction=\"next\"\r\n        directionText=\"Next\"\r\n        onClickHandler={next}\r\n      />\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Slider;","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\RestaurantCard\\RestaurantCard.jsx",["586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./RestaurantCard.css\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, Link, Redirect, Route } from \"react-router-dom\";\r\nimport { NavigateBeforeSharp } from \"@material-ui/icons\";\r\n\r\nconst RestaurantCard = ({ restaurant }) => {\r\n  // var x = restaurant.order_option((ele) => ele == \"xyz\");\r\n\r\n  const [order, setorder] = useState([]);\r\n  var arr = [];\r\n\r\n  {\r\n    restaurant?.order_option?.split(\",\").map((option, i) => {\r\n      order.push(option);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"array is\", order);\r\n  }, [order]);\r\n\r\n  return (\r\n    <>\r\n      <a\r\n        className=\"hover-cat\"\r\n        href={`${`?/restId=${restaurant.restaurant_id}/menu`}`}\r\n      >\r\n        <div style={{ marginTop: \"20px\", marginLeft: \"15px\" }}>\r\n          <div className=\"restro-card-container\">\r\n            <div className=\"desc\">\r\n              <div\r\n                className=\"thumb_strip\"\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <img src={restaurant.logo} alt />\r\n              </div>\r\n              <p className=\"restro-card-rname\">{restaurant.rname}</p>\r\n\r\n              <div className=\"location restro-card-location\">\r\n                {restaurant.address} {restaurant.city}\r\n                {restaurant.zipcode}\r\n              </div>\r\n              <div style={{ fontWeight: \"700\", color: \"#6244da\" }}>\r\n                Opens at\r\n              </div>\r\n\r\n              <div className=\"rest-card-info\">\r\n                {restaurant?.order_option?.split(\",\").map((option, i) => {\r\n                  if (option == \"delivery\") {\r\n                    return (\r\n                      <>\r\n                        <div className=\"rest-card-info-child\">Delivery</div>\r\n                      </>\r\n                    );\r\n                  }\r\n                })}\r\n                {/* <div className=\"rest-card-info-child\">Delivery</div> */}\r\n                &nbsp; &nbsp;\r\n                {restaurant?.order_option?.split(\",\").map((option, i) => {\r\n                  if (option == \"pickup\") {\r\n                    return (\r\n                      <>\r\n                        <div className=\"rest-card-info-child-pickup\">\r\n                          pickup\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n\r\n              <div className=\"rest-card-info\">\r\n                {restaurant?.order_option?.split(\",\").map((option, i) => {\r\n                  if (option == \"eatin\") {\r\n                    return (\r\n                      <>\r\n                        <div className=\"rest-card-info-child-eatin\">Eat-In</div>\r\n                        &nbsp; &nbsp;\r\n                      </>\r\n                    );\r\n                  }\r\n                })}\r\n\r\n                {/* <div\r\n                  className=\"rest-card-info-child-opensat\"\r\n                  style={{ paddingTop: \"0px\" }}\r\n                >\r\n                  Opens at 11\r\n                  <p style={{ marginTop: \"-10px\" }}> pm</p>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>{\" \"}\r\n      </a>\r\n      {/* &nbsp; &nbsp; */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantCard;\r\n\r\n// <a\r\n//   href={`${`?/restId=${restaurant.restaurant_id}/menu`}`}\r\n//   className=\"strip_list\"\r\n// >\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuCategories\\MenuCategories.jsx",["606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./MenuCategories.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setSelectedCategoryId,\r\n  displayHappyHours,\r\n  displayPizzas,\r\n  changechoosencategory,\r\n} from \"../../state-management/menu/actions\";\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\nimport { Link } from \"react-scroll\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { PinDropSharp } from \"@material-ui/icons\";\r\n// import { CloseOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport \"simplebar/src/simplebar.css\";\r\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\n//import CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Box, Drawer, ListItem, SwipeableDrawer } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Sticky from \"react-sticky-el\";\r\nimport Scrollspy from \"react-scrollspy\";\r\n\r\nconst useStyle = makeStyles({\r\n  list: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nconst MenuCategories = React.memo(({ categories, loading, drinkstatus }) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const dispatch = useDispatch();\r\n  const [dishes, showDishes] = useState(false);\r\n  const [drinks, showDrinks] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (menu.cart.length >= 1) {\r\n      var x = document.getElementById(\"id-of-menu\");\r\n      // var y = document.getElementById(\"menu-2\");\r\n      x.classList.add(\"bottom-add\");\r\n      //y.classList.add(\"bottom-add\");\r\n    }\r\n    //else {\r\n    //   var x = document.getElementById(\"id-of-menu\");\r\n    //   // var y = document.getElementById(\"id-of-menu-close\");\r\n    //   x.style.bottom = \"5%\";\r\n    //   // y.style.bottom = \"5%\";\r\n    // }\r\n  }, [menu.cart.length]);\r\n\r\n  const [displayCategoryInMobile, setDisplayCategoryInMobile] = useState(\"\");\r\n  const [displayHideCategory, setdisplayHideCategory] = useState(false);\r\n\r\n  const showCategory = () => {\r\n    // props.showHideOverlay(true);\r\n    setDisplayCategoryInMobile(\"show-mobile-category-list\");\r\n    setdisplayHideCategory(true);\r\n    setdraweropen(true);\r\n  };\r\n\r\n  const hideCategory = () => {\r\n    setDisplayCategoryInMobile(\"\");\r\n    setdisplayHideCategory(false);\r\n    setdraweropen(false);\r\n\r\n    // props.showHideOverlay(false);\r\n  };\r\n\r\n  const isPizzaAvailable = menu.pizzas.length;\r\n  const isHappyHoursActive = isHappyHoursActiveInMenu();\r\n  console.log(\"loading in menucategories\", loading);\r\n\r\n  useEffect(() => {\r\n    onDishClick();\r\n    onDrinksClick();\r\n  }, []);\r\n\r\n  const onDishClick = () => {\r\n    var x = document.getElementById(\"hhour\");\r\n    var y = document.getElementById(\"hhour-text\");\r\n    if (x) {\r\n      x.style.backgroundColor = \"#f1f1f1\";\r\n    }\r\n    if (y) {\r\n      y.style.color = \"black\";\r\n    }\r\n\r\n    var a = document.getElementById(\"pizza-cat\");\r\n    var b = document.getElementById(\"pizza-cat-text\");\r\n    if (a) {\r\n      a.style.backgroundColor = \"#f1f1f1\";\r\n    }\r\n    if (b) {\r\n      b.style.color = \"black\";\r\n    }\r\n    showDishes(!dishes);\r\n    drinkstatus(true);\r\n    dispatch(displayPizzas());\r\n  };\r\n  const onDrinksClick = () => {\r\n    var x = document.getElementById(\"hhour\");\r\n    var y = document.getElementById(\"hhour-text\");\r\n    if (x) {\r\n      x.style.backgroundColor = \"#f1f1f1\";\r\n    }\r\n    if (y) {\r\n      y.style.color = \"black\";\r\n    }\r\n\r\n    var a = document.getElementById(\"pizza-cat\");\r\n    var b = document.getElementById(\"pizza-cat-text\");\r\n    if (a) {\r\n      a.style.backgroundColor = \"#f1f1f1\";\r\n    }\r\n    if (b) {\r\n      b.style.color = \"black\";\r\n    }\r\n    showDrinks(!drinks);\r\n    drinkstatus(true);\r\n\r\n    // dispatch(displayPizzas());\r\n  };\r\n  function isHappyHoursActiveInMenu() {\r\n    return menu.menuItems.some(({ isHappyHourActive }) => isHappyHourActive);\r\n  }\r\n\r\n  function showCategoryMobile() {\r\n    if (menu.cart.length >= 1) {\r\n      var x = document.getElementById(\"id-of-menu\");\r\n\r\n      x.style.bottom = \"12%\";\r\n    }\r\n    showCategory();\r\n  }\r\n\r\n  function hideCategoryMobile() {\r\n    if (menu.cart.length >= 1) {\r\n      var x = document.getElementById(\"id-of-menu\");\r\n\r\n      x.style.bottom = \"12%\";\r\n    }\r\n    hideCategory();\r\n  }\r\n\r\n  const [draweropen, setdraweropen] = useState(false);\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <>\r\n      {/* <Sticky> */}\r\n      <div\r\n        className='box_style_1 hide-on-mobile menu_box'\r\n        id='cart_box'\r\n        style={{ border: \"none\" }}\r\n        // style={{ position: \"sticky\", top: \"10px\" }}\r\n      >\r\n        <ul id='cat_nav'>\r\n          {console.log(\"categories\", categories)}\r\n          {console.log(\"menu items\", menu.menuItems)}\r\n\r\n          {/* {categories[0] ? (\r\n            <li\r\n              style={{\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                borderRadius: \"8px\",\r\n                height: \"40px\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              <Link\r\n                activeClass='active'\r\n                smooth={true}\r\n                spy={true}\r\n                //to=\"Kebabs\"\r\n                //to={dishes ? \"\" : categories[0]?.cname}\r\n                offset={0}\r\n                onClick={onDishClick}\r\n              >\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"-4px\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  Dishes <span>({categories[0]?.sub_category.length})</span>\r\n                </p>\r\n\r\n                {!dishes ? (\r\n                  <ChevronRightIcon\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                ) : (\r\n                  <KeyboardArrowDownIcon\r\n                    className='show-down'\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                )}\r\n              </Link>\r\n            </li>\r\n          ) : null} */}\r\n          {categories.map((category, i) => {\r\n            return category.cname === categories[0].cname && dishes ? (\r\n              <MenuSubCategory\r\n                list={category.sub_category}\r\n                searchQuery={menu.searchQuery}\r\n                selectedCategoryId={menu.selectedCategoryId}\r\n                setSelectedCategoryId={setSelectedCategoryId}\r\n                drinkstatus={drinkstatus}\r\n                hide={() => hideCategory()}\r\n              />\r\n            ) : null;\r\n          })}\r\n\r\n          {/* {categories[1] ? (\r\n            <li\r\n              style={{\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                borderRadius: \"8px\",\r\n                marginTop: \"15px\",\r\n                height: \"40px\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              <Link\r\n                // activeClass='active'\r\n                smooth={true}\r\n                spy={true}\r\n                to={drinks ? \"\" : categories[1]?.cname}\r\n                offset={-50}\r\n                duration={3000}\r\n                onClick={onDrinksClick}\r\n              >\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"-4px\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {categories[1].cname}\r\n                  <span>({categories[1]?.sub_category.length})</span>{\" \"}\r\n                </p>\r\n                {!drinks ? (\r\n                  <ChevronRightIcon\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                ) : (\r\n                  <KeyboardArrowDownIcon\r\n                    className='show-down'\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                )}\r\n              </Link>\r\n            </li>\r\n          ) : null} */}\r\n          {categories.map((category, i) => {\r\n            return category?.cname === categories[1]?.cname && drinks ? (\r\n              <MenuSubCategory\r\n                list={category.sub_category}\r\n                searchQuery={menu.searchQuery}\r\n                selectedCategoryId={menu.selectedCategoryId}\r\n                setSelectedCategoryId={setSelectedCategoryId}\r\n                drinkstatus={drinkstatus}\r\n                hide={() => hideCategory()}\r\n              />\r\n            ) : null;\r\n          })}\r\n\r\n          {isPizzaAvailable ? (\r\n            <li\r\n              key='pizza'\r\n              id='pizza-cat'\r\n              style={{\r\n                // cursor: \"pointer\",\r\n                // backgroundColor: \"#f1f1f1\",\r\n                // borderRadius: \"8px\",\r\n                // marginTop: \"15px\",\r\n                // height: \"40px\",\r\n                // width: \"90%\",\r\n\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                borderRadius: \"8px\",\r\n                marginTop: \"15px\",\r\n                height: \"45px\",\r\n                // height: \"auto\",\r\n                width: \"85%\",\r\n                marginLeft: \"15px\",\r\n              }}\r\n            >\r\n              <Link\r\n                // activeClass='active'\r\n                smooth={true}\r\n                spy={true}\r\n                to='Pizza'\r\n                duration={4000}\r\n                offset={-70}\r\n                onClick={() => {\r\n                  var x = document.getElementById(\"hhour\");\r\n                  var y = document.getElementById(\"hhour-text\");\r\n                  x.style.backgroundColor = \"#f1f1f1\";\r\n                  y.style.color = \"black\";\r\n                  var a = document.getElementById(\"pizza-cat\");\r\n                  var b = document.getElementById(\"pizza-cat-text\");\r\n                  a.style.backgroundColor = \"#6244da\";\r\n                  b.style.color = \"white\";\r\n                  drinkstatus(true);\r\n                  dispatch(displayPizzas());\r\n                }}\r\n              >\r\n                <p\r\n                  id='pizza-cat-text'\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"-4px\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {categories[2].cname} <span> ({isPizzaAvailable}) </span>{\" \"}\r\n                </p>\r\n                <ChevronRightIcon\r\n                  fontSize='small'\r\n                  style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                />\r\n              </Link>\r\n            </li>\r\n          ) : null}\r\n\r\n          {menu.isHappyHoursApplicable && isHappyHoursActive ? (\r\n            <li\r\n              id='hhour'\r\n              key='happyHours'\r\n              style={{\r\n                // cursor: \"pointer\",\r\n                // backgroundColor: \"#f1f1f1\",\r\n                // borderRadius: \"8px\",\r\n                // marginTop: \"15px\",\r\n                // height: \"40px\",\r\n                // width: \"90%\",\r\n\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                borderRadius: \"8px\",\r\n                marginTop: \"15px\",\r\n                height: \"45px\",\r\n                // height: \"auto\",\r\n                width: \"85%\",\r\n                marginLeft: \"15px\",\r\n              }}\r\n            >\r\n              <Link\r\n                // activeClass='active'\r\n                smooth={true}\r\n                spy={true}\r\n                to='Happy Hours'\r\n                offset={-50}\r\n                duration={4000}\r\n                onClick={() => {\r\n                  var a = document.getElementById(\"pizza-cat\");\r\n                  var b = document.getElementById(\"pizza-cat-text\");\r\n                  a.style.backgroundColor = \"#f1f1f1\";\r\n                  b.style.color = \"black\";\r\n                  var x = document.getElementById(\"hhour\");\r\n                  var y = document.getElementById(\"hhour-text\");\r\n                  x.style.backgroundColor = \"#6244da\";\r\n                  y.style.color = \"white\";\r\n                  drinkstatus(false);\r\n                  dispatch(displayHappyHours());\r\n                }}\r\n              >\r\n                <p\r\n                  id='hhour-text'\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"-4px\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  Happy hours <span> ({menu?.happyHours?.length}) </span>\r\n                </p>\r\n                <ChevronRightIcon\r\n                  fontSize='small'\r\n                  style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                />\r\n              </Link>\r\n            </li>\r\n          ) : null}\r\n        </ul>\r\n      </div>\r\n      {/* </Sticky> */}\r\n\r\n      {/* section of mobile start */}\r\n\r\n      {/* <SimpleBarReact\r\n        autoHide={true}\r\n        className={`${displayCategoryInMobile} menu-categories-container`}\r\n      >\r\n        {menu.isHappyHoursApplicable && isHappyHoursActive ? (\r\n          <>\r\n            <li\r\n              style={{\r\n                cursor: \"pointer\",\r\n                listStyleType: \"none\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              <Link\r\n                activeClass=\"active\"\r\n                smooth={true}\r\n                spy={true}\r\n                offset={0}\r\n                onClick={onDishClick}\r\n              >\r\n                Dishes <span>({categories[0]?.sub_category.length})</span>\r\n                <ChevronRightIcon\r\n                  fontSize=\"small\"\r\n                  style={{ float: \"right\" }}\r\n                />{\" \"}\r\n              </Link>\r\n            </li>\r\n            {categories.map((category, i) => {\r\n              return category.cname === \"Dishes\" && dishes ? (\r\n                <MenuSubCategory\r\n                  list={category.sub_category}\r\n                  searchQuery={menu.searchQuery}\r\n                  selectedCategoryId={menu.selectedCategoryId}\r\n                  setSelectedCategoryId={setSelectedCategoryId}\r\n                  drinkstatus={drinkstatus}\r\n                  hide={() => hideCategory()}\r\n                />\r\n              ) : null;\r\n            })}\r\n\r\n            <li\r\n              style={{\r\n                cursor: \"pointer\",\r\n                listStyleType: \"none\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              <Link\r\n                activeClass=\"active\"\r\n                smooth={true}\r\n                spy={true}\r\n                to={drinks ? \"\" : categories[1]?.cname}\r\n                offset={-50}\r\n                duration={3000}\r\n                onClick={onDrinksClick}\r\n              >\r\n                Drinks<span>({categories[1]?.sub_category.length})</span>{\" \"}\r\n                <ChevronRightIcon fontSize=\"small\" style={{ float: \"right\" }} />\r\n              </Link>\r\n            </li>\r\n            {categories.map((category, i) => {\r\n              return category.cname === \"Drinks\" && drinks ? (\r\n                <MenuSubCategory\r\n                  list={category.sub_category}\r\n                  searchQuery={menu.searchQuery}\r\n                  selectedCategoryId={menu.selectedCategoryId}\r\n                  setSelectedCategoryId={setSelectedCategoryId}\r\n                  drinkstatus={drinkstatus}\r\n                  hide={() => hideCategory()}\r\n                />\r\n              ) : null;\r\n            })}\r\n          </>\r\n        ) : null}\r\n        {isPizzaAvailable ? (\r\n          <li\r\n            key=\"pizza\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              listStyleType: \"none\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <Link\r\n              activeClass=\"active\"\r\n              smooth={true}\r\n              spy={true}\r\n              to=\"Pizza\"\r\n              duration={4000}\r\n              offset={-70}\r\n              onClick={() => {\r\n                drinkstatus(true);\r\n                dispatch(displayPizzas());\r\n                hideCategory();\r\n              }}\r\n            >\r\n              Pizza's <span> ({isPizzaAvailable}) </span>{\" \"}\r\n              <ChevronRightIcon fontSize=\"small\" style={{ float: \"right\" }} />\r\n            </Link>\r\n          </li>\r\n        ) : null}\r\n\r\n        {menu.isHappyHoursApplicable && isHappyHoursActive ? (\r\n          <li\r\n            key=\"happyHours\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              listStyle: \"none\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <Link\r\n              activeClass=\"active\"\r\n              smooth={true}\r\n              spy={true}\r\n              to=\"Happy Hours\"\r\n              offset={-50}\r\n              duration={4000}\r\n              onClick={() => {\r\n                drinkstatus(false);\r\n                dispatch(displayHappyHours());\r\n              }}\r\n            >\r\n              Happy hours <span> ({menu?.happyHours?.length}) </span>\r\n              <ChevronRightIcon fontSize=\"small\" style={{ float: \"right\" }} />\r\n            </Link>\r\n          </li>\r\n        ) : null}\r\n      </SimpleBarReact> */}\r\n\r\n      <SwipeableDrawer\r\n        anchor={\"left\"}\r\n        open={draweropen}\r\n        onClose={() => setdraweropen(false)}\r\n        onOpen={() => {}}\r\n      >\r\n        <div\r\n          className={classes.list}\r\n          style={{ marginTop: \"50px\", overflowY: \"scroll\" }}\r\n        >\r\n          <ul id='cat_nav'>\r\n            {console.log(\"categories\", categories)}\r\n            {console.log(\"menu items\", menu.menuItems)}\r\n\r\n            {/* <li\r\n              style={{\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                borderRadius: \"8px\",\r\n                height: \"40px\",\r\n                width: \"85%\",\r\n                marginLeft: \"15px\",\r\n              }}\r\n            >\r\n              <Link\r\n                activeClass='active'\r\n                smooth={true}\r\n                spy={true}\r\n               \r\n                offset={0}\r\n                onClick={onDishClick}\r\n              >\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"-4px\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {categories[0].cname} <span>({categories[0]?.sub_category.length})</span>\r\n                </p>\r\n\r\n                {!dishes ? (\r\n                  <ChevronRightIcon\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                ) : (\r\n                  <KeyboardArrowDownIcon\r\n                    className='show-down'\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                )}\r\n              </Link>\r\n            </li> */}\r\n            {categories.map((category, i) => {\r\n              return category.cname === \"Dishes\" && dishes ? (\r\n                <MenuSubCategory\r\n                  list={category.sub_category}\r\n                  searchQuery={menu.searchQuery}\r\n                  selectedCategoryId={menu.selectedCategoryId}\r\n                  setSelectedCategoryId={setSelectedCategoryId}\r\n                  drinkstatus={drinkstatus}\r\n                  hide={() => hideCategory()}\r\n                />\r\n              ) : null;\r\n            })}\r\n\r\n            <li\r\n              style={{\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                borderRadius: \"8px\",\r\n                marginTop: \"15px\",\r\n                height: \"40px\",\r\n                width: \"72%\",\r\n                marginLeft: \"15px\",\r\n              }}\r\n            >\r\n              <Link\r\n                activeClass='active'\r\n                smooth={true}\r\n                spy={true}\r\n                to={drinks ? \"\" : categories[1]?.cname}\r\n                offset={-50}\r\n                duration={3000}\r\n                onClick={onDrinksClick}\r\n              >\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: \"-4px\",\r\n                    color: \"black\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  {categories[1]?.cname}\r\n                  <span>({categories[1]?.sub_category.length})</span>{\" \"}\r\n                </p>\r\n                {!drinks ? (\r\n                  <ChevronRightIcon\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                ) : (\r\n                  <KeyboardArrowDownIcon\r\n                    className='show-down'\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                )}\r\n              </Link>\r\n            </li>\r\n            {categories.map((category, i) => {\r\n              return category.cname === categories[1]?.cname && drinks ? (\r\n                <MenuSubCategory\r\n                  list={category.sub_category}\r\n                  searchQuery={menu.searchQuery}\r\n                  selectedCategoryId={menu.selectedCategoryId}\r\n                  setSelectedCategoryId={setSelectedCategoryId}\r\n                  drinkstatus={drinkstatus}\r\n                  hide={() => hideCategory()}\r\n                />\r\n              ) : null;\r\n            })}\r\n            {isPizzaAvailable ? (\r\n              <li\r\n                key='pizza'\r\n                id='pizza-cat'\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: \"#f1f1f1\",\r\n                  borderRadius: \"8px\",\r\n                  marginTop: \"15px\",\r\n                  height: \"40px\",\r\n                  width: \"72%\",\r\n                  marginLeft: \"15px\",\r\n                }}\r\n              >\r\n                <Link\r\n                  activeClass='active'\r\n                  smooth={true}\r\n                  spy={true}\r\n                  to='Pizza'\r\n                  duration={4000}\r\n                  offset={-70}\r\n                  onClick={() => {\r\n                    var x = document.getElementById(\"hhour\");\r\n                    var y = document.getElementById(\"hhour-text\");\r\n                    x.style.backgroundColor = \"#f1f1f1\";\r\n                    y.style.color = \"black\";\r\n                    var a = document.getElementById(\"pizza-cat\");\r\n                    var b = document.getElementById(\"pizza-cat-text\");\r\n                    a.style.backgroundColor = \"#6244da\";\r\n                    b.style.color = \"white\";\r\n                    drinkstatus(true);\r\n                    dispatch(displayPizzas());\r\n                    setdraweropen(false);\r\n                  }}\r\n                >\r\n                  <p\r\n                    id='pizza-cat-text'\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      marginTop: \"-4px\",\r\n                      color: \"black\",\r\n                      fontSize: \"16px\",\r\n                      fontWeight: \"600\",\r\n                    }}\r\n                  >\r\n                    Pizza's <span> ({isPizzaAvailable}) </span>{\" \"}\r\n                  </p>\r\n                  <ChevronRightIcon\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                </Link>\r\n              </li>\r\n            ) : null}\r\n\r\n            {menu.isHappyHoursApplicable && isHappyHoursActive ? (\r\n              <li\r\n                id='hhour'\r\n                key='happyHours'\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: \"#f1f1f1\",\r\n                  borderRadius: \"8px\",\r\n                  marginTop: \"15px\",\r\n                  height: \"40px\",\r\n                  width: \"72%\",\r\n                  marginLeft: \"15px\",\r\n                }}\r\n              >\r\n                <Link\r\n                  activeClass='active'\r\n                  smooth={true}\r\n                  spy={true}\r\n                  to='Happy Hours'\r\n                  offset={-50}\r\n                  duration={4000}\r\n                  onClick={() => {\r\n                    var a = document.getElementById(\"pizza-cat\");\r\n                    var b = document.getElementById(\"pizza-cat-text\");\r\n                    a.style.backgroundColor = \"#f1f1f1\";\r\n                    b.style.color = \"black\";\r\n                    var x = document.getElementById(\"hhour\");\r\n                    var y = document.getElementById(\"hhour-text\");\r\n                    x.style.backgroundColor = \"#6244da\";\r\n                    y.style.color = \"white\";\r\n                    drinkstatus(false);\r\n                    dispatch(displayHappyHours());\r\n                    setdraweropen(false);\r\n                  }}\r\n                >\r\n                  <p\r\n                    id='hhour-text'\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      marginTop: \"-4px\",\r\n                      color: \"black\",\r\n                      fontSize: \"16px\",\r\n                      fontWeight: \"600\",\r\n                    }}\r\n                  >\r\n                    Happy hours <span> ({menu?.happyHours?.length}) </span>\r\n                  </p>\r\n                  <ChevronRightIcon\r\n                    fontSize='small'\r\n                    style={{ float: \"right\", marginTop: \"-35px\" }}\r\n                  />\r\n                </Link>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </SwipeableDrawer>\r\n\r\n      {/* section of mobile end */}\r\n\r\n      {/* {!displayHideCategory ? ( */}\r\n      <section className='mobile-menu-categories' id='id-of-menu'>\r\n        <span onClick={showCategoryMobile} className='categories-button'>\r\n          <RestaurantIcon style={{ marginTop: \"-5px\" }} fontSize='small' /> MENU\r\n        </span>\r\n      </section>\r\n      {/* ) : null} */}\r\n      {/* {displayHideCategory ? (\r\n        <section className=\"mobile-menu-categories\" id=\"id-of-menu\">\r\n          <span onClick={hideCategoryMobile} className=\"categories-button\">\r\n            <CloseIcon style={{ marginTop: \"-5px\" }} /> Menu\r\n          </span>\r\n        </section>\r\n      ) : null} */}\r\n    </>\r\n  );\r\n});\r\n\r\nconst MenuSubCategory = React.memo(\r\n  ({\r\n    list,\r\n    searchQuery,\r\n    selectedCategoryId,\r\n    setSelectedCategoryId,\r\n    drinkstatus,\r\n    hide,\r\n  }) => {\r\n    const menu = useSelector((state) => state.menu);\r\n    const isSelectedCategory = (categoryId, index) => {\r\n      if (menu.selectedCategoryId) {\r\n        return categoryId === menu.selectedCategoryId;\r\n      }\r\n\r\n      return menu.searchQuery.trim().length > 0 ? false : index === 0;\r\n    };\r\n    console.log(\"list in menucategories is\", list);\r\n    const dispatch = useDispatch();\r\n    const handleClick = (e, item) => {\r\n      drinkstatus(true);\r\n      // console.log(\"lis of sub cat\", temp_cat);\r\n      // e.stopPropagation();\r\n\r\n      var a = document.getElementById(\"pizza-cat\");\r\n      var b = document.getElementById(\"pizza-cat-text\");\r\n\r\n      var x = document.getElementById(\"hhour\");\r\n      var y = document.getElementById(\"hhour-text\");\r\n      if (x) {\r\n        x.style.backgroundColor = \"#f1f1f1\";\r\n      }\r\n      if (y) {\r\n        y.style.color = \"black\";\r\n      }\r\n      if (a) {\r\n        a.style.backgroundColor = \"#f1f1f1\";\r\n      }\r\n      if (b) {\r\n        b.style.color = \"black\";\r\n      }\r\n\r\n      dispatch(setSelectedCategoryId(item.category_id));\r\n      hide();\r\n\r\n      console.log(\"items is\", item);\r\n    };\r\n\r\n    return list.map((s_category, i) => {\r\n      //drinkstatus(true);\r\n      console.log(\"s_category\", s_category);\r\n\r\n      return (\r\n        <Link\r\n          activeClass='active'\r\n          className={s_category.cname}\r\n          to={s_category.cname}\r\n          // to='Kebabs'\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={4000}\r\n          onClick={(e) => {\r\n            handleClick(e, s_category);\r\n          }}\r\n        >\r\n          <li\r\n            //id={s_category.cname}\r\n            key={s_category.category_id}\r\n            className='categories-list-in-menu'\r\n            style={{\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"#f1f1f1\",\r\n              borderRadius: \"8px\",\r\n              marginTop: \"15px\",\r\n              // height: \"40px\",\r\n              height: \"auto\",\r\n              width: \"85%\",\r\n              marginLeft: \"15px\",\r\n            }}\r\n            className={`category ${\r\n              isSelectedCategory(s_category.category_id, i)\r\n                ? \"selected_cat_id\"\r\n                : \"\"\r\n            }`}\r\n\r\n            // onClick={(e) => handleClick(e, s_category)}\r\n          >\r\n            <a\r\n              id='subcategory_id'\r\n              className={`category ${\r\n                isSelectedCategory(s_category.category_id, i)\r\n                  ? \"selected_cat_id_color\"\r\n                  : \"\"\r\n              }`}\r\n              style={{\r\n                textAlign: \"center\",\r\n                marginTop: \"-12px\",\r\n                color: \"black\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"600\",\r\n\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {s_category?.cname}{\" \"}\r\n              {/* <ChevronRightIcon\r\n              fontSize=\"small\"\r\n              className=\"hide-on-mobile\"\r\n              style={{ float: \"right\" }}\r\n            /> */}\r\n            </a>\r\n          </li>\r\n        </Link>\r\n      );\r\n    });\r\n  }\r\n);\r\n\r\nexport default MenuCategories;\r\n\r\n//  cursor: \"pointer\",\r\n// borderRadius: \"8px\",\r\n// backgroundColor: \"#f1f1f1\",\r\n// marginTop: \"10px\",\r\n// height: \"auto\",\r\n// width: \"70%\",\r\n// width: \"auto\",\r\n//  marginLeft: \"20%\",\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrderDetails\\MyOrderDetails.jsx",["624","625","626"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { fetchMyOrderDetails } from \"../../state-management/user/asyncActions\";\r\n\r\nconst isFmHaveDetours = (fmId, detoursList) => {\r\n  let data = \"\";\r\n\r\n  let result = false;\r\n\r\n  detoursList.map((detour) => {\r\n    if (detour.fm_item_id === fmId) {\r\n      // detour availabe\r\n      result = true;\r\n      // now loop through items\r\n      detour.dom.map((op) => {\r\n        data += ` , ${op.om_item_name}`;\r\n      });\r\n    }\r\n  });\r\n\r\n  return {\r\n    result,\r\n    data,\r\n  };\r\n};\r\n\r\nconst MyOrderDetails = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [details, setDetails] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const fetchAndShowOrderDetails = async (orderId) => {\r\n    props.loading(true);\r\n    const { payload } = await dispatch(fetchMyOrderDetails(orderId));\r\n    console.log(payload.data);\r\n    if (payload.status === \"200\") {\r\n      setDetails(payload.data[0]);\r\n    }\r\n    props.loading(false);\r\n  };\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const openModal = () => {\r\n    setModal(!modal);\r\n    fetchAndShowOrderDetails(props.orderId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"details are\", details);\r\n  }, [details]);\r\n  //   const itemList = details?.products?.map((item, i) => {\r\n  //     let forcedModifier = \"\";\r\n\r\n  //     let optionalModifier = \"\";\r\n\r\n  //     let toppings = \"\";\r\n\r\n  //     let sizeAndBase = \"\";\r\n\r\n  //     let halfNhalf = \"\";\r\n\r\n  //     if (\r\n  //       item.forced_modifier === undefined ||\r\n  //       item.forced_modifier.length !== 0\r\n  //     ) {\r\n  //       item.forced_modifier.map(function (fm) {\r\n  //         // check if there is detour availabe\r\n  //         const detours = isFmHaveDetours(fm.fmid, item.detours);\r\n\r\n  //         forcedModifier += `, ${fm.name}`;\r\n  //         forcedModifier = forcedModifier.replace(/[\\s,]+/, \" \").trim();\r\n  //         if (detours.result) {\r\n  //           detours.data = detours.data.replace(/[\\s,]+/, \" \").trim();\r\n  //           forcedModifier += `(${detours.data})`;\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //     if (\r\n  //       item.optional_modifier === undefined ||\r\n  //       item.optional_modifier.length !== 0\r\n  //     ) {\r\n  //       item.optional_modifier.map(function (om) {\r\n  //         optionalModifier += `, ${om.name}`;\r\n  //       });\r\n  //       optionalModifier = optionalModifier.replace(/[\\s,]+/, \" \").trim();\r\n  //     }\r\n\r\n  //     // PIZZA Details\r\n\r\n  //     // Toppings\r\n  //     if (item.toppings !== undefined) {\r\n  //       item.toppings.map(function (top) {\r\n  //         toppings += `, ${top.name}`;\r\n  //       });\r\n  //       toppings = toppings.replace(/[\\s,]+/, \" \").trim();\r\n  //     }\r\n\r\n  //     // SizeAndBase\r\n  //     if (item.base !== undefined) {\r\n  //       console.log(\"pizaa bug\", item);\r\n  //       sizeAndBase = `${item.size_vlaue} ${item.base.base_name}`;\r\n  //     }\r\n\r\n  //     // HalfNhalf\r\n  //     if (\r\n  //       item.first_half_toppings !== undefined &&\r\n  //       item.second_half_toppings !== undefined &&\r\n  //       item.first_half_toppings.length > 0 &&\r\n  //       item.second_half_toppings.length > 0\r\n  //     ) {\r\n  //       halfNhalf = `First Half: ${item.first_half_toppings[0].name}, Second Half: ${item.second_half_toppings[0].name}`;\r\n  //     }\r\n\r\n  //   });\r\n  return (\r\n    <div>\r\n      <Button color=\"black\" onClick={openModal}>\r\n        Details\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} style={{ top: \"25%\" }}>\r\n        <ModalHeader toggle={toggle}>Order Details</ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <strong>Order No - </strong>\r\n            <span>&nbsp;{details.order_id}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Date - </strong>\r\n            <span>&nbsp;{details.order_date}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Status - </strong>\r\n            <span>&nbsp;{details.order_status}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Type - </strong>\r\n            <span>&nbsp;{details.delivery_option}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Time - </strong>\r\n            <span>&nbsp;{details.order_time}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Comments - </strong>\r\n            <span>&nbsp;{details.comments}</span>\r\n          </div>\r\n          <Table responsive hover striped>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Quantity x Price</th>\r\n                <th>Tax</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {details &&\r\n                details?.products?.map((product, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <th>{product.product_name}</th>\r\n                      <th>{`${product.quantity} X ${product.price}`}</th>\r\n                      <th>{product.tax}</th>\r\n                      <th>\r\n                        {Number(product.quantity) * Number(product.price)}\r\n                      </th>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div>\r\n              <strong>Subtotal - </strong>\r\n              <span>&nbsp;{details.subtotal}</span>\r\n            </div>\r\n            <div>\r\n              <strong>Tax - </strong>\r\n              <span>&nbsp;{details.tax}</span>\r\n            </div>\r\n            <div>\r\n              <strong>Delivery Cost - </strong>\r\n              <span>&nbsp;{details.delivery_cost}</span>\r\n            </div>\r\n            {details.happy_hours_discount ? (\r\n              <div>\r\n                <strong>Happy Hour Discount - </strong>\r\n                <span>&nbsp;{details.happy_hours_discount}</span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div>\r\n            <strong>Total - </strong>\r\n            <span>&nbsp;{details.total}</span>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>\r\n            Close\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrderDetails;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\MenuItems\\MenuItems.jsx",["627","628","629","630","631","632","633"],"import React, { useMemo, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MenuTable from \"../../components/MenuTable/MenuTable\";\r\nimport PizzaMenuTable from \"../../components/MenuTable/PizzaMenuTable\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport { getFilterredList } from \"../../state-management/menu/selectors\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { addItem, removeItem } from \"../../state-management/menu/actions\";\r\n\r\nconst MenuItems = React.memo(\r\n  ({\r\n    onAddItem,\r\n    onRemoveItem,\r\n    categories,\r\n    pizzas,\r\n    happyhours,\r\n    selectedCategoryId,\r\n    menuItems,\r\n    restaurantInfo,\r\n    searchQuery,\r\n    loading,\r\n    status,\r\n  }) => {\r\n    //! [x] Need to refractored, should create a seperate Table (presentational component)\r\n    //! Should filter isOnline isHappyhour active and need to implement details page for menun with subcategory,\r\n    //! Should implement modifiers for the menu items,\r\n    //? Need code splitting, load lazily because this is data intensive operation, create a suspense in main route.\r\n\r\n    //? Need to filter Pizzas and HappyHours based on isActive and isOnline\r\n    const menu = useSelector((state) => state.menu);\r\n    const state = useSelector((state) => state);\r\n    const [hhour, sethhour] = useState(false);\r\n    const dispatch = useDispatch();\r\n    console.log(\"status in menuiten\", status);\r\n\r\n    console.log(\"loading in menuTable\", loading);\r\n\r\n    const allforcedModifiers = menu.allForcedModifier;\r\n    var array_of_ids = [];\r\n    var tem_arr_cname = [];\r\n    var list = (menuItems = getFilterredList(state));\r\n    console.log(\"happ hour array \", list);\r\n\r\n    const func = () => {\r\n      var tem_arr = [];\r\n\r\n      var dish_subcat_id = [];\r\n      var dish_cname = [];\r\n      var drink_subcat_id = [];\r\n      var drink_cname = [];\r\n\r\n      if (menu.categoriesList[0]) {\r\n        for (let i = 0; i < menu.categoriesList[0].sub_category.length; i++) {\r\n          dish_subcat_id.push(\r\n            menu.categoriesList[0].sub_category[i].category_id\r\n          );\r\n          dish_cname.push(menu.categoriesList[0].sub_category[i].cname);\r\n        }\r\n        array_of_ids.push(dish_subcat_id);\r\n        tem_arr_cname.push(dish_cname);\r\n      }\r\n\r\n      if (menu.categoriesList[1]) {\r\n        for (let i = 0; i < menu.categoriesList[1].sub_category.length; i++) {\r\n          drink_subcat_id.push(\r\n            menu.categoriesList[1].sub_category[i].category_id\r\n          );\r\n\r\n          dish_cname.push(menu.categoriesList[1].sub_category[i].cname);\r\n        }\r\n      }\r\n      array_of_ids.push(drink_subcat_id);\r\n      tem_arr_cname.push(drink_cname);\r\n\r\n      console.log(\"temp arr cname is\", tem_arr_cname);\r\n\r\n      for (let j = 0; j < dish_subcat_id.length; j++) {\r\n        tem_arr.push(\r\n          menu.menuItems.filter(\r\n            ({ category_id: cid, online }) =>\r\n              cid === dish_subcat_id[j] && online === \"1\"\r\n          )\r\n        );\r\n      }\r\n\r\n      for (let j = 0; j < drink_subcat_id.length; j++) {\r\n        tem_arr.push(\r\n          menu.menuItems.filter(\r\n            ({ category_id: cid, online }) =>\r\n              cid === drink_subcat_id[j] && online === \"1\"\r\n          )\r\n        );\r\n      }\r\n\r\n      console.log(\"temp arr is\", tem_arr);\r\n      return tem_arr;\r\n    };\r\n\r\n    const findCategory = (selectedCategoryId) => {\r\n      console.log(\"memoized value\");\r\n\r\n      return menu.menuItems.filter(\r\n        ({ category_id: cid, online }) =>\r\n          cid === selectedCategoryId && online === \"1\"\r\n      );\r\n    };\r\n\r\n    const filteredIems = useMemo(\r\n      () => findCategory(selectedCategoryId),\r\n      [selectedCategoryId]\r\n    );\r\n\r\n    function getDishesDescription() {\r\n      if (\r\n        categories.length &&\r\n        selectedCategoryId &&\r\n        selectedCategoryId.length > 0\r\n      ) {\r\n        const category = categories.find(\r\n          (category) =>\r\n            category[\"sub_category\"] &&\r\n            category[\"sub_category\"].find(\r\n              ({ category_id: cId }) => cId === selectedCategoryId\r\n            )\r\n        );\r\n        console.log(\"category\", category);\r\n        const subCategory =\r\n          category &&\r\n          category[\"sub_category\"] &&\r\n          category[\"sub_category\"].find(\r\n            ({ category_id: cId }) => cId === selectedCategoryId\r\n          );\r\n        console.log(\"subcategory is\", subCategory);\r\n        // cname = subCategory ? subCategory.cname : \"\";\r\n        return subCategory ? subCategory.description : \"\";\r\n      }\r\n    }\r\n    function getSelectedCategoryName(catname) {\r\n      console.log(\"catname is xyz\", catname);\r\n      console.log(\"array of id in catname\", array_of_ids);\r\n      var req_ids = [];\r\n      for (let i = 0; i < 2; i++) {\r\n        for (let j = 0; j < array_of_ids[i].length; j++)\r\n          req_ids.push(array_of_ids[i][j]);\r\n      }\r\n\r\n      console.log(\"req ids in catnme\", tem_arr_cname);\r\n      // if (\r\n      //   categories.length &&\r\n      //   selectedCategoryId &&\r\n      //   selectedCategoryId.length > 0\r\n      // ) {\r\n      //   const category = categories.find(\r\n      //     (category) =>\r\n      //       category[\"sub_category\"] &&\r\n      //       category[\"sub_category\"].find(\r\n      //         ({ category_id: cId }) => cId === selectedCategoryId\r\n      //       )\r\n      //   );\r\n      //   console.log(\"category in catname\", category);\r\n\r\n      for (let k = 0; k < req_ids.length; k++) {\r\n        if (\r\n          categories.length &&\r\n          selectedCategoryId &&\r\n          selectedCategoryId.length > 0\r\n        ) {\r\n          const category = categories.find(\r\n            (category) =>\r\n              category[\"sub_category\"] &&\r\n              category[\"sub_category\"].find(\r\n                ({ category_id: cId }) => cId === req_ids[k]\r\n              )\r\n          );\r\n          console.log(\"category in catname\", category);\r\n          const subCategory =\r\n            category &&\r\n            category[\"sub_category\"] &&\r\n            category[\"sub_category\"].find(\r\n              ({ category_id: cId }) => cId === req_ids[k]\r\n            );\r\n          console.log(\"subcategory in catname\", subCategory);\r\n          console.log(\"break\");\r\n          return subCategory ? subCategory.cname : \"\";\r\n        }\r\n        //console.log(\"subcategory in catname\", subCategory);\r\n        // cname = subCategory ? subCategory.cname : \"\";\r\n        //return subCategory ? subCategory.cname : \"\";\r\n      }\r\n\r\n      if (selectedCategoryId === -1) {\r\n        return \"Happy Hours\";\r\n      } else if (selectedCategoryId === -2) {\r\n        return \"Pizza's\";\r\n      }\r\n    }\r\n\r\n    const isPriceWithoutTax = () => {\r\n      return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n    };\r\n\r\n    const getActualPrice = (item) => {\r\n      //console.log(\"item.price\", item.price);\r\n      if (menu.restaurantInfo) {\r\n        // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n        return isPriceWithoutTax()\r\n          ? item.price\r\n          : (\r\n              Number(item.price) +\r\n              Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n            ).toFixed(2);\r\n      }\r\n\r\n      return 0;\r\n    };\r\n\r\n    var a = 1;\r\n    // const getItemPrice = (item, isStillActive) => {\r\n    //   if (item.happyHourItem && isStillActive) {\r\n    //     if (item.similarItems && item.similarItems.length > 0) {\r\n    //       let totalPrice = 0;\r\n\r\n    //       for (let i = 0; i < item.similarItems.length; i++) {\r\n    //         totalPrice += this.isPriceWithoutTax()\r\n    //           ? item.similarItems[i].happyHourItem.subTotal\r\n    //           : item.similarItems[i].happyHourItem.grandTotal;\r\n    //       }\r\n\r\n    //       return Number(totalPrice).toFixed(2);\r\n    //     } else {\r\n    //       console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n    //       console.log(\r\n    //         \"grand\",\r\n    //         Number(item.happyHourItem.grandTotal).toFixed(2)\r\n    //       );\r\n    //       return this.isPriceWithoutTax()\r\n    //         ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n    //         : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n    //     }\r\n    //   } else if (item.subTotal && item.grandTotal) {\r\n    //     if (item.similarItems && item.similarItems.length > 0) {\r\n    //       let totalPrice = 0;\r\n\r\n    //       for (let i = 0; i < item.similarItems.length; i++) {\r\n    //         totalPrice += this.isPriceWithoutTax()\r\n    //           ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n    //           : item.similarItems[i].grandTotal ||\r\n    //             this.getActualPrice(item.similarItems[i]);\r\n    //       }\r\n\r\n    //       return Number(totalPrice).toFixed(2);\r\n    //     } else {\r\n    //       console.log(\r\n    //         \"log\",\r\n    //         this.isPriceWithoutTax()\r\n    //           ? item.subTotal || item.price\r\n    //           : item.grandTotal || this.getActualPrice(item)\r\n    //       );\r\n    //       return this.isPriceWithoutTax()\r\n    //         ? item.subTotal || item.price\r\n    //         : item.grandTotal || this.getActualPrice(item);\r\n    //     }\r\n    //   }\r\n    // };\r\n\r\n    const removefromcart = (item) => {\r\n      dispatch(\r\n        removeItem(item, item.modifiers || null, 0, menu.restaurantInfo)\r\n      );\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {/* {console.log(\"seleted category name\", getSelectedCategoryName())}\r\n        {console.log(\"pizzas\", pizzas, \"happyhopurs\", happyhours)} */}\r\n        {console.log(\"categories\", categories)}\r\n        {/* { (selectedCategoryId !== -1 && selectedCategoryId !== -2) ? categories.map((category) => {\r\n          return category.cname === \"Dishes\" || category.cname === \"Drinks\" ? (\r\n            <>\r\n              <MenuTable\r\n                category_name={category.cname}\r\n                list={category.sub_category}\r\n              />\r\n            </>\r\n          ) : null;\r\n        }): null} */}\r\n        {/* {\r\n          selectedCategoryId \r\n        } */}\r\n        {/* {console.log(\r\n          \"find selected category\",\r\n          // menuItems.filter(({ category_id: cid }) => cid === selectedCategoryId)\r\n          filteredIems\r\n        )} */}\r\n        {loading ? (\r\n          <>\r\n            {/* <div className=\"skelton-container\">\r\n              <Skeleton height={28} width={400} style={{ marginLeft: \"10%\" }} />\r\n              <Skeleton height={28} width={300} style={{ marginLeft: \"20%\" }} />\r\n              <Skeleton height={28} width={300} style={{ marginLeft: \"20%\" }} />\r\n              <Skeleton height={28} width={400} style={{ marginLeft: \"10%\" }} />\r\n            </div> */}\r\n\r\n            <div className='skelton-container'>\r\n              <div className='parent-menutable'>\r\n                <div className='parent-flex'>\r\n                  <div className='left-menutable-img'>\r\n                    <div className='img-cover-menutable'>\r\n                      <Skeleton height={100} className='img-skelton' />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='food-details'>\r\n                    <div className='inner-food-details-div'>\r\n                      <div className='specific-food-details'>\r\n                        <h4 className='food-item-name'>\r\n                          <Skeleton height={20} width={200} count={4} />\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {console.log(\"fltered items\", filteredIems)}\r\n            {console.log(\"check product type\", filteredIems[0]?.productType)}\r\n            {console.log(\"func is\", func())}\r\n            {console.log(\"array of id\", array_of_ids)}\r\n\r\n            {status ? (\r\n              <>\r\n                {func().map((val) => {\r\n                  return (\r\n                    <MenuTable\r\n                      symbol={restaurantInfo.monetary_symbol}\r\n                      actualPrice={getActualPrice}\r\n                      //category_name={getSelectedCategoryName(val)}\r\n                      // description={getDishesDescription()}\r\n                      list={val}\r\n                      //list={findAllMenuForDish}\r\n                      onAddItem={onAddItem}\r\n                      onRemoveItem={onRemoveItem}\r\n                      loading={loading}\r\n                    />\r\n                  );\r\n                })}\r\n              </>\r\n            ) : null}\r\n\r\n            {/* \r\n            {filteredIems[0]?.productType === \"Dishes\" ||\r\n            filteredIems[0]?.productType === \"Drinks\" ? (\r\n              <MenuTable\r\n                symbol={restaurantInfo.monetary_symbol}\r\n                actualPrice={getActualPrice}\r\n                category_name={getSelectedCategoryName()}\r\n                description={getDishesDescription()}\r\n                list={filteredIems}\r\n                //list={findAllMenuForDish}\r\n                onAddItem={onAddItem}\r\n                onRemoveItem={onRemoveItem}\r\n                loading={loading}\r\n              />\r\n            ) : null} */}\r\n            {console.log(\"items in menuitem before pizza\", pizzas)}\r\n            {status ? (\r\n              <>\r\n                {menu.selectedCategoryId === -2 ? (\r\n                  <PizzaMenuTable\r\n                    symbol={restaurantInfo.monetary_symbol}\r\n                    category_name='Pizza'\r\n                    list={pizzas}\r\n                    loading={loading}\r\n                    removeforpizza={removefromcart}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n\r\n            {console.log(\r\n              \"checking for happyhour\",\r\n              (menuItems = getFilterredList(state))\r\n            )}\r\n            {!status ? (\r\n              <>\r\n                {selectedCategoryId === -1 ? (\r\n                  <MenuTable\r\n                    symbol={restaurantInfo.monetary_symbol}\r\n                    category_name='Happy Hours'\r\n                    list={(menuItems = getFilterredList(state))}\r\n                    onAddItem={onAddItem}\r\n                    loading={loading}\r\n                    headerforhappyhour={hhour}\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MenuItems;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuTable\\MenuTable.jsx",["634","635","636","637","638","639","640","641","642","643","644","645","646","647","648"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-scroll\";\r\n//import Button from \"@material-ui/core/Button\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport MenuModal from \"../../containers/Modals/DishModal/DishModal\";\r\nimport { addItem, removeItem } from \"../../state-management/menu/actions\";\r\nimport DemoFoodImage from \"./demo-food.png\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport DishModal from \"../../containers/Modals/DishModal/DishModal\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./MenuTable.css\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { modalNames } from \"../../components/AppModal/constants\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport img1 from \"./388@2x.png\";\r\nimport img2 from \"./387@2x.png\";\r\nimport img3 from \"./389@2x.png\";\r\nimport img4 from \"./391@2x.png\";\r\nimport img5 from \"./390@2x.png\";\r\n\r\nconst MenuTable = ({\r\n  onAddItem,\r\n  onRemoveItem,\r\n  category_name,\r\n  list,\r\n  symbol,\r\n  actualPrice,\r\n  description,\r\n  loading,\r\n  headerforhappyhour,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const menu = useSelector((state) => state.menu);\r\n  const modal = useSelector((state) => state.modal);\r\n  console.log(\"header for happy\", category_name);\r\n\r\n  console.log(\"listr in menutable\", list);\r\n  if (list.length > 1) {\r\n    console.log(\"cnane in menutable\", list[0].category_id);\r\n  }\r\n  const modalNames = {\r\n    DISH_MODAL: \"DishModal\",\r\n    INTERMEDIATE_ADD_MODAL: \"IntermediateAddModal\",\r\n    PIZZA_MODAL: \"PizzaModal\",\r\n  };\r\n\r\n  var refIndex = -1;\r\n  var timeOutRef = Array.from({ length: 1000 }, () => React.createRef());\r\n\r\n  // const addToCart = (item, isHappyHoursActive) => {\r\n  //   const menuItems = menu.menuItems;\r\n  //   const itemsinmenu = menuItems.find(({ id }) => item.id === id);\r\n  //   console.log(\"items at the time of add\", itemsinmenu);\r\n\r\n  //   if (item.optional_modifier !== \"0\" || item.forced_modifier !== \"0\") {\r\n  //     if (itemsinmenu.qty) {\r\n  //       dispatch(\r\n  //         openModal(modalNames.INTERMEDIATE_ADD_MODAL, {\r\n  //           item: {\r\n  //             ...item,\r\n  //             isHappyHoursActive,\r\n  //           },\r\n  //         })\r\n  //       );\r\n  //     } else {\r\n  //       dispatch(\r\n  //         openModal(modalNames.DISH_MODAL, {\r\n  //           item: {\r\n  //             ...item,\r\n  //             isHappyHoursActive,\r\n  //           },\r\n  //         })\r\n  //       );\r\n  //     }\r\n\r\n  //     return;\r\n  //   }\r\n\r\n  //   //this.props.addItem(item, null, 0, this.props.restaurantInfo);\r\n\r\n  //   dispatch(addItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  // };\r\n\r\n  const isPriceWithoutTax = () => {\r\n    console.log(\r\n      \"price without tax\",\r\n      menu.restaurantInfo[\"price_without_tax_flag\"]\r\n    );\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  const getSelectedCategoryName = (cname) => {\r\n    console.log(\"cname in menu\", cname);\r\n    var selectedCategoryId;\r\n    if (cname.length > 0) {\r\n      selectedCategoryId = cname[0].category_id;\r\n    }\r\n    if (menu.categoriesList.length) {\r\n      const category = menu.categoriesList.find(\r\n        (category) =>\r\n          category[\"sub_category\"] &&\r\n          category[\"sub_category\"].find(\r\n            ({ category_id: cId }) => cId === selectedCategoryId\r\n          )\r\n      );\r\n      const subCategory =\r\n        category &&\r\n        category[\"sub_category\"] &&\r\n        category[\"sub_category\"].find(\r\n          ({ category_id: cId }) => cId === selectedCategoryId\r\n        );\r\n\r\n      return subCategory ? subCategory.cname : \"\";\r\n    }\r\n\r\n    if (menu.selectedCategoryId === -1) {\r\n      return \"Happy Hours\";\r\n    } else if (menu.selectedCategoryId === -2) {\r\n      return \"Pizza's\";\r\n    }\r\n  };\r\n\r\n  function getDishesDescription(cname) {\r\n    var selectedCategoryId;\r\n    if (cname.length > 0) {\r\n      selectedCategoryId = cname[0].category_id;\r\n    }\r\n    if (menu.categoriesList) {\r\n      const category = menu.categoriesList.find(\r\n        (category) =>\r\n          category[\"sub_category\"] &&\r\n          category[\"sub_category\"].find(\r\n            ({ category_id: cId }) => cId === selectedCategoryId\r\n          )\r\n      );\r\n      console.log(\"category\", category);\r\n      const subCategory =\r\n        category &&\r\n        category[\"sub_category\"] &&\r\n        category[\"sub_category\"].find(\r\n          ({ category_id: cId }) => cId === selectedCategoryId\r\n        );\r\n      console.log(\"subcategory is\", subCategory);\r\n      // cname = subCategory ? subCategory.cname : \"\";\r\n      return subCategory ? subCategory.description : \"\";\r\n    }\r\n  }\r\n\r\n  const getActualPrice = (item) => {\r\n    if (menu.restaurantInfo) {\r\n      // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n      return isPriceWithoutTax()\r\n        ? item.price\r\n        : (\r\n            Number(item.price) +\r\n            Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n          ).toFixed(2);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const getSizeAndBase = (pizza) => {\r\n    const sizeAndBaseCollection = [];\r\n\r\n    for (let i = 0; i < (pizza.size && pizza.size.length); i++) {\r\n      const sizeBaseObj = {\r\n        name: pizza.size[i].pizza_size,\r\n        baseId: null,\r\n        basePrice: 0,\r\n        sizeId: pizza.size[i].pizza_size_id,\r\n        sizePrice: getPizzaActualPrice(pizza, pizza.size[i].price),\r\n        totalPrice: getPizzaActualPrice(pizza, pizza.size[i].price),\r\n      };\r\n\r\n      // get the base price with base_size\r\n      if (\r\n        pizza.base !== undefined &&\r\n        pizza.base !== null &&\r\n        pizza.base !== \"0\" &&\r\n        pizza.base !== 0\r\n      ) {\r\n        for (let j = 0; j < pizza.base.length; j++) {\r\n          const sizeBaseObj = {\r\n            name: pizza.size[i].pizza_size,\r\n            basePrice: 0,\r\n            baseId: null,\r\n            sizeId: pizza.size[i].pizza_size_id,\r\n            sizePrice: getPizzaActualPrice(pizza, pizza.size[i].price),\r\n            totalPrice: getPizzaActualPrice(pizza, pizza.size[i].price),\r\n          };\r\n\r\n          sizeBaseObj.name += ` ${pizza.base[j].base_name}`;\r\n          sizeBaseObj.baseId = pizza.base[j].base_id;\r\n          const basePrice = pizza.base[j].base_price.find(\r\n            (item) => item.base_size === pizza.size[i].pizza_size\r\n          );\r\n\r\n          sizeBaseObj.basePrice = getPizzaActualPrice(\r\n            pizza,\r\n            basePrice === undefined ? 0 : basePrice.base_price\r\n          );\r\n          sizeBaseObj.totalPrice =\r\n            Number(sizeBaseObj.totalPrice) + Number(sizeBaseObj.basePrice);\r\n          sizeAndBaseCollection.push(sizeBaseObj);\r\n        }\r\n      } else {\r\n        sizeAndBaseCollection.push(sizeBaseObj);\r\n      }\r\n    }\r\n    sizeAndBaseCollection.sort((a, b) => a.totalPrice - b.totalPrice);\r\n\r\n    return sizeAndBaseCollection;\r\n  };\r\n\r\n  const getPizzaActualPrice = (pizza, price) => {\r\n    return isPriceWithoutTax()\r\n      ? Number(price).toFixed(2)\r\n      : (\r\n          Number(price) +\r\n          Number(getTaxes(pizza, Number(price), menu.restaurantInfo).tax)\r\n        ).toFixed(2);\r\n  };\r\n\r\n  const openPizzaModal = (pizza, baseId, sizeId) => {\r\n    // open Pizza modal having default topppings\r\n    // and half and half\r\n    console.log(\"pizza qty is\", pizza);\r\n    if (pizza.qty) {\r\n      dispatch(\r\n        openModal(modalNames.INTERMEDIATE_ADD_MODAL, {\r\n          item: pizza,\r\n          baseId,\r\n          sizeId,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        openModal(modalNames.PIZZA_MODAL, {\r\n          pizza,\r\n          baseId,\r\n          sizeId,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const myFunction = (id) => {\r\n    var dots = document.getElementById(`${id}dots`);\r\n    var moreText = document.getElementById(`${id}more`);\r\n    var btnText = document.getElementById(`${id}myBtn`);\r\n\r\n    dots.style.display = \"none\";\r\n    moreText.style.display = \"inline\";\r\n    btnText.style.display = \"none\";\r\n  };\r\n\r\n  const removefromcart = (item) => {\r\n    dispatch(removeItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>\r\n          <>\r\n            {/* <Skeleton height={28} width={400} style={{ marginLeft: \"10%\" }} />\r\n            <Skeleton height={28} width={300} style={{ marginLeft: \"20%\" }} />\r\n            <Skeleton height={28} width={300} style={{ marginLeft: \"20%\" }} />\r\n            <Skeleton height={28} width={400} style={{ marginLeft: \"10%\" }} /> */}\r\n\r\n            <Skeleton className=\"skelton-class\" />\r\n            <Skeleton className=\"skelton-class-mid\" />\r\n            <Skeleton className=\"skelton-class-mid\" />\r\n            <Skeleton className=\"skelton-class\" />\r\n          </>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* <div className=\"category-separator\"></div> */}\r\n          <h4\r\n            className=\"category-name-head text-pizzamodal\"\r\n            style={{ letterSpacing: \"0.1em\" }}\r\n            id={getSelectedCategoryName(list)}\r\n          >\r\n            {category_name == \"Happy Hours\"\r\n              ? \"Happy Hours\"\r\n              : getSelectedCategoryName(list)}\r\n          </h4>\r\n          <>\r\n            {list.map((item) => {\r\n              const sizeAndBaseCollection = getSizeAndBase(item);\r\n              const isImageUrl = require(\"is-image-url\");\r\n              var checkImageUrl = isImageUrl(item.image_url);\r\n              console.log(\"npm url is\", checkImageUrl);\r\n              let isStillActive = false;\r\n              console.log(\"menuItems in this file\", item);\r\n\r\n              if (item.isHappyHourActive) {\r\n                const result = isHappyHourStillActive(\r\n                  item,\r\n                  menu.restaurantInfo.timezone\r\n                );\r\n\r\n                isStillActive = result.isActive;\r\n                if (isStillActive) {\r\n                  refIndex++;\r\n                  setTimer(result.distance, timeOutRef[refIndex]);\r\n                }\r\n              }\r\n              const minQty =\r\n                Number(item.min_qty) === 0 ? 0 : Number(item.min_qty);\r\n\r\n              console.log(\"itemszzz in menutable\", item);\r\n              return (\r\n                <>\r\n                  <div>\r\n                    <div className=\"parent-menutable\">\r\n                      <div className=\"parent-flex\">\r\n                        <div className=\"left-menutable-img\">\r\n                          <div className=\"img-cover-menutable\">\r\n                            <img\r\n                              className=\"food-image\"\r\n                              src={\r\n                                checkImageUrl ? item.image_url : DemoFoodImage\r\n                              }\r\n                            ></img>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"food-details\">\r\n                          <div className=\"inner-food-details-div\">\r\n                            <div className=\"specific-food-details\">\r\n                              <h4 className=\"food-item-name\">\r\n                                {item.cname || item.name || item.title}\r\n                              </h4>\r\n\r\n                              <div className=\"food-icons\">\r\n                                <div className=\"food-icon-child\">\r\n                                  {item.lactose_free === \"1\" ? (\r\n                                    <span title=\"Lactose Free\">\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"lactose free\"\r\n                                        src={img1}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.nuts_free === \"1\" ? (\r\n                                    <span\r\n                                      title=\"Nuts Free\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"nuts free\"\r\n                                        src={img3}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.is_hot === \"1\" ? (\r\n                                    <span\r\n                                      title=\"Hot\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"hot\"\r\n                                        src={img4}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.is_vegan === \"1\" ? (\r\n                                    <span\r\n                                      title=\"It's Vegan\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"it's vegan\"\r\n                                        src={img5}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.gluten_free === \"1\" ? (\r\n                                    <span\r\n                                      title=\"Gluten Free\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"gluten free\"\r\n                                        src={img2}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n\r\n                              {item.description ? (\r\n                                <>\r\n                                  <p className=\"food-description\">\r\n                                    {item.description.slice(0, 50)}\r\n                                    <span id={`${item.id}dots`}>...</span>\r\n                                    <span\r\n                                      id={`${item.id}myBtn`}\r\n                                      className=\"read-more\"\r\n                                      onClick={() => myFunction(item.id)}\r\n                                    >\r\n                                      read more\r\n                                    </span>\r\n                                    <p\r\n                                      className=\"food-description\"\r\n                                      id={`${item.id}more`}\r\n                                      style={{ display: \"none\" }}\r\n                                    >\r\n                                      {item.description.slice(51, 10000)}\r\n                                    </p>\r\n                                  </p>\r\n                                </>\r\n                              ) : null}\r\n\r\n                              <div className=\"item-price-parent-div\">\r\n                                <span className=\"item-price\">{`${symbol} ${getActualPrice(\r\n                                  item\r\n                                )}`}</span>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* {item.base ? (\r\n                              <>\r\n                                <div className=\"specific-add-button\">\r\n                                  <div\r\n                                    className=\"button-container\"\r\n                                    onClick={() =>\r\n                                      openPizzaModal(\r\n                                        item,\r\n                                        isHappyHourStillActive(\r\n                                          item,\r\n                                          menu.restaurantInfo.timezone\r\n                                        ).isActive\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <span className=\"add-to-cart-button\">\r\n                                      Add\r\n                                    </span>\r\n                                    <span className=\"add-to-cart-button-plus\">\r\n                                      <AddIcon />\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </>\r\n                            ) : (\r\n                              <div className=\"specific-add-button\">\r\n                                <div\r\n                                  className=\"button-container\"\r\n                                  onClick={() =>\r\n                                    onAddItem(\r\n                                      item,\r\n                                      isHappyHourStillActive(\r\n                                        item,\r\n                                        menu.restaurantInfo.timezone\r\n                                      ).isActive\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <span className=\"add-to-cart-button\">\r\n                                    Add\r\n                                  </span>\r\n                                  <span className=\"add-to-cart-button-plus\">\r\n                                    <AddIcon />\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            )} */}\r\n                            {item.qty ? (\r\n                              <>\r\n                                <div className=\"after-first-add-container\">\r\n                                  <div className=\"after-first-add-parent\">\r\n                                    <div className=\"after-first-add-child\">\r\n                                      <div\r\n                                        className=\"left-after-add\"\r\n                                        onClick={() => removefromcart(item)}\r\n                                      >\r\n                                        <RemoveIcon fontSize=\"small\" />\r\n                                      </div>\r\n                                      <div className=\"middle-after-add\">\r\n                                        <span className=\"qty-after-add\">\r\n                                          {item.qty}\r\n                                        </span>\r\n                                      </div>\r\n                                      {item.base ? (\r\n                                        <>\r\n                                          <div\r\n                                            className=\"right-after-add\"\r\n                                            onClick={() =>\r\n                                              openPizzaModal(\r\n                                                item,\r\n                                                isHappyHourStillActive(\r\n                                                  item,\r\n                                                  menu.restaurantInfo.timezone\r\n                                                ).isActive\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <AddIcon fontSize=\"small\" />\r\n                                          </div>\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <div\r\n                                            className=\"right-after-add\"\r\n                                            onClick={() =>\r\n                                              onAddItem(\r\n                                                item,\r\n                                                isHappyHourStillActive(\r\n                                                  item,\r\n                                                  menu.restaurantInfo.timezone\r\n                                                ).isActive\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <AddIcon fontSize=\"small\" />\r\n                                          </div>\r\n                                        </>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <div className=\"specific-add-button\">\r\n                                  {item.base ? (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"button-container\"\r\n                                        onClick={() =>\r\n                                          openPizzaModal(\r\n                                            item,\r\n                                            isHappyHourStillActive(\r\n                                              item,\r\n                                              menu.restaurantInfo.timezone\r\n                                            ).isActive\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <span className=\"add-to-cart-button\">\r\n                                          Add\r\n                                        </span>\r\n                                        <span className=\"add-to-cart-button-plus\">\r\n                                          <AddIcon />\r\n                                        </span>\r\n                                      </div>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      <div\r\n                                        className=\"button-container\"\r\n                                        onClick={() =>\r\n                                          onAddItem(\r\n                                            item,\r\n                                            isHappyHourStillActive(\r\n                                              item,\r\n                                              menu.restaurantInfo.timezone\r\n                                            ).isActive\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <span className=\"add-to-cart-button\">\r\n                                          Add\r\n                                        </span>\r\n                                        <span className=\"add-to-cart-button-plus\">\r\n                                          <AddIcon />\r\n                                        </span>\r\n                                      </div>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                          {item.isHappyHourActive && isStillActive ? (\r\n                            <>\r\n                              <p\r\n                                className=\"food-description\"\r\n                                style={{ color: \"#bd1e44\", fontWeight: \"600\" }}\r\n                              >\r\n                                {item.happyHourDetail.happyHourDisplayText}\r\n                              </p>\r\n                              <p className=\"food-description\">\r\n                                {/* <AccessTimeIcon style={{ color: \"red\" }} />{\" \"} */}\r\n\r\n                                <span\r\n                                  style={{\r\n                                    color: \"#bd1e44\",\r\n                                    fontWeight: \"700\",\r\n                                  }}\r\n                                  ref={timeOutRef[refIndex]}\r\n                                />\r\n                              </p>\r\n                            </>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"hr-for-mobile\" />\r\n                </>\r\n              );\r\n            })}\r\n          </>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuTable;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ForcedModifiers.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\OptionalModifiers\\OptionalModifiers.jsx",["649","650"],"import React, { useState } from \"react\";\r\nimport { Checkbox } from \"antd\";\r\nimport { defaultMemoize } from \"reselect\";\r\nimport \"./OptionalModifiers.css\";\r\nimport \"../../Modals/PizzaModal/PizzaModal.css\";\r\n\r\nexport const OptionalModifier = ({\r\n  optionalModifier,\r\n  currency,\r\n  getModifierPrice,\r\n  onSelectionChange,\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  function getTotalPrice(updatedItems) {\r\n    return updatedItems.reduce(\r\n      (acc, item) => acc + (item.isFree ? 0 : Number(item.price)),\r\n      0\r\n    );\r\n  }\r\n\r\n  function isMaxLimit(selectedModifiers, catDetails) {\r\n    if (Number(catDetails.maxLimit) === 0) {\r\n      return false;\r\n    }\r\n\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < selectedModifiers.length; i++) {\r\n      if (selectedModifiers[i].omCatId === catDetails.omCatId) {\r\n        counter++;\r\n      }\r\n    }\r\n    if (counter >= catDetails.maxLimit) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function setFreeLimitPrices(allItems) {\r\n    // update free limit items prices\r\n    let sortedFilterItems = [];\r\n\r\n    const priceSortedItems = allItems.sort((a, b) => a.price - b.price);\r\n\r\n    optionalModifier &&\r\n      optionalModifier.map((op) => {\r\n        const freeLimit = Number(op.free_limit);\r\n        const items = priceSortedItems.filter(\r\n          (i) => i.omCatId === op.om_cat_id\r\n        );\r\n\r\n        const limit = freeLimit > items.length ? items.length : freeLimit;\r\n\r\n        for (let i = 0; i < limit; i++) {\r\n          items[i].isFree = true;\r\n        }\r\n        for (let i = limit; i < items.length; i++) {\r\n          items[i].isFree = false;\r\n        }\r\n        sortedFilterItems = [...sortedFilterItems, ...items];\r\n      });\r\n\r\n    return sortedFilterItems;\r\n  }\r\n\r\n  const handleChange = (checked, modifier) => {\r\n    let updatedItems = [];\r\n\r\n    let withFreeLimitItems = [];\r\n\r\n    if (checked) {\r\n      updatedItems = [...selectedOptions, modifier];\r\n    } else {\r\n      updatedItems = selectedOptions.filter(({ id }) => id !== modifier.id);\r\n    }\r\n    withFreeLimitItems = setFreeLimitPrices(updatedItems);\r\n    setSelectedOptions(withFreeLimitItems);\r\n\r\n    // check if max limit has crossed for optional category items\r\n    isMaxLimit(withFreeLimitItems, modifier);\r\n    onSelectionChange(withFreeLimitItems, getTotalPrice(withFreeLimitItems));\r\n  };\r\n\r\n  return (\r\n    optionalModifier &&\r\n    optionalModifier.map((op, i) => (\r\n      <div\r\n        className=\"optional-modifiers-category\"\r\n        key={i}\r\n        style={{ paddingTop: \"5px\" }}\r\n      >\r\n        <p\r\n          className=\"modifier-category-name \"\r\n          style={{\r\n            fontSize: \"20px\",\r\n            fontWeight: \"700\",\r\n            marginLeft: \"20px\",\r\n            marginTop: \"5px\",\r\n            color: \"#5c48d2\",\r\n          }}\r\n        >\r\n          {op.om_cat_name}\r\n        </p>\r\n\r\n        <p\r\n          className=\"modifier-category-instruction\"\r\n          style={{\r\n            marginLeft: \"20px\",\r\n            fontSize: \"15px\",\r\n            marginTop: \"-10px\",\r\n            color: \"#968EA1\",\r\n          }}\r\n        >\r\n          {op.free_limit > 0\r\n            ? `Cheapest ${op.free_limit} options will be free`\r\n            : null}\r\n          {op.free_limit > 0 && op.max_limit > 0 ? \", \" : null}\r\n          {op.max_limit > 0\r\n            ? `You can choose max upto ${op.max_limit} options`\r\n            : null}\r\n        </p>\r\n        <OptionalModifierOptions\r\n          currency={currency}\r\n          getModifierPrice={getModifierPrice}\r\n          isMaxLimitReached={isMaxLimit}\r\n          selectedOptions={selectedOptions}\r\n          cat={op}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n      </div>\r\n    ))\r\n  );\r\n};\r\n\r\nconst OptionalModifierOptions = (props) => {\r\n  const catDetails = {\r\n    omCatId: props.cat.om_cat_id,\r\n    maxLimit: props.cat.max_limit,\r\n  };\r\n\r\n  const isMaxLimitReached = props.isMaxLimitReached(\r\n    props.selectedOptions,\r\n    catDetails\r\n  );\r\n\r\n  return (\r\n    <div className=\"modifier-options\">\r\n      {props.cat.items.map((op, i) => {\r\n        const canSetDisabled =\r\n          isMaxLimitReached &&\r\n          !props.selectedOptions.some(\r\n            ({ id, omCatId }) => id === op.id && omCatId === op.omCatId\r\n          );\r\n        const currentItem = props.selectedOptions.find(\r\n          (item) => item.id === op.id\r\n        );\r\n\r\n        const strikeOutFree =\r\n          currentItem && currentItem.isFree ? \"free-amount\" : \"\";\r\n\r\n        return (\r\n          <section\r\n            key={i}\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              paddingBottom: \"10px\",\r\n            }}\r\n          >\r\n            {/* <label\r\n              className=\"modfier-label\"\r\n              style=\r\n              {{ marginLeft: \"20px\", marginTop: \"10px\" }}\r\n            > */}\r\n\r\n            <Checkbox\r\n              style={{ marginLeft: \"20px\" }}\r\n              disabled={canSetDisabled}\r\n              onChange={({ target: { checked } }) =>\r\n                props.onChange(checked, JSON.parse(JSON.stringify(op)))\r\n              }\r\n            >\r\n              {op.name}\r\n            </Checkbox>\r\n\r\n            <span\r\n              style={{ float: \"right\", marginRight: \"15px\" }}\r\n              className={`modfier-amount ${strikeOutFree}`}\r\n            >\r\n              ( {props.currency} {props.getModifierPrice(op.price)} )\r\n            </span>\r\n            {/* </label> */}\r\n          </section>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default OptionalModifier;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ModifiersCategory\\ModifierCategory.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\Cart.jsx",["651","652","653","654","655","656","657","658","659","660","661","662","663","664"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeItem, addItem } from \"../../state-management/menu/actions\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport { showLoginFormMethod } from \"../../state-management/user/actions\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport Login from \"../../components/Login/Login\";\r\nimport { useHistory } from \"react-router\";\r\nimport ItemList from \"./ItemList\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { suppressDeprecationWarnings } from \"moment\";\r\nimport { notification } from \"antd\";\r\n\r\nconst Cart = (props) => {\r\n  const History = useHistory();\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  let isDecimalAmount = false;\r\n  //const grandTotal = Number(getGrandTotal());\r\n  const deliveryCharges = 0;\r\n\r\n  // function getDeliveryCharges() {\r\n  //   const {\r\n  //     deliveryRange: { cost, range },\r\n  //     isTakeAway,\r\n  //     distance,\r\n  //   } = main.deliveryRange;\r\n  //   const freeDeliveryRangeAmount = cost[\"free_delivery_eligible_amount\"];\r\n  //   const stdDeliveryCost = cost[\"std_delivery_cost\"] || 0;\r\n  //   console.log(\r\n  //     \"check delivery\",\r\n  //     parseInt(cost[\"free_delivery_eligible_amount\"]) === 0,\r\n  //     parseInt(cost[\"std_delivery_cost\"]) === 0,\r\n  //     grandTotal\r\n  //   );\r\n  //   const isFreeDelivery =\r\n  //     grandTotal >= Number(cost[\"free_delivery_eligible_amount\"]) &&\r\n  //     parseInt(freeDeliveryRangeAmount) !== 0;\r\n\r\n  //   if (isFreeDelivery || isTakeAway) {\r\n  //     props.setDeliveryCost(0);\r\n  //     return 0;\r\n  //   }\r\n  //   if (distance === -1 || !range) {\r\n  //     // if(stdDeliveryCost){\r\n  //     props.setDeliveryCost(Number(stdDeliveryCost));\r\n  //     // }\r\n  //     return Number(stdDeliveryCost);\r\n  //   }\r\n\r\n  //   if (range) {\r\n  //     const selectedRange = range.find((rng) => {\r\n  //       const from = Number(rng[\"range_from\"]);\r\n  //       const to = Number(rng[\"range_to\"]);\r\n\r\n  //       return distance >= from && distance <= to;\r\n  //     });\r\n\r\n  //     // selectedRange\r\n  //     //   ?( Number(selectedRange[\"delivery_cost\"]) || 0)\r\n  //     //   : Number(stdDeliveryCost);\r\n\r\n  //     if (selectedRange) {\r\n  //       if (selectedRange[\"delivery_cost\"]) {\r\n  //         props.setDeliveryCost(selectedRange[\"delivery_cost\"]);\r\n  //       } else {\r\n  //         props.setDeliveryCost(0);\r\n  //       }\r\n  //     } else {\r\n  //       props.setDeliveryCost(Number(stdDeliveryCost));\r\n  //     }\r\n  //     return selectedRange\r\n  //       ? Number(selectedRange[\"delivery_cost\"] || 0)\r\n  //       : Number(stdDeliveryCost);\r\n  //   }\r\n\r\n  //   return 0;\r\n  // }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const truncateDecimal = (number) => {\r\n    return Number.isInteger(Number(number))\r\n      ? Number(number)\r\n      : Number(number).toFixed(2);\r\n  };\r\n\r\n  function getSubTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.subTotal\r\n                  ? Number(item.happyHourItem.subTotal)\r\n                  : Number(item.qty) * Number(item.price))\r\n              );\r\n            }\r\n\r\n            return (\r\n              acc +\r\n              (item.subTotal ? item.subTotal : item.qty * Number(item.price))\r\n            );\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getSubTaxTotal() {\r\n    return props.cartlist.length\r\n      ? truncateDecimal(\r\n          props.cartlist.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.tax\r\n                  ? item.happyHourItem.tax\r\n                  : item.tax || 0)\r\n              );\r\n            }\r\n\r\n            return acc + Number(item.tax || 0);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getGrandTotal() {\r\n    return props.cartlist.length\r\n      ? truncateDecimal(\r\n          props.cartlist.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, props.restinfo.timezone).isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  // const getItemPrice = (item, isStillActive) => {\r\n  //   if (item.happyHourItem && isStillActive) {\r\n  //     if (item.similarItems && item.similarItems.length > 0) {\r\n  //       let totalPrice = 0;\r\n\r\n  //       for (let i = 0; i < item.similarItems.length; i++) {\r\n  //         totalPrice =\r\n  //           totalPrice + isPriceWithoutTax()\r\n  //             ? item.similarItems[i].happyHourItem.subTotal\r\n  //             : item.similarItems[i].happyHourItem.grandTotal;\r\n  //       }\r\n\r\n  //       return Number(totalPrice).toFixed(2);\r\n  //     } else {\r\n  //       console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n  //       console.log(\"grand\", Number(item.happyHourItem.grandTotal).toFixed(2));\r\n  //       return isPriceWithoutTax()\r\n  //         ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n  //         : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n  //     }\r\n  //   } else if (item.subTotal && item.grandTotal) {\r\n  //     if (item.similarItems && item.similarItems.length > 0) {\r\n  //       let totalPrice = 0;\r\n\r\n  //       for (let i = 0; i < item.similarItems.length; i++) {\r\n  //         totalPrice =\r\n  //           totalPrice + isPriceWithoutTax()\r\n  //             ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n  //             : item.similarItems[i].grandTotal ||\r\n  //               getActualPrice(item.similarItems[i]);\r\n  //       }\r\n\r\n  //       return Number(totalPrice).toFixed(2);\r\n  //     } else {\r\n  //       console.log(\r\n  //         \"log\",\r\n  //         isPriceWithoutTax()\r\n  //           ? item.subTotal || item.price\r\n  //           : item.grandTotal || this.getActualPrice(item)\r\n  //       );\r\n  //       return isPriceWithoutTax()\r\n  //         ? item.subTotal || item.price\r\n  //         : item.grandTotal || this.getActualPrice(item);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  function getDiscountedPrice(item, isStillActive) {\r\n    if (item.happyHourItem && isStillActive) {\r\n      const itemPrice = item.subTotal;\r\n      const itemHappyHourPrice = item.happyHourItem.subTotal;\r\n\r\n      return truncateDecimal(itemPrice - itemHappyHourPrice);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  const isPriceWithoutTax = () => {\r\n    console.log(\r\n      \"price without tax\",\r\n      menu.restaurantInfo[\"price_without_tax_flag\"]\r\n    );\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  const getActualPrice = (item) => {\r\n    if (menu.restaurantInfo) {\r\n      // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n      return isPriceWithoutTax()\r\n        ? item.price\r\n        : (\r\n            Number(item.price) +\r\n            Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n          ).toFixed(2);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const getBillAmount = () => {\r\n    const finalAmount = (\r\n      Number(deliveryCharges) + Number(getGrandTotal())\r\n    ).toFixed(2);\r\n    const showAmountInDecimal =\r\n      Number(menu.restaurantInfo[\"show_prices_in_decimal_flag\"]) === 1;\r\n\r\n    if (showAmountInDecimal) {\r\n      isDecimalAmount = true;\r\n    } else {\r\n      isDecimalAmount = finalAmount % 1 === 0;\r\n    }\r\n\r\n    return !showAmountInDecimal && finalAmount % 1 !== 0\r\n      ? finalAmount\r\n      : finalAmount;\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    // dispatch(removeItem(item, item.modifiers, 0, menu.restaurantInfo));\r\n    dispatch(removeItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  };\r\n\r\n  const addItemToCart = (item) => {\r\n    dispatch(\r\n      addItem(item, item.modifiers || 0, item.subTotal, menu.restaurantInfo)\r\n    );\r\n  };\r\n\r\n  const callLoginForm = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n\r\n  const [warning, setwarning] = useState(false);\r\n  const grandTotal = Number(getGrandTotal());\r\n  const goToCheckout = () => {\r\n    if (menu.cart.length == 0) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: \"Please add something in cart to proceed.\",\r\n      });\r\n    } else if (main.isClosed) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: \"Oops ! Restaurant is closed.\",\r\n      });\r\n    } else if (main.isClosedForWeekday) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: `${main.messageForWeekday}`,\r\n      });\r\n    } else if (main.isClosedForMonth) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: `${main.messageForMonth}`,\r\n      });\r\n    } else if (main.isClosedForOnceAMonth) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: `${main.messageForOnceAMonth}`,\r\n      });\r\n    } else {\r\n      History.push(`/restId=${menu.restaurantInfo.restaurant_id}/checkout`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='cart_box' style={{ backgroundColor: \"#f8f8f8\" }}>\r\n      <h3 id='Your Order' className='hide-on-mobile'>\r\n        Your order <ShoppingCartIcon style={{ float: \"right\" }} />\r\n      </h3>\r\n\r\n      <ItemList\r\n        items={menu.cart}\r\n        currency={menu.restaurantInfo.monetary_symbol}\r\n        isPriceWithoutTax={\r\n          Number(menu.restaurantInfo[\"price_without_tax_flag\"]) == 1\r\n        }\r\n        timezone={menu.restaurantInfo.timezone}\r\n        onRemove={removeFromCart}\r\n        onAdd={addItemToCart}\r\n        //onDelete={props.removeCartItem}\r\n      />\r\n\r\n      {/* <div className=\"row\" id=\"options_2\">\r\n        <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              defaultValue\r\n              value=\"delivery\"\r\n              onChange={(e) => setradioval(e.target.value)}\r\n              defaultChecked\r\n              name=\"option_2\"\r\n              className=\"icheck\"\r\n            />\r\n            Delivery\r\n          </label>\r\n        </div> */}\r\n      {/* <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"eatin\"\r\n              onChange={(e) => setradioval(e.target.value)}\r\n              defaultValue\r\n              name=\"option_2\"\r\n              className=\"icheck\"\r\n            />\r\n            Eat In\r\n          </label>\r\n        </div> */}\r\n\r\n      {/* <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"takeaway\"\r\n              onChange={(e) => setradioval(e.target.value)}\r\n              defaultValue\r\n              name=\"option_2\"\r\n              className=\"icheck\"\r\n            />\r\n            Take Away\r\n          </label>\r\n        </div>\r\n        {console.log(\"value of radio is\", radioval)}\r\n      </div> */}\r\n      {/* Edn options 2 */}\r\n      <hr />\r\n      <table className='table table_summary'>\r\n        <tbody>\r\n          <tr>\r\n            {menu.cart.length == 0 ? (\r\n              <td>\r\n                Subtotal{\" \"}\r\n                <span className='float-right'>\r\n                  {`${props.restinfo.monetary_symbol}`} 0.00\r\n                </span>\r\n              </td>\r\n            ) : (\r\n              <td>\r\n                Subtotal{\" \"}\r\n                <span className='float-right'>{`${\r\n                  props.restinfo.monetary_symbol\r\n                } ${getSubTotal()}`}</span>\r\n              </td>\r\n            )}\r\n          </tr>\r\n          <tr>\r\n            {menu.cart.length == 0 ? (\r\n              <td>\r\n                Taxes{\" \"}\r\n                <span className='float-right'>\r\n                  {`${props.restinfo.monetary_symbol} `}0.00\r\n                </span>\r\n              </td>\r\n            ) : (\r\n              <td>\r\n                Taxes{\" \"}\r\n                <span className='float-right'>{`${\r\n                  props.restinfo.monetary_symbol\r\n                } ${getSubTaxTotal()}`}</span>\r\n              </td>\r\n            )}\r\n          </tr>\r\n          {/* {radioval == \"takeaway\" || radioval == \"eatin\" ? (\r\n            <tr>\r\n              <td style={{ display: \"none\" }}>\r\n                Delivery Charges <span className=\"float-right\">0</span>\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            <tr>\r\n              <td>\r\n                Delivery Charges <span className=\"float-right\">0</span>\r\n              </td>\r\n            </tr>\r\n          )} */}\r\n          {/* <tr>\r\n            <td>\r\n              Delivery Charges <span className=\"float-right\">0</span>\r\n            </td>\r\n          </tr> */}\r\n          <tr>\r\n            <td className='total'>\r\n              TOTAL{\" \"}\r\n              <span className='float-right'>{`${\r\n                props.restinfo.monetary_symbol\r\n              } ${getBillAmount()}`}</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <hr />\r\n      {/* {warning ? (\r\n        <>\r\n          <p style={{ color: \"red\" }}>\r\n            Minimum cart amount is{\" \"}\r\n            {main.selectedRestaurant.cost[\"min_order_amount\"]}\r\n          </p>\r\n        </>\r\n      ) : null} */}\r\n      {user.user.isUserLoggedIn ? (\r\n        <button\r\n          onClick={goToCheckout}\r\n          className='btn_full hide-on-mobile '\r\n          // href=\"cart.html\"\r\n          style={{ backgroundColor: \"#5C48D2\" }}\r\n        >\r\n          Checkout\r\n        </button>\r\n      ) : (\r\n        <button\r\n          onClick={callLoginForm}\r\n          className='btn_full hide-on-mobile'\r\n          // href=\"cart.html\"\r\n          style={{ backgroundColor: \"#5C48D2\" }}\r\n        >\r\n          Proceed to Login\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Cart;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Login\\Login.jsx",["665","666","667","668","669","670","671","672","673","674","675","676","677","678","679"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Login/login.css\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { showRegisterFormMethod } from \"../../state-management/user/actions\";\r\nimport { showForgotPasswordFormMethod } from \"../../state-management/user/actions\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nimport {\r\n  hideLoginFormMethod,\r\n  setUserLoggedIn,\r\n} from \"../../state-management/user/actions\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport {\r\n  postLoginForm,\r\n  postSocialRegisterForm,\r\n  postSocialLoginForm,\r\n  updateProfile,\r\n  fetchUserDetails,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst Login = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const [modal, setModal] = useState(false);\r\n  const [phn, setphn] = useState();\r\n  const [finalphn, setfinalphn] = useState();\r\n  const [gotophnmodal, setgotophnmodal] = useState(false);\r\n  const [getUpdateCreds, setgetUpdateCreds] = useState();\r\n  const [LoginParametersInPhone, setLoginParametersInPhone] = useState();\r\n  const [showerror, setshowerror] = useState(true);\r\n  const [phoneInput, setphoneInput] = useState();\r\n  const [name, setName] = useState();\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    phonecode: \"\",\r\n    timezone: \"\",\r\n    socialLoginId: null,\r\n    socialType: \"\",\r\n    profileImage: \"\",\r\n    token: null,\r\n    clientId: null,\r\n    submittingClass: \"\",\r\n    submitText: \"SUBMIT\",\r\n    errorMessage: false,\r\n    requestSuccess: null,\r\n    showLoader: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const closeLoginModal = () => {\r\n    dispatch(hideLoginFormMethod());\r\n  };\r\n  const showCreateAccount = () => {\r\n    dispatch(showRegisterFormMethod());\r\n    //alert(\"cloick\");\r\n  };\r\n  const showForgotPassword = () => {\r\n    dispatch(showForgotPasswordFormMethod());\r\n  };\r\n\r\n  const onEmailChange = (value) => {\r\n    console.log(\"value\", { ...state, [value.target.name]: value.target.value });\r\n    setState({ ...state, [value.target.name]: value.target.value });\r\n  };\r\n\r\n  const onPasswordChange = (value) => {\r\n    setState({ ...state, password: value });\r\n  };\r\n\r\n  const toggle = () => setModal(!modal);\r\n  var checkphnfornormalemail = \"\";\r\n  const onFormSubmit = async () => {\r\n    setState({\r\n      ...state,\r\n      submitText: \"Please Wait...\",\r\n      errorMessage: false,\r\n      submittingClass: \"submitting\",\r\n      requestSuccess: null,\r\n      showLoader: true,\r\n    });\r\n\r\n    console.log(\"login data is\", state);\r\n    const resp = await dispatch(postLoginForm(state));\r\n    const { payload } = await resp;\r\n    console.log(\"normal\", payload);\r\n\r\n    if (payload.success) {\r\n      const {\r\n        token,\r\n        data: {\r\n          firstname: firstName,\r\n          lastname: lastName,\r\n          mobile,\r\n          email,\r\n          client_id: clientId,\r\n        },\r\n      } = payload;\r\n      checkphnfornormalemail = payload.data.mobile;\r\n      console.log(\"payload of normal mail\", payload);\r\n\r\n      // const va = {\r\n      //   token: payload.token,\r\n      //   firstName: payload.data.firstname,\r\n      //   lastName: payload.data.lastname,\r\n      //   mobile: payload.data.mobile,\r\n      //   email: payload.data.email,\r\n      //   clientId: payload.data.client_id,\r\n      // };\r\n\r\n      // console.log(\"state after\", va);\r\n\r\n      setState({\r\n        ...state,\r\n        token,\r\n        firstName,\r\n        lastName,\r\n        mobile,\r\n        email,\r\n        clientId,\r\n      });\r\n      console.log(\"phn for normal email\", checkphnfornormalemail);\r\n      if (!checkphnfornormalemail) {\r\n        const phoneNumber = getPhoneNumber();\r\n        // console.log(\"input from prompt\", phoneNumber);\r\n        console.log(\"MERCHANT\", menu.restaurantInfo.merchant_key);\r\n        const updateCred = {\r\n          client_id: payload.data.client_id,\r\n          merchant_id: menu.restaurantInfo.merchant_key,\r\n          phone: phoneNumber,\r\n        };\r\n        const resp2 = await dispatch(updateProfile(updateCred));\r\n        const {\r\n          payload: { success, message },\r\n        } = await resp2;\r\n        console.log(\"UPDATE_PROFILE\", payload);\r\n        if (success) {\r\n          alert(\"Phonenumber Added succesfully\");\r\n        } else {\r\n          alert(\"Some Error has occured! please check My Profile\");\r\n        }\r\n      }\r\n      // console.log(\"normal before login\", );\r\n      dispatch(\r\n        setUserLoggedIn({\r\n          token,\r\n          firstName,\r\n          lastName,\r\n          mobile,\r\n          email,\r\n          clientId,\r\n        })\r\n      );\r\n\r\n      //this.props.hideLoginFormMethod();\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      submitText: \"SUBMIT\",\r\n      errorMessage: payload.message,\r\n      submittingClass: \"\",\r\n      requestSuccess: payload.success,\r\n      showLoader: false,\r\n    });\r\n\r\n    {\r\n      payload.message\r\n        ? notification.open({\r\n            message: `${payload.message}`,\r\n            style: {\r\n              marginTop: \"50px\",\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n          })\r\n        : notification.open({\r\n            message: \"Login Successfull\",\r\n            style: {\r\n              marginTop: \"50px\",\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n          });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"state in menu\", state);\r\n  }, [state]);\r\n\r\n  const getPhoneNumber = () => {};\r\n\r\n  var checkphno = \"\";\r\n\r\n  const goToPhoneNumber = () => {\r\n    // return;\r\n    setfinalphn(phn);\r\n\r\n    if (phn == \"\") {\r\n      setshowerror(true);\r\n    } else {\r\n      const creds = {\r\n        client_id: getUpdateCreds.client_id,\r\n        merchant_id: getUpdateCreds.merchant_id,\r\n        phone: phoneInput.phnno,\r\n        mobile: phoneInput.phnno,\r\n      };\r\n\r\n      console.log(\"phn is\", creds);\r\n\r\n      dispatch(updateProfile(creds));\r\n\r\n      console.log(\"login parameters\", LoginParametersInPhone);\r\n\r\n      dispatch(setUserLoggedIn(LoginParametersInPhone));\r\n\r\n      notification.open({\r\n        message: \"Login Successfull\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n      });\r\n\r\n      //setgotophnmodal(false);\r\n\r\n      console.log(\"final creds are\", LoginParametersInPhone);\r\n    }\r\n  };\r\n\r\n  const getPhoneNumberFinal = (e) => {\r\n    setphn(e.target.value);\r\n    if (e.target.value.length < 5) {\r\n      setshowerror(true);\r\n    } else if (e.target.value.length >= 5) {\r\n      setshowerror(false);\r\n    }\r\n  };\r\n\r\n  // const getPhoneNumberFinal = (e) => {\r\n  //   setphn(e.target.value);\r\n  //   if (e.target.value.length < 5) {\r\n  //     setshowerror(true);\r\n  //   } else if (e.target.value.length >= 5) {\r\n  //     setshowerror(false);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log(\"final phone is\", finalphn);\r\n  }, [finalphn]);\r\n\r\n  const responseFacebook = async (res) => {\r\n    if (res.status !== undefined && res.status === \"unknown\") {\r\n      return;\r\n    }\r\n\r\n    // setState({\r\n    //   socialLoginId: res.userID,\r\n    //   socialType: \"facebook\",\r\n    //   profileImage: res.picture.data.url,\r\n    //   email: res.email,\r\n    //   firstName: res.name.split(\" \")[0],\r\n    //   lastName: res.name.split(\" \")[1],\r\n    //   showLoader: true,\r\n    // });\r\n    const newState = {\r\n      socialLoginId: res.userID,\r\n      socialType: \"facebook\",\r\n      profileImage: res.picture.data.url,\r\n      email: res.email,\r\n      firstName: res.name.split(\" \")[0],\r\n      lastName: res.name.split(\" \")[1],\r\n      showLoader: true,\r\n    };\r\n    setName(res.name.split(\" \")[0]);\r\n\r\n    console.log(\"facebook state\", newState);\r\n    // First check if this user exist in database\r\n    const { payload } = await dispatch(postSocialLoginForm(newState));\r\n\r\n    if (payload.success) {\r\n      // payload.data.mobile ? alert(\"Please enter Mobile Number\") : alert(\"Mobile number is present\")\r\n      //   // user logged In\r\n      //  setState({\r\n      //     clientId: payload.data.client_id,\r\n      //     token: payload.token,\r\n      //     showLoader: false,\r\n      //     firstName: payload.data.firstname,\r\n      //     lastName: payload.data.lastname,\r\n      //     mobile: payload.data.mobile,\r\n      //   });\r\n      const newStateAgain = {\r\n        socialLoginId: res.userID,\r\n        socialType: \"facebook\",\r\n        profileImage: res.picture.data.url,\r\n        email: res.email,\r\n        firstName: res.name.split(\" \")[0],\r\n        lastName: res.name.split(\" \")[1],\r\n        showLoader: true,\r\n        clientId: payload.data.client_id,\r\n        token: payload.token,\r\n        showLoader: false,\r\n        firstName: payload.data.firstname,\r\n        lastName: payload.data.lastname,\r\n        mobile: payload.data.mobile,\r\n      };\r\n      checkphno = payload.data.mobile;\r\n      // this.props.fetchUserDetails(payload.data.client_id);\r\n      //check if mobile exists in db after\r\n      if (!newStateAgain.mobile) {\r\n        setgotophnmodal(true);\r\n\r\n        setgetUpdateCreds({\r\n          ...getUpdateCreds,\r\n          client_id: payload.data.client_id,\r\n          merchant_id: menu.restaurantInfo.merchant_key,\r\n        });\r\n\r\n        setLoginParametersInPhone({\r\n          ...LoginParametersInPhone,\r\n          socialLoginId: res.userID,\r\n          socialType: \"facebook\",\r\n          profileImage: res.picture.data.url,\r\n          email: res.email,\r\n          firstName: res.name.split(\" \")[0],\r\n          lastName: res.name.split(\" \")[1],\r\n          showLoader: true,\r\n        });\r\n      } else {\r\n        dispatch(setUserLoggedIn(newStateAgain));\r\n        dispatch(fetchUserDetails(payload.data.client_id));\r\n      }\r\n    } else {\r\n      // create an account\r\n\r\n      const reisterState = {\r\n        firstname: res.name.split(\" \")[0],\r\n        lastname: res.name.split(\" \")[1],\r\n        email: res.email,\r\n        phonecode: \"\",\r\n        mobile: \"\",\r\n        timezone: menu.restaurantInfo.timezone,\r\n        account_type: \"facebook\",\r\n        social_account_id: res.userID,\r\n      };\r\n\r\n      const { payload } = await dispatch(postSocialRegisterForm(reisterState));\r\n\r\n      console.log(\"facebook database check\", payload);\r\n\r\n      if (payload.success) {\r\n        // this.setState({\r\n        //   clientId: payload.data.client_id,\r\n        //   token: payload.token,\r\n        //   showLoader: false,\r\n        // });\r\n        const newStateAgain2 = {\r\n          clientId: payload.data.client_id,\r\n          token: payload.token,\r\n          showLoader: false,\r\n        };\r\n        if (!checkphno) {\r\n          setgotophnmodal(true);\r\n\r\n          setgetUpdateCreds({\r\n            ...getUpdateCreds,\r\n            client_id: payload.data.client_id,\r\n            merchant_id: menu.restaurantInfo.merchant_key,\r\n          });\r\n\r\n          setLoginParametersInPhone({\r\n            ...LoginParametersInPhone,\r\n            socialLoginId: res.userID,\r\n            socialType: \"facebook\",\r\n            profileImage: res.picture.data.url,\r\n            email: res.email,\r\n            firstName: res.name.split(\" \")[0],\r\n            lastName: res.name.split(\" \")[1],\r\n            showLoader: true,\r\n          });\r\n\r\n          //setState({ mobile: phoneNumber });\r\n        } else {\r\n          dispatch(setUserLoggedIn(newStateAgain2));\r\n        }\r\n      } else {\r\n        // some error has occured\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  //google\r\n  var checkphnforgoogle = \"\";\r\n  const responseGoogle = async (res) => {\r\n    if (res.error) {\r\n      return;\r\n    }\r\n    const newState = {\r\n      socialLoginId: res.profileObj.googleId,\r\n      socialType: \"google\",\r\n      profileImage: res.profileObj.imageUrl,\r\n      email: res.profileObj.email,\r\n      firstName: res.profileObj.givenName,\r\n      lastName: res.profileObj.familyName,\r\n      showLoader: true,\r\n    };\r\n    setState(newState);\r\n    setName(res.profileObj.givenName);\r\n    console.log(\"121 state\", newState);\r\n    // First check if this user exist in database\r\n    // const { payload } = await postSocialLoginForm(newState);\r\n    const resp = await dispatch(postSocialLoginForm(newState));\r\n    const { payload } = await resp;\r\n    console.log(\"124 res\", resp);\r\n    if (payload.success) {\r\n      // user logged In\r\n      const newStateAgain = {\r\n        socialLoginId: res.profileObj.googleId,\r\n        socialType: \"google\",\r\n        profileImage: res.profileObj.imageUrl,\r\n        email: res.profileObj.email,\r\n        firstName: res.profileObj.givenName,\r\n        lastName: res.profileObj.familyName,\r\n        showLoader: true,\r\n        clientId: payload.data.client_id,\r\n        token: payload.token,\r\n        mobile: payload.data.mobile,\r\n        showLoader: false,\r\n      };\r\n      checkphnforgoogle = payload.data.mobile;\r\n      setState(newStateAgain);\r\n\r\n      //ask phn no\r\n      console.log(\"phn of google\", checkphnforgoogle);\r\n\r\n      if (!newStateAgain.mobile) {\r\n        setgotophnmodal(true);\r\n\r\n        setgetUpdateCreds({\r\n          ...getUpdateCreds,\r\n          client_id: payload.data.client_id,\r\n          merchant_id: menu.restaurantInfo.merchant_key,\r\n        });\r\n\r\n        setLoginParametersInPhone({\r\n          ...LoginParametersInPhone,\r\n          socialLoginId: res.profileObj.googleId,\r\n          socialType: \"google\",\r\n          profileImage: res.profileObj.imageUrl,\r\n          email: res.profileObj.email,\r\n          firstName: res.profileObj.givenName,\r\n          lastName: res.profileObj.familyName,\r\n          showLoader: true,\r\n          clientId: payload.data.client_id,\r\n          token: payload.token,\r\n          mobile: phn,\r\n          showLoader: false,\r\n        });\r\n\r\n        // dispatch(hideLoginFormMethod());\r\n        // const {\r\n        //   payload: { success, message },\r\n        // } = await dispatch(updateProfile(updateCred));\r\n        // console.log(\"UPDATE_PROFILE\", payload);\r\n        // if (success) {\r\n        //   alert(\"Phonenumber Added succesfully\");\r\n        // } else {\r\n        //   alert(\"Some Error has occured! please check My Profile\");\r\n        // }\r\n        //dispatch(setUserLoggedIn(newStateAgain));\r\n        //dispatch(hideLoginFormMethod());\r\n      } else {\r\n        dispatch(setUserLoggedIn(newStateAgain));\r\n        notification.open({\r\n          message: \"Login Successfull\",\r\n          style: {\r\n            marginTop: \"50px\",\r\n            color: \"rgba(0, 0, 0, 0.65)\",\r\n            border: \"1px solid #b7eb8f\",\r\n            backgroundColor: \"#f6ffed\",\r\n          },\r\n        });\r\n      } //newState\r\n    } else {\r\n      // create an account\r\n\r\n      const reisterState = {\r\n        firstname: res.profileObj.givenName,\r\n        lastname: res.profileObj.familyName,\r\n        email: res.profileObj.email,\r\n        phonecode: \"\",\r\n        mobile: \"\",\r\n        timezone: menu.restaurantInfo.timezone,\r\n        account_type: \"google\",\r\n        social_account_id: res.profileObj.googleId,\r\n      };\r\n\r\n      console.log(\"check register database\", reisterState);\r\n\r\n      const { payload } = await dispatch(postSocialRegisterForm(reisterState)); //state\r\n      console.log(\"check register database\", payload);\r\n      if (payload.success) {\r\n        const newStateAgain2 = {\r\n          clientId: payload.data.client_id,\r\n          token: payload.token,\r\n          showLoader: false,\r\n        };\r\n        setState(newStateAgain2);\r\n        if (!checkphnforgoogle) {\r\n          // const phoneNumber = getPhoneNumber();\r\n\r\n          // console.log(\"MERCHANT\", menu.restaurantInfo.merchant_key);\r\n          // const updateCred = {\r\n          //   client_id: payload.data.client_id,\r\n          //   merchant_id: menu.restaurantInfo.merchant_key,\r\n          //   phone: phoneNumber,\r\n          // };\r\n          // const resp2 = await dispatch(updateProfile(updateCred));\r\n          // const {\r\n          //   payload: { success, message },\r\n          // } = await resp2;\r\n          // console.log(\"UPDATE_PROFILE\", payload);\r\n          // if (success) {\r\n          //   alert(\"Phonenumber Added succesfully\");\r\n          // } else {dispatch(setUserLoggedIn(newStateAgain2)); //state\r\n          //   alert(\"Some Error has occured! please check My Profile\");\r\n          // }\r\n\r\n          setgotophnmodal(true);\r\n\r\n          setgetUpdateCreds({\r\n            ...getUpdateCreds,\r\n            client_id: payload.data.client_id,\r\n            merchant_id: menu.restaurantInfo.merchant_key,\r\n          });\r\n\r\n          setLoginParametersInPhone({\r\n            ...LoginParametersInPhone,\r\n            socialLoginId: res.profileObj.googleId,\r\n            socialType: \"google\",\r\n            profileImage: res.profileObj.imageUrl,\r\n            email: res.profileObj.email,\r\n            firstName: res.profileObj.givenName,\r\n            lastName: res.profileObj.familyName,\r\n            showLoader: true,\r\n            clientId: payload.data.client_id,\r\n            token: payload.token,\r\n            mobile: phn,\r\n            showLoader: false,\r\n          });\r\n        } else {\r\n          dispatch(setUserLoggedIn(newStateAgain2));\r\n        }\r\n        //this.props.setUserLoggedIn(this.state);\r\n        //state\r\n      } else {\r\n        // some error has occured\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {gotophnmodal ? (\r\n        <>\r\n          <Modal\r\n            isOpen={true}\r\n            // toggle={toggle}\r\n            style={{\r\n              top: \"25%\",\r\n              left: \"1%\",\r\n              width: \"35%\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n          >\r\n            <ModalHeader style={{ borderBottom: \"none\" }}>\r\n              {\" \"}\r\n              <p\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  marginLeft: \"30px\",\r\n                  whiteSpace: \"nowrap\",\r\n                }}\r\n              ></p>\r\n            </ModalHeader>\r\n            <ModalBody\r\n              style={{\r\n                maxHeight: \"400px\",\r\n\r\n                marginTop: \"-15px\",\r\n              }}\r\n            >\r\n              <div style={{ marginLeft: \"30px\" }}>\r\n                <h3> Hey {name},</h3>\r\n                <p>Welome to {menu.restaurantInfo.rname}</p>\r\n                <p>\r\n                  <b>Please enter your phone number to proceed</b>\r\n                </p>\r\n                <PhoneInput\r\n                  className='resp_tf'\r\n                  country={\"dk\"}\r\n                  enableSearch={true}\r\n                  name='phonenumber'\r\n                  onChange={(e, country, value) => {\r\n                    setphoneInput({\r\n                      ccid: country,\r\n                      phnno: e,\r\n                    });\r\n                    console.log(\"value of phn\", value);\r\n                    if (e == \"\" || e == null) {\r\n                      setshowerror(true);\r\n                    } else {\r\n                      setshowerror(false);\r\n                    }\r\n                  }}\r\n                  // onChange={getPhoneNumberFinal}\r\n                  name='phn'\r\n                  placeholder='Phone Number'\r\n                />\r\n\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  onClick={goToPhoneNumber}\r\n                  className={showerror ? \"disabled\" : \"\"}\r\n                  style={{\r\n                    backgroundColor: \"#302f31\",\r\n                    padding: \"10px\",\r\n                    color: \"white\",\r\n                    width: \"90%\",\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </ModalBody>\r\n          </Modal>\r\n        </>\r\n      ) : null}\r\n      {!gotophnmodal ? (\r\n        <div id='parent' className='modal-container'>\r\n          <div className='align-container-center'>\r\n            {user.waitingOverlay ? (\r\n              <>\r\n                {/* <Loader /> */}\r\n                <WaitingOverlay />\r\n              </>\r\n            ) : null}\r\n            <div className='login-box'>\r\n              <div className='close'>\r\n                <IconButton\r\n                  onClick={closeLoginModal}\r\n                  style={\r\n                    {\r\n                      //   backgroundColor: \"#6244da\",\r\n                      //   marginRight: \"-45px\",\r\n                      //   marginTop: \"-35px\",\r\n                    }\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                </IconButton>\r\n              </div>\r\n              <div className='header' style={{ marginLeft: \"40%\" }}>\r\n                <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                  LOGIN\r\n                </strong>\r\n              </div>\r\n              {/* end of header */}\r\n              <div className='login-form'>\r\n                <TextField\r\n                  name='email'\r\n                  placeholder='Email'\r\n                  value={state.email}\r\n                  onChange={onEmailChange}\r\n                  style={{ width: \"90%\", height: \"-50px\" }}\r\n                  // label=\"Email\"\r\n                  variant='outlined'\r\n                />\r\n                <br /> <br />\r\n                <TextField\r\n                  name='password'\r\n                  placeholder='password'\r\n                  type='password'\r\n                  value={state.password}\r\n                  onChange={onEmailChange}\r\n                  style={{ width: \"90%\" }}\r\n                  //label=\"Password\"\r\n                  variant='outlined'\r\n                />\r\n                <br /> <br />\r\n                <Button\r\n                  onClick={onFormSubmit}\r\n                  style={{\r\n                    backgroundColor: \"#302f31\",\r\n                    padding: \"10px\",\r\n                    color: \"white\",\r\n                    width: \"90%\",\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n              {/* end of form */}\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <span\r\n                  onClick={showCreateAccount}\r\n                  style={{\r\n                    marginLeft: \"40px\",\r\n                    color: \"#5d5e5e\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Create account\r\n                </span>\r\n                <span\r\n                  onClick={showForgotPassword}\r\n                  style={{\r\n                    marginLeft: \"31%\",\r\n                    color: \"#5d5e5e\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Forgot Password ?\r\n                </span>\r\n              </div>\r\n              {/* end of options */}\r\n\r\n              <div className='login-buttons'>\r\n                {/* <Button\r\n                startIcon={<FaFacebookF />}\r\n                style={{\r\n                  backgroundColor: \"#4267B2\",\r\n                  padding: \"10px\",\r\n                  color: \"white\",\r\n                  width: \"90%\",\r\n                }}\r\n              >\r\n                Login With Facebook\r\n              </Button>\r\n              <br />\r\n              <br />\r\n              <Button\r\n                startIcon={<FaGoogle />}\r\n                style={{\r\n                  backgroundColor: \"#5d5e5e\",\r\n                  padding: \"10px\",\r\n                  color: \"white\",\r\n                  width: \"90%\",\r\n                }}\r\n              >\r\n                Login With Google\r\n              </Button> */}\r\n                <span className='login-with-facebook'>\r\n                  <FacebookLogin\r\n                    appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n                    fields='name,email,picture'\r\n                    callback={responseFacebook}\r\n                    icon='fa-facebook'\r\n                    textButton='Login with Facebook'\r\n                    size='medium'\r\n                    scope='public_profile, email'\r\n                    disableMobileRedirect={true}\r\n                  />\r\n                </span>\r\n                <br />\r\n\r\n                <span className='login-with-Google'>\r\n                  <GoogleLogin\r\n                    clientId={process.env.REACT_APP_GOOGLE_CLIENT}\r\n                    buttonText='Login with Google'\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                  />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\CreateAccount\\CreateAccount.js",["680","681","682","683","684","685"],"import React, { useState } from \"react\";\r\nimport \"../Login/login.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport { showLoginFormMethod } from \"../../state-management/user/actions\";\r\nimport { hideRegisterFormMethod } from \"../../state-management/user/actions\";\r\nimport { postRegisterForm } from \"../../state-management/user/asyncActions\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nimport { notification } from \"antd\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nconst CreateAccount = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const [modal, setModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    zipcode: \"\",\r\n    mobile: \"\",\r\n    timezone: \"Asia/Kolkata\",\r\n    submittingClass: \"\",\r\n    submitText: \"SUBMIT\",\r\n    errorMessage: false,\r\n    requestSuccess: null,\r\n    successMessage: \"Your account has been successfully created.\",\r\n    showLoader: false,\r\n    countryCode: \"\",\r\n    showloginscreen: false,\r\n  });\r\n\r\n  const onEmailChange = (value) => {\r\n    setState({ ...state, email: value });\r\n  };\r\n\r\n  const onFirstNameChange = (value) => {\r\n    setState({ ...state, firstName: value });\r\n  };\r\n\r\n  const onLastNameChange = (value) => {\r\n    setState({ ...state, lastName: value });\r\n  };\r\n\r\n  const onPasswordChange = (value) => {\r\n    setState({ ...state, password: value });\r\n  };\r\n\r\n  const onMobileChange = (value) => {\r\n    setState({ ...state, mobile: value });\r\n  };\r\n\r\n  function ValidateEmail() {\r\n    var mailformat =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (state.email.match(mailformat)) {\r\n      onSubmit();\r\n    } else {\r\n      setState({ ...state, errorMessage: \"Please Enter Valid Email\" });\r\n    }\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    setState({\r\n      ...state,\r\n      submitText: \"Please Wait...\",\r\n      errorMessage: false,\r\n      submittingClass: \"submitting\",\r\n      showLoader: true,\r\n    });\r\n\r\n    const resp = await dispatch(postRegisterForm(state));\r\n    const { payload } = await resp;\r\n\r\n    if (payload.message) {\r\n      setState({\r\n        ...state,\r\n        submitText: \"SUBMIT\",\r\n        submittingClass: \"\",\r\n        errorMessage: payload.message,\r\n        requestSucess: payload.success,\r\n        showLoader: false,\r\n        showloginscreen: false,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        submitText: \"SUBMIT\",\r\n        submittingClass: \"\",\r\n        errorMessage: payload.message,\r\n        requestSucess: payload.success,\r\n        showLoader: false,\r\n        showloginscreen: true,\r\n      });\r\n    }\r\n\r\n    //dispatch(showLoginFormMethod());\r\n  };\r\n\r\n  const closeLoginModal = () => {\r\n    dispatch(hideRegisterFormMethod());\r\n  };\r\n\r\n  const goBackToLogin = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          {user.waitingOverlay ? (\r\n            <>\r\n              {/* <Loader /> */}\r\n              <WaitingOverlay />\r\n            </>\r\n          ) : null}\r\n          <div className=\"login-box\">\r\n            {/* end of header */}\r\n\r\n            {state.showloginscreen ? (\r\n              <>\r\n                <img\r\n                  style={{ marginLeft: \"30%\" }}\r\n                  src=\"https://i.ibb.co/TmCnRTh/Tick-Mark-Dark-512.png\"\r\n                  height=\"200px\"\r\n                  width=\"150px\"\r\n                />\r\n                <h1 style={{ marginTop: \"5%\", marginLeft: \"35%\" }}>Great !</h1>\r\n                <br />\r\n                <p style={{ fontSize: \"15px\", marginLeft: \"22%\" }}>\r\n                  Your Account is succesfully Created\r\n                </p>\r\n\r\n                <Button\r\n                  onClick={() => dispatch(showLoginFormMethod())}\r\n                  style={{\r\n                    marginLeft: \"25%\",\r\n                    marginTop: \"5%\",\r\n                    backgroundColor: \"#6244da\",\r\n                    padding: \"10px\",\r\n                    color: \"white\",\r\n                    width: \"50%\",\r\n                  }}\r\n                >\r\n                  Click To Login\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"close\">\r\n                  <IconButton\r\n                    onClick={closeLoginModal}\r\n                    style={\r\n                      {\r\n                        //   backgroundColor: \"#6244da\",\r\n                        //   marginRight: \"-45px\",\r\n                        //   marginTop: \"-35px\",\r\n                      }\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"header\" style={{ marginLeft: \"100px\" }}>\r\n                  <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                    CREATE ACCOUNT\r\n                  </strong>\r\n                </div>\r\n                <div className=\"login-form\" style={{ marginLeft: \"40px\" }}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.firstName}\r\n                    onChange={(e) => onFirstNameChange(e.target.value)}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"First Name\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.lastName}\r\n                    onChange={(e) => onLastNameChange(e.target.value)}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Last Name\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.email}\r\n                    onChange={(e) => onEmailChange(e.target.value)}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Email\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <MailOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n\r\n                  <PhoneInput\r\n                    value={state.mobile}\r\n                    onChange={(e) => onMobileChange(e)}\r\n                    className=\"resp_tf\"\r\n                    country={\"dk\"}\r\n                    enableSearch={true}\r\n                    name=\"phn\"\r\n                    placeholder=\"Phone Number\"\r\n                  />\r\n                  <br />\r\n\r\n                  {/* <TextField\r\n                    size=\"small\"\r\n                    value={state.mobile}\r\n                    onChange={(e) => onMobileChange(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Mobile Number\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PhoneAndroidIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  /> */}\r\n\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.password}\r\n                    onChange={(e) => onPasswordChange(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    type=\"password\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Password\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <br />\r\n                  {/* <br /> */}\r\n                  {!state.requestSuccess ? <p>{state.errorMessage}</p> : null}\r\n                  <Button\r\n                    onClick={ValidateEmail}\r\n                    style={{\r\n                      backgroundColor: \"#302f31\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                      width: \"90%\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <span\r\n                    onClick={goBackToLogin}\r\n                    style={{\r\n                      marginLeft: \"40px\",\r\n                      color: \"#5d5e5e\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Go back/Sign In\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {/* end of form */}\r\n\r\n            {/* end of options */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ForgotPassword\\ForgotPassword.js",["686","687","688","689","690","691"],"import React, { useState } from \"react\";\r\nimport \"../Login/login.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport {\r\n  postForgotPasswordForm,\r\n  postPasswordUpdate,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport { showLoginFormMethod } from \"../../state-management/user/actions\";\r\nimport { hideForgotPasswordFormMethod } from \"../../state-management/user/actions\";\r\nimport { setSelectedCategoryId } from \"../../state-management/menu/actions\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setdata] = useState({\r\n    email: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n    submittingClass: \"\",\r\n    submitText: \"SUBMIT\",\r\n    errorMessage: false,\r\n    requestSucess: null,\r\n    successMessage: \"Please enter OTP send over your email!\",\r\n    showLoader: false,\r\n    isOtpRequested: false,\r\n    isPasswordUpdateSucess: false,\r\n  });\r\n\r\n  const onEmailChange = (value) => {\r\n    setdata({ ...data, email: value });\r\n  };\r\n\r\n  const onPasswordChange = (value) => {\r\n    setdata({ ...data, password: value });\r\n  };\r\n\r\n  const onOtpChange = (value) => {\r\n    setdata({ ...data, otp: value });\r\n  };\r\n\r\n  const onFormSubmit = async () => {\r\n    setdata({\r\n      ...data,\r\n      submitText: \"Please Wait...\",\r\n      submittingClass: \"submitting\",\r\n      errorMessage: false,\r\n      requestSucess: null,\r\n      showLoader: true,\r\n    });\r\n    const response = await dispatch(postForgotPasswordForm(data.email));\r\n    const { payload } = await response;\r\n\r\n    setdata({\r\n      ...data,\r\n      submitText: \"SUBMIT\",\r\n      submittingClass: \"\",\r\n      errorMessage: payload.message,\r\n      requestSucess: payload.success,\r\n      showLoader: false,\r\n      isOtpRequested: !!payload.success,\r\n    });\r\n  };\r\n\r\n  const onConfirmPasswordSubmit = async () => {\r\n    setdata({\r\n      ...data,\r\n      submitText: \"Please Wait...\",\r\n      submittingClass: \"submitting\",\r\n      errorMessage: false,\r\n      requestSucess: null,\r\n      showLoader: true,\r\n    });\r\n\r\n    const dataToSend = {\r\n      email: data.email,\r\n      password: data.password,\r\n      otp: data.otp,\r\n    };\r\n    console.log(dataToSend);\r\n\r\n    const response = await dispatch(postPasswordUpdate(dataToSend));\r\n\r\n    const { payload } = await response;\r\n\r\n    setdata({\r\n      ...data,\r\n      submitText: \"SUBMIT\",\r\n      submittingClass: \"\",\r\n      errorMessage: payload.message,\r\n      successMessage: payload.message,\r\n      requestSucess: payload.success,\r\n      showLoader: false,\r\n      isPasswordUpdateSucess: payload.success,\r\n    });\r\n  };\r\n\r\n  const closeLoginModal = () => {\r\n    dispatch(hideForgotPasswordFormMethod());\r\n  };\r\n\r\n  const goBackToLogin = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          {user.waitingOverlay ? (\r\n            <>\r\n              {/* <Loader /> */}\r\n              <WaitingOverlay />\r\n            </>\r\n          ) : null}\r\n\r\n          <div className=\"login-box\">\r\n            {data.isOtpRequested && !data.isPasswordUpdateSucess ? (\r\n              <>\r\n                <div className=\"close\">\r\n                  <IconButton\r\n                    onClick={closeLoginModal}\r\n                    style={\r\n                      {\r\n                        //   backgroundColor: \"#6244da\",\r\n                        //   marginRight: \"-45px\",\r\n                        //   marginTop: \"-35px\",\r\n                      }\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"header\" style={{ marginLeft: \"100px\" }}>\r\n                  <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                    Forgot Password\r\n                  </strong>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"login-form\"\r\n                  style={{ marginLeft: \"40px\", marginTop: \"50px\" }}\r\n                >\r\n                  <TextField\r\n                    value={data.email}\r\n                    name=\"email\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => onEmailChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <MailOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    disabled\r\n                  />\r\n\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"otp\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter OTP\"\r\n                    onChange={(e) => onOtpChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    //size=\"small\"\r\n                    name=\"password\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter New Password\"\r\n                    onChange={(e) => onPasswordChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Button\r\n                    onClick={onConfirmPasswordSubmit}\r\n                    style={{\r\n                      backgroundColor: \"#6244da\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                      width: \"90%\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <p>{data.errorMessage}</p>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {!data.isOtpRequested && !data.isPasswordUpdateSucess ? (\r\n              <>\r\n                <div className=\"close\">\r\n                  <IconButton\r\n                    onClick={closeLoginModal}\r\n                    style={\r\n                      {\r\n                        //   backgroundColor: \"#6244da\",\r\n                        //   marginRight: \"-45px\",\r\n                        //   marginTop: \"-35px\",\r\n                      }\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"header\" style={{ marginLeft: \"100px\" }}>\r\n                  <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                    Forgot Password\r\n                  </strong>\r\n                </div>\r\n                {/* end of header */}\r\n                <div\r\n                  className=\"login-form\"\r\n                  style={{ marginLeft: \"40px\", marginTop: \"100px\" }}\r\n                >\r\n                  <TextField\r\n                    //size=\"small\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => onEmailChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <MailOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Button\r\n                    onClick={onFormSubmit}\r\n                    style={{\r\n                      backgroundColor: \"#6244da\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                      width: \"90%\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <br />\r\n                  <br />\r\n                  <p>{data.errorMessage}</p>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            {data.isOtpRequested && data.isPasswordUpdateSucess ? (\r\n              <>\r\n                <img\r\n                  style={{ marginLeft: \"30%\" }}\r\n                  src=\"https://i.ibb.co/TmCnRTh/Tick-Mark-Dark-512.png\"\r\n                  height=\"200px\"\r\n                  width=\"150px\"\r\n                />\r\n                <h1 style={{ marginTop: \"5%\", marginLeft: \"35%\" }}>Great !</h1>\r\n                <br />\r\n                <p style={{ fontSize: \"15px\", marginLeft: \"25%\" }}>\r\n                  Your Password is Changed\r\n                </p>\r\n\r\n                <Button\r\n                  onClick={() => dispatch(showLoginFormMethod())}\r\n                  style={{\r\n                    marginLeft: \"25%\",\r\n                    marginTop: \"5%\",\r\n                    backgroundColor: \"#6244da\",\r\n                    padding: \"10px\",\r\n                    color: \"white\",\r\n                    width: \"50%\",\r\n                  }}\r\n                >\r\n                  Click To Login\r\n                </Button>\r\n              </>\r\n            ) : null}\r\n\r\n            {/* end of form */}\r\n            {/* <div style={{ marginTop: \"10px\" }}>\r\n              <span\r\n                onClick={goBackToLogin}\r\n                style={{\r\n                  marginLeft: \"40px\",\r\n                  color: \"#5d5e5e\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Go back/Sign In\r\n              </span>\r\n            </div> */}\r\n\r\n            {/* end of options */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ForgotPassword;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyProfile\\MyProfile.jsx",["692","693","694","695","696","697","698","699"],"import { Table } from \"reactstrap\";\r\n\r\nimport \"../../components/MyProfile/MyProfile.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  postMyProfileForm,\r\n  postProfile,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport { notification } from \"antd\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nconst MyProfile = () => {\r\n  const user = useSelector((state) => state.user.user);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    ...user,\r\n    btn: \"update\",\r\n    loader: false,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (user) {\r\n  //     setState({ ...user, btn: \"Update\" });\r\n  //   }\r\n  // }, [user]);\r\n\r\n  const handleFirstName = (val) => {\r\n    setState({ ...state, firstName: val });\r\n  };\r\n  const handleLastName = (val) => {\r\n    setState({ ...state, lastName: val });\r\n  };\r\n  const handleEmail = (val) => {\r\n    setState({ ...state, email: val });\r\n  };\r\n  const handleAddress = (val) => {\r\n    setState({ ...state, address: val });\r\n  };\r\n  const handleCity = (val) => {\r\n    setState({ ...state, city: val });\r\n  };\r\n  const handleState = (val) => {\r\n    setState({ ...state, state: val });\r\n  };\r\n  const handleCountry = (val) => {\r\n    setState({ ...state, country: val });\r\n  };\r\n  const handleZipcode = (val) => {\r\n    setState({ ...state, zipcode: val });\r\n  };\r\n  const handlePhoneNumber = (val) => {\r\n    setState({ ...state, mobile: val });\r\n  };\r\n\r\n  const postProfileChange = async () => {\r\n    console.log(\"cleint id\", user.clientId);\r\n\r\n    const response = await dispatch(postMyProfileForm(user.clientId));\r\n    const { payload } = await response;\r\n    console.log(\"usefferct\", payload);\r\n    if (payload.success) {\r\n      const data = payload.data;\r\n\r\n      setState({\r\n        ...state,\r\n        ...data,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    postProfileChange();\r\n  }, []);\r\n  const formSubmit = async () => {\r\n    setState({ ...state, btn: \"updating...\", loader: true });\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      mobile,\r\n      state: locationState,\r\n      country,\r\n      city,\r\n      zipcode,\r\n      phonecode,\r\n    } = state;\r\n\r\n    const userAgain = {\r\n      client_id: user.clientId,\r\n      firstname: firstName,\r\n      lastname: lastName,\r\n      address,\r\n      mobile,\r\n      state: locationState,\r\n      country,\r\n      city,\r\n      zipcode,\r\n      phonecode,\r\n    };\r\n\r\n    const response = dispatch(postProfile(userAgain, user.token));\r\n    const { payload } = await response;\r\n\r\n    notification.open({\r\n      message: payload.message,\r\n      style: {\r\n        marginTop: \"50px\",\r\n        color: \"rgba(0, 0, 0, 0.65)\",\r\n        border: \"1px solid #b7eb8f\",\r\n        backgroundColor: \"#f6ffed\",\r\n      },\r\n    });\r\n    postProfileChange();\r\n    setState({ ...state, btn: \"update\", loader: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"profile state is\", state);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* {state.loader ? <WaitingOverlay /> : null} */}\r\n      {/* <AppHeader /> */}\r\n      {/* <section\r\n        className=\"parallax-window_myprofile \"\r\n        data-parallax=\"scroll\"\r\n        // data-image-src=\"https://cutt.ly/Kkb7BY9\"\r\n        style={{\r\n          background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n        data-natural-width={1400}\r\n        data-natural-height={470}\r\n      >\r\n        <div id=\"subheader_myprofile\">\r\n          <div id=\"sub_content\">\r\n            <h1>Update Profile</h1>\r\n          </div>\r\n        </div>\r\n      </section> */}\r\n      <div className='col-lg-6 profile-container'>\r\n        <div className='box_style_2' id='main_menu'>\r\n          <div className='parent-height-width'>\r\n            <div className='profile-child-conatiner'>\r\n              <TextField\r\n                className='profile-textfield'\r\n                size='small'\r\n                // style={{ width: \"120%\" }}\r\n                label='First Name'\r\n                variant='outlined'\r\n                value={state.firstName}\r\n                onChange={(e) => handleFirstName(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='Last Name'\r\n                variant='outlined'\r\n                value={state.lastName}\r\n                onChange={(e) => handleLastName(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                style={{ backgroundColor: \"#f1f1f1\" }}\r\n                label='Email'\r\n                variant='outlined'\r\n                value={state.email}\r\n                disabled\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='Address'\r\n                variant='outlined'\r\n                value={state.address}\r\n                onChange={(e) => handleAddress(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='City'\r\n                variant='outlined'\r\n                value={state.city}\r\n                onChange={(e) => handleCity(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='State'\r\n                variant='outlined'\r\n                value={state.state}\r\n                onChange={(e) => handleState(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='Country'\r\n                variant='outlined'\r\n                value={state.country}\r\n                onChange={(e) => handleCountry(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='Zipcode'\r\n                variant='outlined'\r\n                value={state.zipcode}\r\n                onChange={(e) => handleZipcode(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <TextField\r\n                size='small'\r\n                className='profile-textfield'\r\n                label='Phone Number'\r\n                variant='outlined'\r\n                value={state.mobile}\r\n                onChange={(e) => handlePhoneNumber(e.target.value)}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n              <Button\r\n                onClick={formSubmit}\r\n                className='profile-submit-button'\r\n                style={{\r\n                  height: \"45px\",\r\n                  backgroundColor: \"#000000\",\r\n                  borderRadius: \"12px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {state.btn}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* End box_style_1 */}\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n};\r\nexport default MyProfile;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\ManageAddress.jsx",["700","701","702","703","704","705","706","707","708","709","710","711","712","713"],"import Appheader from \"../AppHeader/AppHeader\";\r\nimport \"../ManageAddress/ManageAddress.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport { openModal } from \"../../state-management/modal/actions\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport img1 from \"./Regular-1.5px-edit@3x.png\";\r\nimport img2 from \"./Regular-1.5px-trash@3x.png\";\r\nimport img3 from \"./Light-1px-add_circled@3x.png\";\r\nimport {\r\n  fetchAddressesList,\r\n  fetchMyOrderList,\r\n  postAddAddress,\r\n  removeAddress,\r\n} from \"../../state-management/user/asyncActions\";\r\n\r\nimport Address from \"../ManageAddress/Address\";\r\n\r\nconst ManageAddress = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const [handleadd, sethandleadd] = useState(false);\r\n\r\n  const modalNames = {\r\n    ADD_ADDRESS: \"AddAddress\",\r\n    CHOOSE_ADDRESS: \"ChooseAddress\",\r\n    FIND_ADDRESS: \"findAddress\",\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    addresses: [],\r\n  });\r\n  useEffect(async () => {\r\n    const { payload } = await dispatch(fetchAddressesList(user.user.clientId));\r\n\r\n    setState({ ...state, addresses: payload.data });\r\n    sethandleadd(false);\r\n  }, [handleadd]);\r\n  useEffect(() => {\r\n    dispatch(displayAddressModal(false));\r\n    fetchAddressList();\r\n  }, []);\r\n  const dispatch = useDispatch();\r\n  const [frompayment, setfrompayment] = useState(false);\r\n\r\n  const fetchAddressList = async () => {\r\n    const { payload } = await dispatch(fetchAddressesList(user.user.clientId));\r\n\r\n    setState({ ...state, addresses: payload.data });\r\n  };\r\n\r\n  const handleAddDeliveryAddressSuccess = (editMode, address) => {\r\n    dispatch(\r\n      openModal(\r\n        modalNames.ADD_ADDRESS,\r\n        {\r\n          editMode,\r\n          address,\r\n          existingDefaultAddress: this.state.addresses.find(\r\n            (addr) => addr[\"is_default\"] === \"1\"\r\n          ),\r\n        },\r\n        fetchAddressList()\r\n      )\r\n    );\r\n  };\r\n\r\n  const callAddressModal = (editMode = false, address = {}) => {\r\n    if (!editMode) {\r\n      dispatch(displayAddressModal(true));\r\n      dispatch(\r\n        openModal(\r\n          modalNames.FIND_ADDRESS,\r\n          {\r\n            addAddress: true,\r\n            existingDefaultAddress:\r\n              state.addresses &&\r\n              state.addresses.find((addr) => addr[\"is_default\"] === \"1\"),\r\n          },\r\n          () => handleAddDeliveryAddressSuccess(editMode, address)\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        openModal(modalNames.ADD_ADDRESS, {\r\n          editMode,\r\n          address,\r\n          existingDefaultAddress: state.addresses.find(\r\n            (addr) => addr[\"is_default\"] === \"1\"\r\n          ),\r\n        })\r\n      );\r\n      fetchAddressList();\r\n    }\r\n  };\r\n\r\n  const handleRemove = (address) => {\r\n    dispatch(removeAddress({ id: address.id }));\r\n    fetchAddressList();\r\n  };\r\n\r\n  const handleSetDefault = async (address) => {\r\n    if (address[\"is_default\"] === \"1\") {\r\n      await dispatch(\r\n        postAddAddress(\r\n          {\r\n            ...address,\r\n            address12: address.address2,\r\n            is_default: \"0\",\r\n          },\r\n          true\r\n        )\r\n      );\r\n      fetchAddressList();\r\n      //window.location.reload();\r\n    } else {\r\n      const existingDefaultAddress = state.addresses.find(\r\n        (addr) => addr[\"is_default\"] === \"1\"\r\n      );\r\n\r\n      if (existingDefaultAddress) {\r\n        await dispatch(\r\n          postAddAddress(\r\n            {\r\n              ...existingDefaultAddress,\r\n              address12: existingDefaultAddress.address2,\r\n              is_default: \"0\",\r\n            },\r\n            true\r\n          )\r\n        );\r\n      }\r\n      await dispatch(\r\n        postAddAddress(\r\n          {\r\n            ...address,\r\n            address12: address.address2, //TODO: get this fixed from api, which is broken at them moment\r\n            is_default: \"1\",\r\n          },\r\n          true\r\n        )\r\n      );\r\n      fetchAddressList();\r\n      //window.location.reload();\r\n    }\r\n  };\r\n\r\n  const [countOfAddress, setcountOfAddress] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"add in map\", state.addresses.length);\r\n\r\n    if (state.addresses.length == 0) {\r\n      setcountOfAddress(true);\r\n    } else if (state.addresses.length >= 1) {\r\n      setcountOfAddress(false);\r\n    }\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"count of address\", countOfAddress);\r\n  }, [countOfAddress]);\r\n\r\n  return (\r\n    <>\r\n      <div id='address-container'>\r\n        <main class='main-container customised-main-container'>\r\n          <div\r\n            // className='add-address-for-mobile hide-on-desktop'\r\n            className={\r\n              countOfAddress\r\n                ? \"css-for-single-address css-for-single-address-mobile-text hide-on-desktop\"\r\n                : \"add-address-for-mobile hide-on-desktop\"\r\n            }\r\n            onClick={() => callAddressModal(false, {})}\r\n          >\r\n            <p className='add-for-mobile-text'>Add Address</p>\r\n          </div>\r\n          <section\r\n            className='add-address hide-on-mobile'\r\n            onClick={() => callAddressModal(false, {})}\r\n          >\r\n            <span style={{ cursor: \"pointer\" }}>\r\n              <img src={img3} style={{ height: \"30px\", width: \"30px\" }} />\r\n            </span>\r\n            <span\r\n              style={{\r\n                whiteSpace: \"nowrap\",\r\n                marginTop: \"10px\",\r\n                fontWeight: \"700\",\r\n                color: \"rgb(168, 166, 170)\",\r\n              }}\r\n            >\r\n              Add an address\r\n            </span>\r\n          </section>\r\n\r\n          {state.addresses.map((address, i) => {\r\n            return (\r\n              <>\r\n                <section\r\n                  className='address-section'\r\n                  // key={i}\r\n                >\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <div\r\n                      onClick={() => callAddressModal(true, address)}\r\n                      style={{\r\n                        width: \"35px\",\r\n                        height: \"35px\",\r\n                        cursor: \"pointer\",\r\n                        marginTop: \"-4px\",\r\n                        marginLeft: \"70%\",\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={img1}\r\n                        style={{\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          marginLeft: \"60%\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: \"35px\",\r\n                        height: \"35px\",\r\n                        cursor: \"pointer\",\r\n                        marginTop: \"-4px\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        onClick={() => handleRemove(address)}\r\n                        src={img2}\r\n                        style={{\r\n                          width: \"20px\",\r\n                          height: \"20px\",\r\n                          marginLeft: \"10%\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ marginTop: \"-15px\" }}>\r\n                    <Address address={address} key={i} />\r\n                    <p\r\n                      className={`actions ${\r\n                        address[\"is_default\"] === \"1\" ? \"default\" : \"\"\r\n                      }`}\r\n                      style={{ marginLeft: \"60%\" }}\r\n                      onClick={() => handleSetDefault(address)}\r\n                    >\r\n                      {\" \"}\r\n                      {address[\"is_default\"] === \"1\" ? (\r\n                        <span\r\n                          className='default-address'\r\n                          style={{ marginLeft: \"30%\" }}\r\n                        >\r\n                          Default\r\n                        </span>\r\n                      ) : (\r\n                        \"Set default\"\r\n                      )}\r\n                    </p>\r\n                  </div>\r\n                  <ul className='address-actions'>\r\n                    {/* <li onClick={() => callAddressModal(true, address)}>\r\n                      <span>\r\n                        <h5\r\n                          className=\"actions\"\r\n                          style={{ backgroundColor: \"#6244da\" }}\r\n                        >\r\n                          Edit\r\n                        </h5>\r\n                      </span>\r\n                    </li> */}\r\n                    {/* <li onClick={() => handleRemove(address)}>\r\n                      <span>\r\n                        <h5\r\n                          className=\"actions\"\r\n                          style={{ backgroundColor: \"#6244da\" }}\r\n                        >\r\n                          Remove\r\n                        </h5>\r\n                      </span>\r\n                    </li> */}\r\n                    {/* <li>\r\n                      <span onClick={() => handleSetDefault(address)}>\r\n                        <h5\r\n                          className={`actions ${\r\n                            address[\"is_default\"] === \"1\" ? \"default\" : \"\"\r\n                          }`}\r\n                        >\r\n                          {address[\"is_default\"] === \"1\" ? (\r\n                            <span className=\"default-address\">Default</span>\r\n                          ) : (\r\n                            \"Set default\"\r\n                          )}\r\n                        </h5>\r\n                      </span>\r\n                    </li> */}\r\n                  </ul>\r\n                </section>\r\n              </>\r\n            );\r\n          })}\r\n        </main>\r\n      </div>\r\n      {modal.modal.modalToShow == \"findAddress\" ? (\r\n        <ChooseAddress\r\n          refetchAddresses={sethandleadd}\r\n          bool='no'\r\n          isItFromCheckout={setfrompayment}\r\n        />\r\n      ) : null}\r\n      {modal.modal.modalToShow == \"AddAddress\" ? <AddAddress /> : null}\r\n    </>\r\n  );\r\n};\r\nexport default ManageAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\ChooseAddress.jsx",["714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736"],"import \"../../components/ChooseAddress/ChooseAddress.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"../../state-management/menu/actions\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { setDeliveryOption } from \"../../state-management/user/actions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import GooglePlacesAutocomplete, {\r\n//   geocodeByPlaceId,\r\n// } from \"react-google-places-autocomplete\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { setPhoneCode } from \"../../state-management/user/actions\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Menu } from \"@material-ui/core\";\r\n//import Button from \"@material-ui/core/Button\";\r\nimport GoogleMap from \"../../components/GoogleMap/GoogleMap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport AddAddress from \"./AddAddress\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { setDestinationCoordinates } from \"../../state-management/main/actions\";\r\nimport { declareTypeAlias } from \"@babel/types\";\r\nimport { notification } from \"antd\";\r\n\r\nGeocode.setApiKey(\"AIzaSyCMTj6FEwu3Kh0tSdgp6hh4QOKgIJF74rs\");\r\n\r\nconst ChooseAddress = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const user = useSelector((state) => state.user);\r\n  const menu = useSelector((state) => state.menu);\r\n\r\n  const [latlng, setlatlng] = useState();\r\n  const [addressdetail, setaddressdetail] = useState({\r\n    address: \"\",\r\n    addressLine1: \"\",\r\n\r\n    state: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n  });\r\n  useEffect(() => {\r\n    console.log(\" address details\", addressdetail);\r\n  }, [addressdetail]);\r\n\r\n  const [customersnumber, setcustomersnumber] = useState({\r\n    address_1: \"\",\r\n  });\r\n  const [customeraddress1, setcustomeraddress1] = useState();\r\n  const [customerstate, setcustomerstate] = useState();\r\n  const [customercity, setcustomercity] = useState();\r\n  const [customercountry, setcustomercountry] = useState();\r\n  const [customerzipcode, setcustomerzipcode] = useState();\r\n  const [customerpostaltown, setcustomerpostaltown] = useState();\r\n  const [shownextaddresspage, setshownextaddresspage] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    selectedItem: null,\r\n    mapCentre: {\r\n      lat: main.selectedRestaurant.lat,\r\n      lng: main.selectedRestaurant.lon,\r\n    },\r\n    restaurantCordinate: {\r\n      //TODO: check with Sandip why it was necessary to add this on state when its just one time thing :/\r\n      lat: menu.restaurantInfo.lat,\r\n      lng: menu.restaurantInfo.lon,\r\n    },\r\n    customerCordinates: {\r\n      lat: \"\",\r\n      lng: \"\",\r\n    },\r\n    address: \"\",\r\n    addressLine1: \"\",\r\n    displayAutocomplete: true,\r\n    state: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    errorMessage: false,\r\n    errorMessageForNullDestination: false,\r\n    distance: 0,\r\n    googleApi: \"\",\r\n  });\r\n  const phonecodetoCountryMaping = {\r\n    AF: \"+93\",\r\n    AL: \"+355\",\r\n    DZ: \"+213\",\r\n    AD: \"+376\",\r\n    AO: \"+244\",\r\n    AG: \"+1-268\",\r\n    AR: \"+54\",\r\n    AM: \"+374\",\r\n    AU: \"+61\",\r\n    AT: \"+43\",\r\n    AZ: \"+374-97\",\r\n    BS: \"+1-242\",\r\n    BH: \"+973\",\r\n    BD: \"+880\",\r\n    BB: \"+1-246\",\r\n    BY: \"+375\",\r\n    BE: \"+32\",\r\n    BZ: \"+501\",\r\n    BJ: \"+229\",\r\n    BT: \"+975\",\r\n    BO: \"+591\",\r\n    BA: \"+387\",\r\n    BW: \"+267\",\r\n    BR: \"+55\",\r\n    BN: \"+673\",\r\n    BG: \"+359\",\r\n    BF: \"+226\",\r\n    BI: \"+257\",\r\n    KH: \"+855\",\r\n    CM: \"+237\",\r\n    CA: \"+1\",\r\n    CV: \"+238\",\r\n    CF: \"+236\",\r\n    TD: \"+235\",\r\n    CL: \"+56\",\r\n    CN: \"+86\",\r\n    CO: \"+57\",\r\n    KM: \"+269\",\r\n    CD: \"+243\",\r\n    CG: \"+242\",\r\n    CR: \"+506\",\r\n    CI: \"+225\",\r\n    HR: \"+385\",\r\n    CU: \"+53\",\r\n    CY: \"+90-392\",\r\n    CZ: \"+420\",\r\n    DK: \"+45\",\r\n    DJ: \"+253\",\r\n    DM: \"+1-767\",\r\n    DO: \"+1-829\",\r\n    EC: \"+593\",\r\n    EG: \"+20\",\r\n    SV: \"+503\",\r\n    GQ: \"+240\",\r\n    ER: \"+291\",\r\n    EE: \"+372\",\r\n    ET: \"+251\",\r\n    FJ: \"+679\",\r\n    FI: \"+358\",\r\n    FR: \"+33\",\r\n    GA: \"+241\",\r\n    GM: \"+220\",\r\n    GE: \"+995\",\r\n    DE: \"+49\",\r\n    GH: \"+233\",\r\n    GR: \"+30\",\r\n    GD: \"+1-473\",\r\n    GT: \"+502\",\r\n    GN: \"+224\",\r\n    GW: \"+245\",\r\n    GY: \"+592\",\r\n    HT: \"+509\",\r\n    HN: \"+504\",\r\n    HU: \"+36\",\r\n    IS: \"+354\",\r\n    IN: \"+91\",\r\n    ID: \"+62\",\r\n    IR: \"+98\",\r\n    IQ: \"+964\",\r\n    IE: \"+353\",\r\n    IL: \"+972\",\r\n    IT: \"+39\",\r\n    JM: \"+1-876\",\r\n    JP: \"+81\",\r\n    JO: \"+962\",\r\n    KZ: \"+7\",\r\n    KE: \"+254\",\r\n    KI: \"+686\",\r\n    KP: \"+850\",\r\n    KR: \"+82\",\r\n    KW: \"+965\",\r\n    KG: \"+996\",\r\n    LA: \"+856\",\r\n    LV: \"+371\",\r\n    LB: \"+961\",\r\n    LS: \"+266\",\r\n    LR: \"+231\",\r\n    LY: \"+218\",\r\n    LI: \"+423\",\r\n    LT: \"+370\",\r\n    LU: \"+352\",\r\n    MK: \"+389\",\r\n    MG: \"+261\",\r\n    MW: \"+265\",\r\n    MY: \"+60\",\r\n    MV: \"+960\",\r\n    ML: \"+223\",\r\n    MT: \"+356\",\r\n    MH: \"+692\",\r\n    MR: \"+222\",\r\n    MU: \"+230\",\r\n    MX: \"+52\",\r\n    FM: \"+691\",\r\n    MD: \"+373-533\",\r\n    MC: \"+377\",\r\n    MN: \"+976\",\r\n    ME: \"+382\",\r\n    MA: \"+212\",\r\n    MZ: \"+258\",\r\n    MM: \"+95\",\r\n    NA: \"+264\",\r\n    NR: \"+674\",\r\n    NP: \"+977\",\r\n    NL: \"+31\",\r\n    NZ: \"+64\",\r\n    NI: \"+505\",\r\n    NE: \"+227\",\r\n    NG: \"+234\",\r\n    NO: \"+47\",\r\n    OM: \"+968\",\r\n    PK: \"+92\",\r\n    PW: \"+680\",\r\n    PA: \"+507\",\r\n    PG: \"+675\",\r\n    PY: \"+595\",\r\n    PE: \"+51\",\r\n    PH: \"+63\",\r\n    PL: \"+48\",\r\n    PT: \"+351\",\r\n    QA: \"+974\",\r\n    RO: \"+40\",\r\n    RU: \"+7\",\r\n    RW: \"+250\",\r\n    KN: \"+1-869\",\r\n    LC: \"+1-758\",\r\n    VC: \"+1-784\",\r\n    WS: \"+685\",\r\n    SM: \"+378\",\r\n    ST: \"+239\",\r\n    SA: \"+966\",\r\n    SN: \"+221\",\r\n    RS: \"+381\",\r\n    SC: \"+248\",\r\n    SL: \"+232\",\r\n    SG: \"+65\",\r\n    SK: \"+421\",\r\n    SI: \"+386\",\r\n    SB: \"+677\",\r\n    SO: \"+252\",\r\n    ZA: \"+27\",\r\n    ES: \"+34\",\r\n    LK: \"+94\",\r\n    SD: \"+249\",\r\n    SR: \"+597\",\r\n    SZ: \"+268\",\r\n    SE: \"+46\",\r\n    CH: \"+41\",\r\n    SY: \"+963\",\r\n    TJ: \"+992\",\r\n    TZ: \"+255\",\r\n    TH: \"+66\",\r\n    TL: \"+670\",\r\n    TG: \"+228\",\r\n    TO: \"+676\",\r\n    TT: \"+1-868\",\r\n    TN: \"+216\",\r\n    TR: \"+90\",\r\n    TM: \"+993\",\r\n    TV: \"+688\",\r\n    UG: \"+256\",\r\n    UA: \"+380\",\r\n    AE: \"+971\",\r\n    GB: \"+44\",\r\n    US: \"+1\",\r\n    UY: \"+598\",\r\n    UZ: \"+998\",\r\n    VU: \"+678\",\r\n    VA: \"+379\",\r\n    VE: \"+58\",\r\n    VN: \"+84\",\r\n    YE: \"+967\",\r\n    ZM: \"+260\",\r\n    ZW: \"+263\",\r\n    TW: \"+886\",\r\n    CX: \"+61\",\r\n    CC: \"+61\",\r\n    NF: \"+672\",\r\n    NC: \"+687\",\r\n    PF: \"+689\",\r\n    YT: \"+262\",\r\n    GP: \"+590\",\r\n    PM: \"+508\",\r\n    WF: \"+681\",\r\n    CK: \"+682\",\r\n    NU: \"+683\",\r\n    TK: \"+690\",\r\n    GG: \"+44\",\r\n    IM: \"+44\",\r\n    JE: \"+44\",\r\n    AI: \"+1-264\",\r\n    BM: \"+1-441\",\r\n    IO: \"+246\",\r\n    VG: \"+1-284\",\r\n    KY: \"+1-345\",\r\n    FK: \"+500\",\r\n    GI: \"+350\",\r\n    MS: \"+1-664\",\r\n    SH: \"+290\",\r\n    TC: \"+1-649\",\r\n    MP: \"+1-670\",\r\n    PR: \"+1-787\",\r\n    AS: \"+1-684\",\r\n    GU: \"+1-671\",\r\n    VI: \"+1-340\",\r\n    HK: \"+852\",\r\n    MO: \"+853\",\r\n    FO: \"+298\",\r\n    GL: \"+299\",\r\n    GF: \"+594\",\r\n    MQ: \"+596\",\r\n    RE: \"+262\",\r\n    AX: \"+358-18\",\r\n    AW: \"+297\",\r\n    AN: \"+599\",\r\n    SJ: \"+47\",\r\n    AC: \"+247\",\r\n    TA: \"+290\",\r\n    CS: \"+381\",\r\n    PS: \"+970\",\r\n    EH: \"+212\",\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const closeLoginModal = () => {\r\n    // dispatch(displayAddressModal(false));\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  // const handleSelect = async (props) => {\r\n  //   alert(\"yo\");\r\n  //   const result = await geocodeByPlaceId(props[\"place_id\"]);\r\n  //   console.log(\"select\", result);\r\n  //   const lat = result[0].geometry.location.lat();\r\n  //   const lng = result[0].geometry.location.lng();\r\n\r\n  //   console.log(\"resultr\", result);\r\n\r\n  //   const cordinates = {\r\n  //     lat,\r\n  //     lng,\r\n  //   };\r\n\r\n  //   setState({ ...state, lat, lng }, () => {\r\n  //     handleMarkerPostionChange(cordinates);\r\n  //     //state.googleApi.setMarkerPosition(cordinates);\r\n  //   });\r\n  // };\r\n\r\n  const handleGoogleApi = (google) => {\r\n    if (!state.googleApi) setState({ ...state, googleApi: google });\r\n\r\n    console.log(\"api\", google);\r\n  };\r\n\r\n  const handleMarkerPostionChange = async (position) => {\r\n    dispatch(setDestinationCoordinates(position));\r\n    if (position) {\r\n      const { lat, lng } = position;\r\n      console.log(\"position is\", position);\r\n\r\n      setlatlng(position);\r\n\r\n      setState({\r\n        ...state,\r\n        errorMessage: false,\r\n        mapCentre: {\r\n          lat,\r\n          lng,\r\n        },\r\n      });\r\n\r\n      const response = await Geocode.fromLatLng(lat, lng);\r\n\r\n      console.log(\"response \", response);\r\n\r\n      const address = response.results[0].formatted_address;\r\n\r\n      console.log(\"address \", address);\r\n\r\n      // get the distance b/w user and restaurant\r\n      // and check if it's in the range of delivery\r\n\r\n      // setState({ ...state, address });\r\n      //setaddressdetail({ ...addressdetail, address });\r\n      // get address, city, state, country, zipcode.\r\n      const addressComponents = response.results[0].address_components;\r\n\r\n      console.log(\"addressComponents\", addressComponents);\r\n      dispatch(setDestinationCoordinates(addressComponents));\r\n\r\n      for (let i = 0; i < addressComponents.length; i++) {\r\n        switch (addressComponents[i].types[0]) {\r\n          case \"street_number\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   addressLine1: addressComponents[i].long_name,\r\n            // });\r\n            setcustomersnumber({ address_1: addressComponents[i].long_name });\r\n\r\n            break;\r\n          }\r\n          case \"route\": {\r\n            // setaddressdetail((prevState) => ({\r\n            //   ...addressdetail,\r\n            //   addressLine1:\r\n            //     addressComponents[i].long_name + \" \" + prevState.addressLine1,\r\n            // }));\r\n\r\n            if (main.selectedRestaurant.country == \"United Kingdom\") {\r\n              setcustomersnumber((prevState) => ({\r\n                address_1:\r\n                  prevState.address_1 + \" \" + addressComponents[i].long_name,\r\n              }));\r\n            } else {\r\n              setcustomersnumber((prevState) => ({\r\n                address_1:\r\n                  addressComponents[i].long_name + \" \" + prevState.address_1,\r\n              }));\r\n            }\r\n\r\n            break;\r\n          }\r\n          case \"locality\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   city: addressComponents[i].long_name,\r\n            // });\r\n\r\n            setcustomercity(addressComponents[i].long_name);\r\n\r\n            break;\r\n          }\r\n          case \"postal_town\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   city: addressComponents[i].long_name,\r\n            // });\r\n\r\n            setcustomerpostaltown(addressComponents[i].long_name);\r\n\r\n            break;\r\n          }\r\n\r\n          case \"state\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   state: addressComponents[i].long_name,\r\n            // });\r\n            setcustomerstate(addressComponents[i].long_name);\r\n\r\n            break;\r\n          }\r\n          case \"country\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   country: addressComponents[i].long_name,\r\n            // });\r\n\r\n            setcustomercountry(addressComponents[i].long_name);\r\n            // let countryShortName = addressComponents[i].short_name;\r\n            // console.log(phonecodetoCountryMaping[countryShortName]);\r\n            // props.setPhoneCode(phonecodetoCountryMaping[countryShortName]);\r\n\r\n            break;\r\n          }\r\n          case \"postal_code\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   zipcode: addressComponents[i].long_name,\r\n            // });\r\n            setcustomerzipcode(addressComponents[i].long_name);\r\n            break;\r\n          }\r\n\r\n          // default: {\r\n          //   const addr = `${this.state.addressLine1} , ${addressComponents[i].long_name}`.replace(/[\\s,]+/, ' ').trim();\r\n          //   console.log(this.state.addressLine1);\r\n          //   const finalAddr = addr.split(' , ').reduce((acc, str) => {\r\n          //     if (!acc.includes(str) && str.trim().length) {\r\n          //       return [\r\n          //         acc,\r\n          //         str,\r\n          //       ].join(', ');\r\n          //     }\r\n\r\n          //     return acc;\r\n          //   }, '').split(', ').filter((val) => val.trim().length).join(', ');\r\n\r\n          //   this.setState({ addressLine1: finalAddr });\r\n          //   break;\r\n          // }\r\n        }\r\n      }\r\n\r\n      // addressComponents.forEach((element, i) => {\r\n      //   console.log(\"element is\", element.types);\r\n\r\n      // });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customersnumber);\r\n  }, [customersnumber]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"complete state is\", customeraddress1);\r\n  // }, [customeraddress1]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customercity);\r\n  }, [customercity]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customerstate);\r\n  }, [customerstate]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customerzipcode);\r\n  }, [customerzipcode]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customercountry);\r\n  }, [customercountry]);\r\n\r\n  const handleDistanceCalucationCallback = (result) => {\r\n    console.log(\"distance\", result.distance);\r\n\r\n    if (result.status === \"SUCCESS\") {\r\n      // check if distance is inside restaurant deilvery range\r\n      const distance = parseFloat(result.distance / 1000);\r\n      console.log(\"distance in decimal\", distance);\r\n      if (!isDistanceInDeliveryRange(distance, main.deliveryRange)) {\r\n        setState({\r\n          ...state,\r\n          errorMessage:\r\n            \"Sorry, We do not provide delivery on selected address.\",\r\n        });\r\n      } else if (distance) {\r\n        setState({ ...state, errorMessage: false });\r\n        dispatch(\r\n          setDeliveryOption({\r\n            distance,\r\n            userAddress: {\r\n              address1: customersnumber.address_1,\r\n              state: customerstate,\r\n              city: customercity ? customercity : customerpostaltown,\r\n              country: customercountry,\r\n              zipcode: customerzipcode,\r\n            },\r\n            option: \"Delivery\",\r\n          })\r\n        );\r\n        setshownextaddresspage(true);\r\n        // this.props.successCallback && this.props.successCallback();\r\n        // !this.props.modalState.addAddress && this.props.setIsTakeAway(false);\r\n        //dispatch(closeModal());\r\n        // this.props.isUserLoggedIn &&\r\n        //   this.props.openModal(modalNames.ADD_ADDRESS, {\r\n        //     selectAddress: true,\r\n        //     existingDefaultAddress:\r\n        //       this.props.modalState.existingDefaultAddress,\r\n        //     editMode: false,\r\n        //   });\r\n      }\r\n    } else {\r\n      setState({ ...state, errorMessage: result.reason });\r\n    }\r\n  };\r\n\r\n  const isDistanceInDeliveryRange = (distance, { range }) => {\r\n    console.log(\"new distance is distnce\", distance);\r\n    let maxDistance = 0;\r\n\r\n    for (const dist in range) {\r\n      const newDistance = parseFloat(range[dist].range_to);\r\n\r\n      if (newDistance > maxDistance) {\r\n        maxDistance = newDistance;\r\n        console.log(\"new distance is\", newDistance);\r\n      }\r\n    }\r\n\r\n    if (distance <= maxDistance) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleDelivery = () => {\r\n    console.log(\"not from checkout\", props.bool, props.isItFromCheckout);\r\n\r\n    console.log(\"check api\", state.googleApi);\r\n    setState({\r\n      ...state,\r\n      addressLine1: customersnumber.address_1,\r\n      city: customercity ? customercity : customerpostaltown,\r\n      zipcode: customerzipcode,\r\n      country: customercountry,\r\n    });\r\n\r\n    const details = {\r\n      add1: \"\",\r\n      add2: \"\",\r\n      city: \"\",\r\n      zipcode: \"\",\r\n      country: \"\",\r\n    };\r\n\r\n    for (let i = 0; i < main.destination_coordinates.length; i++) {\r\n      switch (main.destination_coordinates[i].types[0]) {\r\n        case \"street_number\": {\r\n          details.add1 = main.destination_coordinates[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"route\": {\r\n          details.add2 = main.destination_coordinates[i].long_name;\r\n        }\r\n        case \"postal_town\": {\r\n          details.city = main.destination_coordinates[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"state\": {\r\n          break;\r\n        }\r\n        case \"country\": {\r\n          details.country = main.destination_coordinates[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"postal_code\": {\r\n          // setaddressdetail({\r\n          //   ...addressdetail,\r\n          //   zipcode: main.destination_coordinates[i].long_name,\r\n          // });\r\n          details.zipcode = main.destination_coordinates[i].long_name;\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"details is\", details);\r\n\r\n    const service = new window.google.maps.DistanceMatrixService();\r\n\r\n    // const originCord = `${origin.lat},${origin.lng}`;\r\n    // const destinationCord = `${destination.lat},${destination.lng}`;\r\n\r\n    const originCord = `${main.selectedRestaurant.address},${main.selectedRestaurant.city}, ${main.selectedRestaurant.zipcode}, ${main.selectedRestaurant.country}`;\r\n    const destinationCord = `${details.add1}+${details.add2},${details.city},${details.zipcode},${details.country}`;\r\n\r\n    console.log(\"destination is\", destinationCord, originCord);\r\n    if (destinationCord) {\r\n      service.getDistanceMatrix(\r\n        {\r\n          origins: [originCord],\r\n          destinations: [destinationCord],\r\n          travelMode: \"DRIVING\",\r\n          durationInTraffic: true,\r\n          avoidHighways: false,\r\n          // unitSystem: props.google.maps.UnitSystem.METRIC,\r\n          avoidTolls: false,\r\n        },\r\n        (response) => {\r\n          let reason;\r\n\r\n          let distance;\r\n\r\n          let status;\r\n\r\n          console.log(\"response in google payemnt\", response);\r\n\r\n          if (\r\n            response.rows[0].elements[0].distance === undefined &&\r\n            response.destinationAddresses[0] === \"0,0\"\r\n          ) {\r\n            // user has to choose some correct address\r\n            reason = \"Please choose an address\";\r\n            status = \"FAILED\";\r\n          } else if (\r\n            response.rows[0].elements[0].status !== undefined &&\r\n            response.rows[0].elements[0].status === \"ZERO_RESULTS\"\r\n          ) {\r\n            reason = \"Sorry, Chosen address is out of delivery range!\";\r\n            status = \"FAILED\";\r\n          } else {\r\n            status = \"SUCCESS\";\r\n            distance = response.rows[0].elements[0].distance.value;\r\n          }\r\n\r\n          handleDistanceCalucationCallback({ distance, status, reason });\r\n\r\n          // callback({\r\n          //   distance,\r\n          //   status,\r\n          //   reason,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        errorMessageForNullDestination: \"Please select address again.\",\r\n      });\r\n    }\r\n\r\n    // state.googleApi.calculateDistance(\r\n    //   // state.restaurantCordinate,\r\n    //   // latlng,\r\n    //   customersnumber.address_1,\r\n    //   customercity,\r\n    //   customerzipcode,\r\n    //   customercountry,\r\n    //   handleDistanceCalucationCallback\r\n    // );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", state);\r\n  }, [state]);\r\n\r\n  // const handleChange = (address) => {\r\n  //   setState({ ...state, address });\r\n  // };\r\n\r\n  // const handleSelect = (address) => {\r\n  //   geocodeByAddress(address)\r\n  //     .then((results) => getLatLng(results[0]))\r\n  //     .then((latLng) => {\r\n  //       setState({ ...state, address });\r\n  //       setState({ ...state, mapCentre: latLng });\r\n  //       handleMarkerPostionChange(state.mapCentre);\r\n  //       console.log(\"Success\", latLng);\r\n  //       console.log(\"state is\", state);\r\n  //     })\r\n  //     .catch((error) => console.error(\"Error\", error));\r\n  // };\r\n\r\n  const toggle = () => {\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className='xyz'\r\n        isOpen={true}\r\n        toggle={toggle}\r\n        style={{ top: \"5%\" }}\r\n      >\r\n        <ModalHeader style={{ height: \"60px\" }} toggle={toggle}>\r\n          {\" \"}\r\n          <p className='heading-for-modalchooseaddress'>SELECT DELIVERY AREA</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <h4>Please enter correct address with house number</h4>\r\n          <GoogleMap\r\n            lat={state.mapCentre ? state.mapCentre.lat : null}\r\n            lng={state.mapCentre ? state.mapCentre.lng : null}\r\n            address={state.address || main.selectedRestaurant.address}\r\n            onMarkerPositionChange={handleMarkerPostionChange}\r\n            googleApi={handleGoogleApi}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            onClick={handleDelivery}\r\n            style={{\r\n              marginTop: \"20px\",\r\n              width: \"100%\",\r\n              // marginLeft: \"25%\",\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n              paddingLeft: \"80px\",\r\n              paddingRight: \"80px\",\r\n            }}\r\n          >\r\n            Delivery\r\n          </Button>\r\n          {state.errorMessage ? (\r\n            <>\r\n              <div style={{ marginTop: \"10px\" }}>\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: \"red\",\r\n                    fontSize: \"20px\",\r\n                  }}\r\n                >\r\n                  {state.errorMessage}\r\n                </p>\r\n              </div>\r\n            </>\r\n          ) : null}\r\n          {state.errorMessageForNullDestination ? (\r\n            <>\r\n              <div style={{ marginTop: \"10px\" }}>\r\n                <p\r\n                  style={{\r\n                    // textAlign: \"center\",\r\n                    color: \"red\",\r\n                    fontSize: \"20px\",\r\n                    paddingRight: \"110px\",\r\n                  }}\r\n                >\r\n                  {state.errorMessageForNullDestination}\r\n                </p>\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      {shownextaddresspage ? (\r\n        <>\r\n          <AddAddress\r\n            refetchAddresses={props.refetchAddresses}\r\n            bool={props.bool}\r\n            isItFromCheckout={props.isItFromCheckout}\r\n            getAddress={props.getAddress}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default ChooseAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\GoogleMap\\GoogleMap.jsx",["737","738","739","740","741","742"],"import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport \"../../components/GoogleMap/GoogleMap.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst GoogleMap = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const dispatch = useDispatch();\r\n  const [placeaddress, setPlaceaddress] = useState();\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    lat: props.lat,\r\n    lng: props.lng,\r\n\r\n    mapCentre: {\r\n      lat: main.selectedRestaurant.lat,\r\n      lng: main.selectedRestaurant.lon,\r\n    },\r\n  });\r\n\r\n  const { google, lat, lng, name, address } = props;\r\n  const mapStyles = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"propsuseeffecr\", props.googleApi);\r\n    if (props.googleApi) {\r\n      props.googleApi({\r\n        googleApi: props.google,\r\n        setMarkerPosition: setMarkerPosition,\r\n        //calculateDistance: this.calculateDistance,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleMapClick = (ref, map, ev) => {\r\n    setState({ ...state, lat: ev.latLng.lat(), lng: ev.latLng.lng() });\r\n    console.log(\"state is\", state);\r\n\r\n    const newLatLng = {\r\n      lat: state.lat,\r\n      lng: state.lng,\r\n    };\r\n    console.log(\"newe\", newLatLng);\r\n\r\n    setMarkerPosition(newLatLng);\r\n  };\r\n\r\n  const setMarkerPosition = (cordinates) => {\r\n    console.log(\"cordinate\", cordinates);\r\n    setState({\r\n      ...state,\r\n      mapCentre: { lat: cordinates.lat, lng: cordinates.lng },\r\n    });\r\n\r\n    console.log(\"setmarker stata\", state);\r\n\r\n    props.onMarkerPositionChange && props.onMarkerPositionChange(cordinates);\r\n  };\r\n\r\n  const calculateDistance = (\r\n    origin,\r\n    destination,\r\n    add1,\r\n    city,\r\n    zipcode,\r\n    country,\r\n    callback\r\n  ) => {\r\n    //const service = new props.google.maps.DistanceMatrixService();\r\n\r\n    const service = new props.google.maps.DistanceMatrixService();\r\n\r\n    // const originCord = `${origin.lat},${origin.lng}`;\r\n    // const destinationCord = `${destination.lat},${destination.lng}`;\r\n\r\n    const originCord = `${main.selectedRestaurant.address},${main.selectedRestaurant.city}, ${main.selectedRestaurant.zipcode}, ${main.selectedRestaurant.country}`;\r\n    const destinationCord = `${add1},${city},${zipcode},${country}`;\r\n\r\n    console.log(\"destination is\", destinationCord, originCord);\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [originCord],\r\n        destinations: [destinationCord],\r\n        travelMode: props.google.maps.TravelMode.DRIVING,\r\n        durationInTraffic: true,\r\n        avoidHighways: false,\r\n        unitSystem: props.google.maps.UnitSystem.METRIC,\r\n        avoidTolls: false,\r\n      },\r\n      (response) => {\r\n        let reason;\r\n\r\n        let distance;\r\n\r\n        let status;\r\n\r\n        console.log(\"response in google\", response);\r\n\r\n        if (\r\n          response.rows[0].elements[0].distance === undefined &&\r\n          response.destinationAddresses[0] === \"0,0\"\r\n        ) {\r\n          // user has to choose some correct address\r\n          reason = \"Please choose an address\";\r\n          status = \"FAILED\";\r\n        } else if (\r\n          response.rows[0].elements[0].status !== undefined &&\r\n          response.rows[0].elements[0].status === \"ZERO_RESULTS\"\r\n        ) {\r\n          reason = \"Sorry, Chosen address is out of delivery range!\";\r\n          status = \"FAILED\";\r\n        } else {\r\n          status = \"SUCCESS\";\r\n          distance = response.rows[0].elements[0].distance.value;\r\n        }\r\n\r\n        callback({\r\n          distance,\r\n          status,\r\n          reason,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleDragEnd = async ({ latLng }) => {\r\n    console.log(\"drag\", latLng);\r\n    const cordinates = {\r\n      lat: latLng.lat(),\r\n      lng: latLng.lng(),\r\n    };\r\n\r\n    const response = await Geocode.fromLatLng(cordinates.lat, cordinates.lng);\r\n    const address = response.results[0].formatted_address;\r\n\r\n    console.log(\"address \", address);\r\n\r\n    // get the distance b/w user and restaurant\r\n    // and check if it's in the range of delivery\r\n\r\n    // setState({ ...state, address });\r\n    //setaddressdetail({ ...addressdetail, address });\r\n    // get address, city, state, country, zipcode.\r\n    const addressComponents = response.results[0].address_components;\r\n\r\n    console.log(\"addressComponents\", addressComponents);\r\n\r\n    const details = {\r\n      add1: \"\",\r\n      add2: \"\",\r\n      city: \"\",\r\n      town: \"\",\r\n      state: \"\",\r\n      zipcode: \"\",\r\n      country: \"\",\r\n    };\r\n\r\n    for (let i = 0; i < addressComponents.length; i++) {\r\n      switch (addressComponents[i].types[0]) {\r\n        case \"street_number\": {\r\n          details.add1 = addressComponents[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"route\": {\r\n          details.add1 = addressComponents[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"locality\": {\r\n          details.city = addressComponents[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"postal_town\": {\r\n          details.town = addressComponents[i].long_name;\r\n\r\n          break;\r\n        }\r\n\r\n        case \"state\": {\r\n          details.state = addressComponents[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"country\": {\r\n          details.country = addressComponents[i].long_name;\r\n\r\n          break;\r\n        }\r\n        case \"postal_code\": {\r\n          details.zipcode = addressComponents[i].long_name;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    let str;\r\n    if (details.country == \"United Kingdom\") {\r\n      str = `${details.add1} ${details.town} ,${details.zipcode} ${details.country}`;\r\n    } else {\r\n      str = `${details.add1} ${details.city} ,${details.zipcode} ${details.country}`;\r\n    }\r\n    console.log(\"drag\", str);\r\n    setPlaceaddress(str);\r\n    //setState({ lat: cordinates.lat, lng: cordinates.lng });\r\n\r\n    setMarkerPosition(cordinates);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (state.showingInfoWindow) {\r\n      setState({ ...state, showingInfoWindow: false, activeMarker: null });\r\n    }\r\n  };\r\n\r\n  const handleMarkerClick = (props, marker) => {\r\n    setState({\r\n      ...state,\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n    console.log(\"markerclick\", state);\r\n  };\r\n\r\n  const handleChange = (address) => {\r\n    console.log(\"address is\", address);\r\n    setPlaceaddress(address);\r\n    setState({ ...state, address });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"state in google map\", state);\r\n  }, [state]);\r\n\r\n  const handleSelect = (address) => {\r\n    setPlaceaddress(address);\r\n    console.log(\"address in select\", address);\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => {\r\n        setState({ ...state, address });\r\n        setState({ ...state, mapCentre: latLng });\r\n        setMarkerPosition(latLng);\r\n        console.log(\"Success\", latLng);\r\n        console.log(\"state is\", state);\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.googleApi) {\r\n      props.googleApi({\r\n        googleApi: props.google,\r\n        setMarkerPosition: setMarkerPosition,\r\n        calculateDistance: calculateDistance,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='google-map-container'>\r\n      <PlacesAutocomplete\r\n        value={placeaddress}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <input\r\n              style={{ width: \"102%\", height: \"40px\" }}\r\n              {...getInputProps({\r\n                placeholder: \"Search Places ...\",\r\n                className: \"location-search-input\",\r\n              })}\r\n            />\r\n            <div className='autocomplete-dropdown-container'>\r\n              {loading && <div>Loading...</div>}\r\n              {suggestions.map((suggestion) => {\r\n                const className = suggestion.active\r\n                  ? \"suggestion-item--active\"\r\n                  : \"suggestion-item\";\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                  ? {\r\n                      backgroundColor: \"#393939\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#fff\",\r\n                      height: \"40px\",\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"#ffffff\",\r\n                      cursor: \"pointer\",\r\n                      height: \"40px\",\r\n                    };\r\n                return (\r\n                  <div\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style,\r\n                    })}\r\n                  >\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n\r\n      <Map\r\n        google={google}\r\n        zoom={15}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n          lat: Number(lat),\r\n          lng: Number(lng),\r\n        }}\r\n        center={{\r\n          lat: state.mapCentre.lat,\r\n          lng: state.mapCentre.lng,\r\n        }}\r\n        onClick={handleMapClick}\r\n      >\r\n        <Marker\r\n          draggable={true}\r\n          onDragend={(t, map, coord) => handleDragEnd(coord)}\r\n          onClick={handleMarkerClick}\r\n          position={{\r\n            lat: state.mapCentre.lat,\r\n            lng: state.mapCentre.lng,\r\n          }}\r\n        />\r\n        <InfoWindow\r\n          marker={state.activeMarker}\r\n          visible={state.showingInfoWindow}\r\n          onClose={handleClose}\r\n        >\r\n          <div className='address-info'>\r\n            <h3>{name || \"\"}</h3>\r\n            <h4>{address || \"\"}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\nexport default GoogleApiWrapper({\r\n  // libraries: [\"places\"],\r\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n})(GoogleMap);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Loader\\Loader.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\Checkout.jsx",["743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788"],"import Appheader from \"../AppHeader/AppHeader\";\r\nimport \"../Checkout/Checkout.css\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport moment from \"moment\";\r\nimport {\r\n  setDeliveryCost,\r\n  setIsTakeAway,\r\n  setPickupTime,\r\n} from \"../../state-management/user/actions\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport {\r\n  addItem,\r\n  removeItem,\r\n  clearMenuState,\r\n} from \"../../state-management/menu/actions\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { getFormattedRequestPayload } from \"../Checkout/utils\";\r\nimport PaymentForm from \"../Checkout/PaymentForm\";\r\nimport {\r\n  checkCoupons,\r\n  placeOrder,\r\n  couponRedeem,\r\n} from \"../../state-management/menu/asyncActions\";\r\nimport axios from \"axios\";\r\nimport sha256 from \"js-sha256\";\r\nimport { CompassCalibrationOutlined } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport RenderModifiers from \"../../containers/Modifiers/RenderModifiers\";\r\nimport { modalNames } from \"../AppModal/constants\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { closeModal, openModal } from \"../../state-management/modal/actions\";\r\nimport { setComment } from \"../../state-management/menu/actions\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n//import { checkCoupons } from \"../../state-management/menu/asyncActions\";\r\nimport { Box, Drawer, ListItem, SwipeableDrawer } from \"@material-ui/core\";\r\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\n\r\nimport RestrictUser from \"../RestrictUser/RestrictUser\";\r\nconst useStyle = makeStyles({\r\n  list: {\r\n    width: 450,\r\n  },\r\n  \"@media (max-width:768px)\": {\r\n    list: {\r\n      width: 250,\r\n    },\r\n  },\r\n});\r\n\r\nconst Checkout = () => {\r\n  //const format = \"HH:mm\";\r\n  const History = useHistory();\r\n\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [couponisapplied, setcouponisapplied] = useState(false);\r\n  const [amountaftercouponapplied, setamountaftercouponapplied] = useState();\r\n  const [couponappliedname, setcouponappliedname] = useState();\r\n  const [couponamount, setcouponamount] = useState();\r\n  const [couponId, setcouponId] = useState();\r\n  const [couponredeemed, setcouponredeemed] = useState(false);\r\n  const [couponredeemedmessage, setcouponredeemedmessage] = useState();\r\n  const [coupontypeisdiscount, setcoupontypeisdiscount] = useState(false);\r\n  const [paymentfailed, setpaymentfailed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"coupon id is\", couponId);\r\n  }, [couponId]);\r\n  useEffect(() => {\r\n    console.log(\"coupon id is amount\", couponamount);\r\n  }, [couponamount]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"payment failed is\", paymentfailed);\r\n  }, [paymentfailed]);\r\n\r\n  const dispatch = useDispatch();\r\n  let refIndex = -1;\r\n  const timeOutRef = Array.from({ length: 100 }, () => React.createRef());\r\n  const DELIVERY_TYPE = {\r\n    DEFAULT: \"Delivery\",\r\n    TAKE_AWAY: \"PickUp\",\r\n    HOME_DELIVERY: \"Delivery\",\r\n    EAT_IN: \"EatIn\",\r\n  };\r\n  const [data, setdata] = useState({\r\n    // displayloader: false,\r\n    deliveryType: user.isTakeAway\r\n      ? DELIVERY_TYPE.TAKE_AWAY\r\n      : DELIVERY_TYPE.HOME_DELIVERY,\r\n    //selectedAddress: user.distance >= 0 ? user.selectedAddress : null,\r\n\r\n    isAddressesFetched: false,\r\n    paymentMethod: \"\",\r\n    // I wonder why we need these 3 states - this needs a lot of refactoring\r\n    openingBusinesHours: main.opening,\r\n    closingBusinesHours: main.closing,\r\n    businessHours: main.businessHour,\r\n    isTakeAway: user.isTakeAway,\r\n    orderButtonClicked: false,\r\n    // addresses: [],\r\n    paymentOptions: [],\r\n    deliveryCharges: \"\",\r\n    hasDeliveryOption: false,\r\n    hasEatInOption: false,\r\n    hasPickupOption: false,\r\n    pickupTime:\r\n      moment().add(30, \"minutes\").format(\"HH:mm\") >= main.opening &&\r\n      moment().add(30, \"minutes\").format(\"HH:mm\") <= main.closing\r\n        ? moment().add(30, \"minutes\")\r\n        : moment(main.opening, \"HH:mm\"),\r\n  });\r\n  const [show, setshow] = useState(false);\r\n  let isDecimalAmount = false;\r\n  const [state, setState] = useState({\r\n    showAddress: false,\r\n    deliveryType: \"\",\r\n  });\r\n\r\n  const truncateDecimal = (number) => {\r\n    return Number.isInteger(Number(number))\r\n      ? Number(number)\r\n      : Number(number).toFixed(2);\r\n  };\r\n  const grandTotal = Number(getGrandTotal());\r\n  const [billPercentAmount, setbillPercentAmount] = useState();\r\n  const [restrict, setRestrict] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!user.user.isUserLoggedIn) {\r\n      setRestrict(true);\r\n    }\r\n    if (main.deliveryRange)\r\n      //getDeliveryCharges();\r\n      //dispatch(setPickupTime(data.pickupTime));\r\n      //getDeliveryCharges();\r\n\r\n      console.log(\"xyz\", data.pickupTime);\r\n\r\n    const deliveryOptions = !(\r\n      main.selectedRestaurant.order_option === \"\" ||\r\n      main.selectedRestaurant.order_option === null ||\r\n      main.selectedRestaurant.order_option === undefined\r\n    );\r\n\r\n    if (main.selectedRestaurant.order_option) {\r\n      data.hasDeliveryOption = main.selectedRestaurant.order_option\r\n        .split(\",\")\r\n        .includes(\"delivery\");\r\n      data.hasEatInOption = main.selectedRestaurant.order_option\r\n        .split(\",\")\r\n        .includes(\"eatin\");\r\n      data.hasPickupOption = main.selectedRestaurant.order_option\r\n        .split(\",\")\r\n        .includes(\"pickup\");\r\n    }\r\n\r\n    data.paymentOptions = main.selectedRestaurant.payment_option_ids.split(\",\");\r\n\r\n    setdata({\r\n      ...data,\r\n    });\r\n    console.log(\"dtaa is\", data);\r\n    setbillPercentAmount(getBillAmount() / 100);\r\n  }, []);\r\n\r\n  const isPriceWithoutTax = () => {\r\n    console.log(\r\n      \"price without tax\",\r\n      menu.restaurantInfo[\"price_without_tax_flag\"]\r\n    );\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  function getItemPrice(item, isStillActive) {\r\n    console.log(\"getItem item is\", item);\r\n    if (item.happyHourItem && isStillActive) {\r\n      return isPriceWithoutTax\r\n        ? truncateDecimal(item.happyHourItem.grandTotal)\r\n        : truncateDecimal(item.happyHourItem.grandTotal);\r\n    } else {\r\n      return isPriceWithoutTax ? item.grandTotal : item.grandTotal;\r\n    }\r\n\r\n    // if (item.happyHourItem && isStillActive) {\r\n    //   if (item.similarItems && item.similarItems.length > 0) {\r\n    //     let totalPrice = 0;\r\n\r\n    //     for (let i = 0; i < item.similarItems.length; i++) {\r\n    //       totalPrice += this.isPriceWithoutTax()\r\n    //         ? item.similarItems[i].happyHourItem.subTotal\r\n    //         : item.similarItems[i].happyHourItem.grandTotal;\r\n    //     }\r\n\r\n    //     return Number(totalPrice).toFixed(2);\r\n    //   } else {\r\n    //     console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n    //     console.log(\"grand\", Number(item.happyHourItem.grandTotal).toFixed(2));\r\n    //     return this.isPriceWithoutTax()\r\n    //       ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n    //       : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n    //   }\r\n    // } else if (item.subTotal && item.grandTotal) {\r\n    //   if (item.similarItems && item.similarItems.length > 0) {\r\n    //     let totalPrice = 0;\r\n\r\n    //     for (let i = 0; i < item.similarItems.length; i++) {\r\n    //       totalPrice += isPriceWithoutTax()\r\n    //         ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n    //         : item.similarItems[i].grandTotal ||\r\n    //           getActualPrice(item.similarItems[i]);\r\n    //     }\r\n\r\n    //     return Number(totalPrice).toFixed(2);\r\n    //   } else {\r\n    //     console.log(\r\n    //       \"log\",\r\n    //       isPriceWithoutTax()\r\n    //         ? item.subTotal || item.price\r\n    //         : item.grandTotal || this.getActualPrice(item)\r\n    //     );\r\n    //     return isPriceWithoutTax()\r\n    //       ? item.subTotal || item.price\r\n    //       : item.grandTotal || this.getActualPrice(item);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const getActualPrice = (item) => {\r\n    if (menu.restaurantInfo) {\r\n      // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n      return isPriceWithoutTax()\r\n        ? item.price\r\n        : (\r\n            Number(item.price) +\r\n            Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n          ).toFixed(2);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  function getSubTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.subTotal\r\n                  ? Number(item.happyHourItem.subTotal)\r\n                  : Number(item.qty) * Number(item.price))\r\n              );\r\n            }\r\n\r\n            return (\r\n              acc +\r\n              (item.subTotal ? item.subTotal : item.qty * Number(item.price))\r\n            );\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getSubTaxTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.tax\r\n                  ? item.happyHourItem.tax\r\n                  : item.tax || 0)\r\n              );\r\n            }\r\n\r\n            return acc + Number(item.tax || 0);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getGrandTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  // const deliveryCharges = 0;\r\n  const getBillAmount = () => {\r\n    var finalAmount;\r\n    if (couponisapplied) {\r\n      var finalAmount =\r\n        (Number(user.delivery_cost) + Number(getGrandTotal())).toFixed(2) -\r\n        couponamount;\r\n    } else {\r\n      var finalAmount = (\r\n        Number(user.delivery_cost) + Number(getGrandTotal())\r\n      ).toFixed(2);\r\n    }\r\n    const showAmountInDecimal =\r\n      Number(menu.restaurantInfo[\"show_prices_in_decimal_flag\"]) === 1;\r\n\r\n    if (showAmountInDecimal) {\r\n      isDecimalAmount = true;\r\n    } else {\r\n      isDecimalAmount = finalAmount % 1 === 0;\r\n    }\r\n\r\n    return !showAmountInDecimal && finalAmount % 1 !== 0\r\n      ? finalAmount\r\n      : finalAmount;\r\n  };\r\n\r\n  const getDeliveryCharges = () => {\r\n    console.log(\"we are in getd\");\r\n    if (!main.deliveryRange) return;\r\n    const cost = main.deliveryRange.cost;\r\n    const range = main.deliveryRange.range;\r\n    const isTakeAway = user.isTakeAway;\r\n    const distance = user.distance;\r\n\r\n    const freeDeliveryRangeAmount = cost[\"free_delivery_eligible_amount\"];\r\n    const stdDeliveryCost = cost[\"std_delivery_cost\"] || 0;\r\n    console.log(\r\n      \"check delivery\",\r\n      parseInt(cost[\"free_delivery_eligible_amount\"]) === 0,\r\n      parseInt(cost[\"std_delivery_cost\"]) === 0,\r\n      grandTotal\r\n    );\r\n\r\n    const isFreeDelivery =\r\n      grandTotal >= Number(cost[\"free_delivery_eligible_amount\"]) &&\r\n      parseInt(freeDeliveryRangeAmount) !== 0;\r\n\r\n    if (isFreeDelivery || isTakeAway) {\r\n      dispatch(setDeliveryCost(0));\r\n      return 0;\r\n    }\r\n    //\r\n\r\n    if (distance === -1 || !range) {\r\n      console.log(\"std delivery cost\", stdDeliveryCost);\r\n      console.log(\"std delivery cost\", Number(stdDeliveryCost));\r\n      if (stdDeliveryCost) {\r\n        dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n      }\r\n      return Number(stdDeliveryCost);\r\n    }\r\n\r\n    if (range) {\r\n      const selectedRange = range.find((rng) => {\r\n        const from = Number(rng[\"range_from\"]);\r\n        const to = Number(rng[\"range_to\"]);\r\n\r\n        return distance >= from && distance <= to;\r\n      });\r\n\r\n      // selectedRange\r\n      //   ?( Number(selectedRange[\"delivery_cost\"]) || 0)\r\n      //   : Number(stdDeliveryCost);\r\n\r\n      if (selectedRange) {\r\n        if (selectedRange[\"delivery_cost\"]) {\r\n          dispatch(setDeliveryCost(selectedRange[\"delivery_cost\"]));\r\n          console.log(\"range\", selectedRange[\"delivery_cost\"]);\r\n        } else {\r\n          dispatch(setDeliveryCost(0));\r\n        }\r\n      } else {\r\n        dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n      }\r\n      return selectedRange\r\n        ? Number(selectedRange[\"delivery_cost\"] || 0)\r\n        : Number(stdDeliveryCost);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const [updatedcouponamount, setupdatedcouponamount] = useState();\r\n  const handleAddItem = (item) => {\r\n    dispatch(\r\n      addItem(item, item.modifiers || 0, item.subTotal, menu.restaurantInfo)\r\n    );\r\n  };\r\n\r\n  const handleRemoveItem = (item) => {\r\n    dispatch(removeItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  };\r\n\r\n  const getSavedAmount = () => {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.grandTotal -\r\n                  ((item.happyHourItem && item.happyHourItem.grandTotal) || 0))\r\n              );\r\n            }\r\n\r\n            return acc;\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  };\r\n\r\n  const savedAmount = Math.abs(getSavedAmount());\r\n\r\n  const sendpaymentreq = async (type, orderId) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        var errorurl = `https://ciboapp.com/feedmii/?/restId=${menu.restaurantInfo.restaurant_id}/paymentfailed`;\r\n        var failedurl = `https://ciboapp.com/feedmii/?/restId=${menu.restaurantInfo.restaurant_id}/paymentfailed`;\r\n        //var failedurl = `http://localhost:3000/feedmii/?/restId=${menu.restaurantInfo.restaurant_id}/paymentfailed`;\r\n        var accepturl = `https://ciboapp.com/feedmii/?/restId=${menu.restaurantInfo.restaurant_id}/ordersuccess?orderid=${orderId}`;\r\n        //var accepturl = `http://localhost:3000/feedmii/?/restId=${menu.restaurantInfo.restaurant_id}/ordersuccess?orderid=${orderId}`;\r\n        var callbackurl = \"https://ciboapp.com/api/mobileApi/v2/app/callback\";\r\n        var mkey = menu.restaurantInfo.merchant_key;\r\n        var sec = menu.restaurantInfo.secret;\r\n        var userid = \"123\";\r\n\r\n        let str = `${getBillAmount()}${callbackurl}${\r\n          menu.restaurantInfo.currency\r\n        }${errorurl}${failedurl}${mkey}${orderId}${accepturl}${sec}`;\r\n\r\n        let mac = sha256(str);\r\n\r\n        const paymentdata = {\r\n          name: user.user.firstName,\r\n          email: user.user.email,\r\n          phone: user.user.mobile,\r\n          user_id: userid,\r\n          order_id: `${orderId}`,\r\n          merchant_key: mkey,\r\n          amount: getBillAmount(),\r\n          currency: menu.restaurantInfo.currency,\r\n          mac: mac,\r\n          redirect_type: type,\r\n          accept_url: accepturl,\r\n          failed_url: failedurl,\r\n          error_url: errorurl,\r\n          callback_url: callbackurl,\r\n        };\r\n\r\n        //live https://api.zotto.z-payments.com/api/payment-link\r\n        //live merchant : 2533554646411\r\n        //live secret : eAfg21swu0y211\r\n\r\n        //test https://paymentz.z-pay.co.uk/api/payment-link\r\n        //test merchant : 45455514421\r\n        //test secret : eAfg21swu0y2\r\n\r\n        axios\r\n          .post(\r\n            \"https://api.zotto.z-payments.com/api/payment-link\",\r\n            paymentdata\r\n          )\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            resolve(\"complete\");\r\n\r\n            window.location.href = response.data.data.paymentLink;\r\n          })\r\n          .catch((error) => {\r\n            resolve(\"error\");\r\n            console.log(\"we have payment error\");\r\n          });\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const getOrderId = () => {\r\n    return new Date().getTime().toString();\r\n  };\r\n  const handleCheckout = async (deliveryDetails) => {\r\n    console.log(\"deliveryDetails is \", deliveryDetails);\r\n    console.log(\"saved amount\", Math.abs(getSavedAmount()));\r\n    var cpamount = couponamount;\r\n    var cpid = couponId;\r\n    console.log(\"couponamount is \", cpamount);\r\n\r\n    setdata({ ...state, displayloader: true });\r\n    // return;\r\n\r\n    const orderId = getOrderId();\r\n    var savedAmount = \"1\";\r\n    const response_format = getFormattedRequestPayload(\r\n      // props.phone_code,\r\n      user,\r\n      user.selectedPickUpTime,\r\n      menu.restaurantInfo,\r\n      deliveryDetails,\r\n      orderId,\r\n      getSubTotal(),\r\n      getSubTaxTotal(),\r\n      getBillAmount(),\r\n      menu.cart,\r\n      user.distance,\r\n      Math.abs(getSavedAmount()),\r\n      // getSavedAmount(),\r\n      getDeliveryCharges(),\r\n      user.user.phonecode,\r\n      user.selectedDeliveryTime,\r\n      cpid,\r\n      cpamount\r\n    );\r\n\r\n    console.log(\"payload is\", response_format);\r\n\r\n    const response = await dispatch(\r\n      placeOrder(\r\n        getFormattedRequestPayload(\r\n          // props.phone_code,\r\n          user,\r\n          user.user.selectedPickUpTime,\r\n\r\n          menu.restaurantInfo,\r\n          deliveryDetails,\r\n          orderId,\r\n          getSubTotal(),\r\n          getSubTaxTotal(),\r\n          getBillAmount(),\r\n          menu.cart,\r\n          user.distance,\r\n          Math.abs(getSavedAmount()),\r\n          // getSavedAmount(),\r\n          getDeliveryCharges(),\r\n          user.user.phonecode,\r\n          user.user.selectedDeliveryTime,\r\n          cpid,\r\n          cpamount\r\n        ),\r\n        user.user.token\r\n      )\r\n    );\r\n    console.log(\"reponse is\", response);\r\n    const error = response;\r\n    const {\r\n      data: { RESULT, message },\r\n    } = response;\r\n    console.log(\"response is\", response);\r\n    console.log(\"results\", RESULT);\r\n    if (RESULT == \"SUCCESS\") {\r\n      console.log(\"if statement\", deliveryDetails.paymentMethod);\r\n      if (deliveryDetails.paymentMethod == \"1\") {\r\n        const x = await sendpaymentreq(\"1\", orderId);\r\n        if (x == \"error\") {\r\n          setdata({ ...state, displayloader: false });\r\n          return notification[\"warning\"]({\r\n            style: {\r\n              marginTop: \"50px\",\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n            message: \"Something wrong with payments\",\r\n          });\r\n        }\r\n\r\n        if (couponId) {\r\n          dispatch(\r\n            couponRedeem(\r\n              user.user.clientId,\r\n              menu.restaurantInfo.restaurant_id,\r\n              couponId\r\n            )\r\n          );\r\n        }\r\n\r\n        //dispatch(clearMenuState());\r\n      } else if (deliveryDetails.paymentMethod == \"4\") {\r\n        const x = await sendpaymentreq(\"2\", orderId);\r\n        if (x == \"error\") {\r\n          setdata({ ...state, displayloader: false });\r\n          return notification[\"warning\"]({\r\n            style: {\r\n              marginTop: \"50px\",\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n            message: \"Something wrong with payments\",\r\n          });\r\n        }\r\n        if (couponId) {\r\n          dispatch(\r\n            couponRedeem(\r\n              user.user.clientId,\r\n              menu.restaurantInfo.restaurant_id,\r\n              couponId\r\n            )\r\n          );\r\n        }\r\n\r\n        // dispatch(clearMenuState());\r\n      } else {\r\n        if (couponId) {\r\n          dispatch(\r\n            couponRedeem(\r\n              user.user.clientId,\r\n              menu.restaurantInfo.restaurant_id,\r\n              couponId\r\n            )\r\n          );\r\n        }\r\n        dispatch(clearMenuState());\r\n        History.push(\r\n          `/restId=${menu.restaurantInfo.restaurant_id}/ordersuccess?orderid=${response_format.order_id}`\r\n        );\r\n      }\r\n    }\r\n\r\n    // else if (response.error) {\r\n    //   alert(\"something went wrong\");\r\n\r\n    //   return (\r\n    //     <>\r\n    //       <p>something went wrong</p>\r\n    //     </>\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  function showPizzaDetails(pizza) {\r\n    dispatch(\r\n      openModal(modalNames.RENDER_PIZZADETAILS_CHECKOUT, {\r\n        item: {\r\n          ...pizza,\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  const [comm, setcomm] = useState();\r\n  function handleComments(e) {\r\n    dispatch(setComment(e.target.value));\r\n    setcomm(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"comments is\", comm);\r\n  }, [comm]);\r\n\r\n  const [discountnumber, setdiscountnumber] = useState();\r\n  const [maxdiscountnumber, setmaxdiscountnumber] = useState();\r\n  useEffect(() => {\r\n    if (coupontypeisdiscount) {\r\n      var amt = (Number(user.delivery_cost) + Number(getGrandTotal())).toFixed(\r\n        2\r\n      );\r\n      var fp = amt / 100;\r\n      var cp = truncateDecimal(fp * discountnumber);\r\n      // setupdatedcouponamount(cp);\r\n      console.log(\"cp & max\", cp, maxdiscountnumber);\r\n      if (maxdiscountnumber > cp || maxdiscountnumber == 0) {\r\n        setcouponamount(cp);\r\n      } else if (maxdiscountnumber < cp) {\r\n        setcouponamount(maxdiscountnumber);\r\n      }\r\n    }\r\n  }, [getBillAmount()]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"updated coupon amount is\", discountnumber);\r\n  }, [maxdiscountnumber]);\r\n\r\n  const [draweropen, setdraweropen] = useState(false);\r\n  const classes = useStyle();\r\n\r\n  const redeemCoupon = async (code, couponId) => {\r\n    setdata({ ...state, displayloader: true });\r\n    const response = await dispatch(\r\n      checkCoupons(\r\n        user.user.clientId,\r\n        moment().format(\"yyyy-MM-DD\"),\r\n        menu.restaurantInfo.restaurant_id,\r\n        code\r\n      )\r\n    );\r\n\r\n    if (response.data.status == \"200\") {\r\n      if (response.data.data.type == \"amount\") {\r\n        setcoupontypeisdiscount(false);\r\n        setamountaftercouponapplied(\r\n          getBillAmount() - response.data.data.amount\r\n        );\r\n        setcouponisapplied(true);\r\n        setcouponappliedname(response.data.data.coupon_name);\r\n        setcouponamount(response.data.data.amount);\r\n        setcouponId(response.data.data.coupon_id);\r\n        setcouponredeemed(false);\r\n      } else if (response.data.data.type == \"discount\") {\r\n        setcoupontypeisdiscount(true);\r\n        console.log(\"updated coupon amount is\", response.data.data.discount);\r\n        setdiscountnumber(response.data.data.discount);\r\n\r\n        var billPercentAmount = getBillAmount() / 100;\r\n        var percent_amount = truncateDecimal(\r\n          response.data.data.discount * billPercentAmount\r\n        );\r\n\r\n        var max_amount = truncateDecimal(response.data.data.max_discount);\r\n        setmaxdiscountnumber(truncateDecimal(response.data.data.max_discount));\r\n        //  var max_amount = 30;\r\n\r\n        // setmaxdiscountnumber(truncateDecimal(30.0));\r\n\r\n        if (max_amount > percent_amount || max_amount == 0) {\r\n          setcouponisapplied(true);\r\n          setcouponappliedname(response.data.data.coupon_name);\r\n          setcouponamount(percent_amount);\r\n          setcouponId(response.data.data.coupon_id);\r\n          setcouponredeemed(false);\r\n        } else if (max_amount < percent_amount) {\r\n          setcouponisapplied(true);\r\n          setcouponappliedname(response.data.data.coupon_name);\r\n          setcouponamount(max_amount);\r\n          setcouponId(response.data.data.coupon_id);\r\n          setcouponredeemed(false);\r\n        }\r\n      }\r\n    } else if (response.data.status == \"201\") {\r\n      var amount = 0;\r\n      setcouponisapplied(false);\r\n      setcouponredeemed(true);\r\n      setcouponamount(amount);\r\n\r\n      setcouponredeemedmessage(response.data.message);\r\n    }\r\n    console.log(\"response of redeem\", setamountaftercouponapplied);\r\n\r\n    setdraweropen(false);\r\n    setdata({ ...state, displayloader: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {restrict ? (\r\n        <>\r\n          <RestrictUser />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <AppHeader />\r\n          {data.displayloader ? <LoadingBar /> : null}\r\n          <div\r\n            className='container margin_60_35'\r\n            style={{\r\n              transform: \"none\",\r\n\r\n              marginTop: \"50px\",\r\n            }}\r\n          >\r\n            <div className='row' style={{ transform: \"none\" }}>\r\n              <div\r\n                className='col-lg-5 hide-on-desktop'\r\n                id='sidebar'\r\n                style={{\r\n                  position: \"relative\",\r\n                  overflow: \"visible\",\r\n                  boxSizing: \"border-box\",\r\n                  minHeight: \"1px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className='theiaStickySidebar'\r\n                  style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingBottom: \"1px\",\r\n                    position: \"static\",\r\n                    transform: \"none\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    id='cart-box'\r\n                    style={{\r\n                      backgroundColor: \"#eae8ed\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"20px\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: \"22px\",\r\n                        fontWeight: \"700\",\r\n                        color: \"black\",\r\n                      }}\r\n                    >\r\n                      Your Orders{\" \"}\r\n                      <span style={{ color: \"#666171\" }}>\r\n                        ( {menu.cart.length} items )\r\n                      </span>\r\n                    </p>\r\n                    <table\r\n                      className='table table_summary'\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <tbody>\r\n                        {menu.cart.map((val) => {\r\n                          if (val.isHappyHourActive) {\r\n                            const result = isHappyHourStillActive(\r\n                              val,\r\n                              menu.restaurantInfo.timezone\r\n                            );\r\n                            console.log(\"items in itemlist\", val);\r\n\r\n                            var isStillActive = result.isActive;\r\n                            if (isStillActive) {\r\n                              refIndex++;\r\n                              setTimer(result.distance, timeOutRef[refIndex]);\r\n                            }\r\n                          }\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td style={{ width: \"37%\" }}>\r\n                                  <div\r\n                                    style={{\r\n                                      marginTop: \"5px\",\r\n                                      fontSize: \"15px\",\r\n                                      color: \"black\",\r\n                                    }}\r\n                                  >\r\n                                    <b>{val.name}</b>\r\n                                    <br />\r\n                                    {val.modifiers ? (\r\n                                      <>\r\n                                        <div style={{ fontSize: \"12px\" }}>\r\n                                          <RenderModifiers\r\n                                            modifier={val.modifiers}\r\n                                          />\r\n                                        </div>\r\n                                      </>\r\n                                    ) : null}\r\n\r\n                                    {val.productType == \"Pizza\" ? (\r\n                                      <>\r\n                                        <p\r\n                                          className='text-pizzamodal'\r\n                                          style={{\r\n                                            marginTop: \"10px\",\r\n                                            cursor: \"pointer\",\r\n                                            fontSize: \"10px\",\r\n                                            color: \"black\",\r\n                                          }}\r\n                                          onClick={() => showPizzaDetails(val)}\r\n                                        >\r\n                                          view details\r\n                                        </p>\r\n                                      </>\r\n                                    ) : null}\r\n                                  </div>\r\n                                  <br />\r\n                                </td>\r\n                                <td\r\n                                  className='qty-table'\r\n                                  style={{ width: \"30%\" }}\r\n                                >\r\n                                  <div className='main-qty'>\r\n                                    <div\r\n                                      className='plus'\r\n                                      onClick={() => handleAddItem(val)}\r\n                                    >\r\n                                      +\r\n                                    </div>\r\n                                    <div\r\n                                      className='minus'\r\n                                      onClick={() => handleRemoveItem(val)}\r\n                                    >\r\n                                      -\r\n                                    </div>\r\n                                    <div className='qty'>{val.qty}</div>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div\r\n                                    style={{\r\n                                      marginTop: \"5px\",\r\n                                      fontSize: \"15px\",\r\n                                      color: \"#bd1e44\",\r\n                                      fontWeight: \"600\",\r\n                                    }}\r\n                                  >\r\n                                    <span className='float-right'>\r\n                                      {\" \"}\r\n                                      {`${menu.restaurantInfo.monetary_symbol}`}\r\n                                      {` ${truncateDecimal(\r\n                                        getItemPrice(val, isStillActive)\r\n                                      )}`}\r\n                                    </span>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                    <table className='table table_summary'>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <div\r\n                              className='parent-textarea'\r\n                              style={{ height: \"51px\" }}\r\n                            >\r\n                              <textarea\r\n                                onChange={(e) => handleComments(e)}\r\n                                maxLength='140'\r\n                                className='textarea-class'\r\n                                placeholder='Any suggestions for restro ?'\r\n                              ></textarea>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <hr />\r\n\r\n                    {menu.coupons ? (\r\n                      <div\r\n                        className='coupon-container'\r\n                        onClick={() => setdraweropen(true)}\r\n                      >\r\n                        <p className='coupon-text'>Apply Coupon</p>\r\n                      </div>\r\n                    ) : null}\r\n                    <SwipeableDrawer\r\n                      anchor={\"right\"}\r\n                      open={draweropen}\r\n                      onClose={() => setdraweropen(false)}\r\n                      onOpen={() => {}}\r\n                    >\r\n                      <div className={classes.list}>\r\n                        <div style={{ marginTop: \"20%\" }}>\r\n                          <h3\r\n                            style={{\r\n                              marginLeft: \"40px\",\r\n                              color: \"black\",\r\n                              fontSize: \"23px\",\r\n                              fontWeight: \"700\",\r\n                            }}\r\n                          >\r\n                            Available Coupons{\" \"}\r\n                            <CloseIcon\r\n                              onClick={() => setdraweropen(false)}\r\n                              style={{\r\n                                float: \"right\",\r\n                                marginRight: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </h3>\r\n\r\n                          {menu.coupons\r\n                            ? menu.coupons.map((coupon) => {\r\n                                var valid_from = moment(\r\n                                  coupon.date_start\r\n                                ).format(\"MMMM Do YYYY\");\r\n                                var valid_to = moment(coupon.date_end).format(\r\n                                  \"MMMM Do YYYY\"\r\n                                );\r\n                                console.log(\"valid from date\", valid_from);\r\n                                return (\r\n                                  <>\r\n                                    <div className='coupon-code-container'>\r\n                                      <div>\r\n                                        <div>\r\n                                          <div className='coupon-code-parent'>\r\n                                            <p className='ccode-text'>\r\n                                              {coupon.coupon_name}\r\n                                            </p>\r\n                                          </div>\r\n                                          <br />\r\n                                          <div className='coupon-code-border'>\r\n                                            <div className='coupon-img'></div>\r\n                                            <div className='coupon-text-1'>\r\n                                              Description For Future use\r\n                                            </div>\r\n                                            <div className='coupon-text-2'>\r\n                                              coupon is valid from {valid_from}{\" \"}\r\n                                              to {valid_to}\r\n                                            </div>\r\n                                            <button\r\n                                              className='apply-coupon-btn'\r\n                                              onClick={() =>\r\n                                                redeemCoupon(\r\n                                                  coupon.code,\r\n                                                  coupon.coupon_id\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              APPLY COUPON\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <br />\r\n                                  </>\r\n                                );\r\n                              })\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </SwipeableDrawer>\r\n\r\n                    <table className='table table_summary'>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style={{ fontWeight: \"700\", color: \"black\" }}>\r\n                            Subtotal{\" \"}\r\n                            <span className='float-right'>{`${\r\n                              menu.restaurantInfo.monetary_symbol\r\n                            } ${getSubTotal()}`}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{ fontWeight: \"700\", color: \"black\" }}>\r\n                            Taxes{\" \"}\r\n                            <span className='float-right'>{`${\r\n                              menu.restaurantInfo.monetary_symbol\r\n                            } ${getSubTaxTotal()}`}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{ fontWeight: \"700\", color: \"black\" }}>\r\n                            Delivery Charges\r\n                            <span className='float-right'>{`${menu.restaurantInfo.monetary_symbol} ${user.delivery_cost}  `}</span>\r\n                          </td>\r\n                        </tr>\r\n\r\n                        {couponisapplied ? (\r\n                          <>\r\n                            <tr>\r\n                              <td\r\n                                className='total'\r\n                                style={{\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"750\",\r\n                                  color: \"#25A09E\",\r\n                                }}\r\n                              >\r\n                                {couponappliedname} Offer\r\n                                <span className='float-right'>\r\n                                  - {menu.restaurantInfo.monetary_symbol}{\" \"}\r\n                                  {couponamount}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <br />\r\n                          </>\r\n                        ) : null}\r\n\r\n                        {couponredeemed ? (\r\n                          <>\r\n                            <tr>\r\n                              <td\r\n                                className='total'\r\n                                style={{\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"750\",\r\n                                  color: \"red\",\r\n                                }}\r\n                              >\r\n                                {couponredeemedmessage} !\r\n                              </td>\r\n                            </tr>\r\n                            <br />\r\n                          </>\r\n                        ) : null}\r\n\r\n                        <tr>\r\n                          <td\r\n                            className='total'\r\n                            style={{ fontWeight: \"700\", color: \"black\" }}\r\n                          >\r\n                            TOTAL{\" \"}\r\n                            <span className='float-right'>{`${\r\n                              menu.restaurantInfo.monetary_symbol\r\n                            } ${getBillAmount()}`}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <br />\r\n                        {savedAmount ? (\r\n                          <>\r\n                            <tr>\r\n                              <div\r\n                                className='savings'\r\n                                style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                              >\r\n                                <p\r\n                                  className='para-savings'\r\n                                  style={{ margin: \"auto\" }}\r\n                                >\r\n                                  YOU SAVED{\" \"}\r\n                                  {` ${savedAmount} ${menu.restaurantInfo.monetary_symbol}`}{\" \"}\r\n                                  ON THE BILL\r\n                                </p>\r\n                              </div>\r\n                            </tr>\r\n                          </>\r\n                        ) : null}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-lg-7'>\r\n                <PaymentForm\r\n                  comm={comm}\r\n                  onHandleCheckout={handleCheckout}\r\n                  deliveryCharges={getDeliveryCharges}\r\n                />\r\n              </div>\r\n              <div\r\n                className='col-lg-5 hide-on-mobile'\r\n                id='sidebar'\r\n                style={{\r\n                  position: \"relative\",\r\n                  overflow: \"visible\",\r\n                  boxSizing: \"border-box\",\r\n                  minHeight: \"1px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className='theiaStickySidebar'\r\n                  style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingBottom: \"1px\",\r\n                    position: \"static\",\r\n                    transform: \"none\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    id='cart-box'\r\n                    style={{\r\n                      backgroundColor: \"#eae8ed\",\r\n                      width: \"80%\",\r\n                      borderRadius: \"20px\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: \"22px\",\r\n                        fontWeight: \"700\",\r\n                        color: \"black\",\r\n                      }}\r\n                    >\r\n                      Your Orders{\" \"}\r\n                      <span style={{ color: \"#666171\" }}>\r\n                        ( {menu.cart.length} items )\r\n                      </span>\r\n                    </p>\r\n                    <table\r\n                      className='table table_summary'\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <tbody>\r\n                        {menu.cart.map((val) => {\r\n                          if (val.isHappyHourActive) {\r\n                            const result = isHappyHourStillActive(\r\n                              val,\r\n                              menu.restaurantInfo.timezone\r\n                            );\r\n                            console.log(\"items in itemlist\", val);\r\n\r\n                            var isStillActive = result.isActive;\r\n                            if (isStillActive) {\r\n                              refIndex++;\r\n                              setTimer(result.distance, timeOutRef[refIndex]);\r\n                            }\r\n                          }\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td style={{ width: \"37%\" }}>\r\n                                  <div\r\n                                    style={{\r\n                                      marginTop: \"5px\",\r\n                                      fontSize: \"15px\",\r\n                                      color: \"black\",\r\n                                    }}\r\n                                  >\r\n                                    <b>{val.name}</b>\r\n                                    <br />\r\n                                    {val.modifiers ? (\r\n                                      <>\r\n                                        <div style={{ fontSize: \"12px\" }}>\r\n                                          <RenderModifiers\r\n                                            modifier={val.modifiers}\r\n                                          />\r\n                                        </div>\r\n                                      </>\r\n                                    ) : null}\r\n\r\n                                    {val.productType == \"Pizza\" ? (\r\n                                      <>\r\n                                        <p\r\n                                          className='text-pizzamodal'\r\n                                          style={{\r\n                                            marginTop: \"10px\",\r\n                                            cursor: \"pointer\",\r\n                                            fontSize: \"10px\",\r\n                                            color: \"black\",\r\n                                          }}\r\n                                          onClick={() => showPizzaDetails(val)}\r\n                                        >\r\n                                          view details\r\n                                        </p>\r\n                                      </>\r\n                                    ) : null}\r\n                                  </div>\r\n                                  <br />\r\n                                </td>\r\n                                <td\r\n                                  className='qty-table'\r\n                                  style={{ width: \"30%\" }}\r\n                                >\r\n                                  <div className='main-qty'>\r\n                                    <div\r\n                                      className='plus'\r\n                                      onClick={() => handleAddItem(val)}\r\n                                    >\r\n                                      +\r\n                                    </div>\r\n                                    <div\r\n                                      className='minus'\r\n                                      onClick={() => handleRemoveItem(val)}\r\n                                    >\r\n                                      -\r\n                                    </div>\r\n                                    <div className='qty'>{val.qty}</div>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div\r\n                                    style={{\r\n                                      marginTop: \"5px\",\r\n                                      fontSize: \"15px\",\r\n                                      color: \"#bd1e44\",\r\n                                      fontWeight: \"600\",\r\n                                    }}\r\n                                  >\r\n                                    <span className='float-right'>\r\n                                      {\" \"}\r\n                                      {`${menu.restaurantInfo.monetary_symbol}`}\r\n                                      {` ${truncateDecimal(\r\n                                        getItemPrice(val, isStillActive)\r\n                                      )}`}\r\n                                    </span>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                    <table className='table table_summary'>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <div\r\n                              className='parent-textarea'\r\n                              style={{ height: \"51px\" }}\r\n                            >\r\n                              <textarea\r\n                                onChange={(e) => handleComments(e)}\r\n                                maxLength='140'\r\n                                className='textarea-class'\r\n                                placeholder='Any suggestions for restro ?'\r\n                              ></textarea>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n\r\n                    {menu.coupons.length >= 1 ? (\r\n                      <div\r\n                        className='coupon-container'\r\n                        onClick={() => setdraweropen(true)}\r\n                      >\r\n                        <p className='coupon-text'>Apply Coupon</p>\r\n                      </div>\r\n                    ) : null}\r\n                    <SwipeableDrawer\r\n                      anchor={\"right\"}\r\n                      open={draweropen}\r\n                      onClose={() => setdraweropen(false)}\r\n                      onOpen={() => {}}\r\n                    >\r\n                      <div className={classes.list}>\r\n                        <div style={{ marginTop: \"20%\" }}>\r\n                          <h3\r\n                            style={{\r\n                              marginLeft: \"40px\",\r\n                              color: \"black\",\r\n                              fontSize: \"23px\",\r\n                              fontWeight: \"700\",\r\n                            }}\r\n                          >\r\n                            Available Coupons{\" \"}\r\n                            <CloseIcon\r\n                              onClick={() => setdraweropen(false)}\r\n                              style={{\r\n                                float: \"right\",\r\n                                marginRight: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </h3>\r\n\r\n                          {menu.coupons\r\n                            ? menu.coupons.map((coupon) => {\r\n                                var valid_from = moment(\r\n                                  coupon.date_start\r\n                                ).format(\"MMMM Do YYYY\");\r\n                                var valid_to = moment(coupon.date_end).format(\r\n                                  \"MMMM Do YYYY\"\r\n                                );\r\n                                console.log(\"valid from date\", valid_from);\r\n                                return (\r\n                                  <>\r\n                                    <div className='coupon-code-container'>\r\n                                      <div>\r\n                                        <div>\r\n                                          <div className='coupon-code-parent'>\r\n                                            <p className='ccode-text'>\r\n                                              {coupon.coupon_name}\r\n                                            </p>\r\n                                          </div>\r\n                                          <br />\r\n                                          <div className='coupon-code-border'>\r\n                                            <div className='coupon-img'></div>\r\n                                            <div className='coupon-text-1'>\r\n                                              Description For Future use\r\n                                            </div>\r\n                                            <div className='coupon-text-2'>\r\n                                              coupon is valid from {valid_from}{\" \"}\r\n                                              to {valid_to}\r\n                                            </div>\r\n                                            <button\r\n                                              className='apply-coupon-btn'\r\n                                              onClick={() =>\r\n                                                redeemCoupon(\r\n                                                  coupon.code,\r\n                                                  coupon.coupon_id\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              APPLY COUPON\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <br />\r\n                                  </>\r\n                                );\r\n                              })\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </SwipeableDrawer>\r\n\r\n                    <hr />\r\n                    <table className='table table_summary'>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style={{ fontWeight: \"700\", color: \"black\" }}>\r\n                            Subtotal{\" \"}\r\n                            <span className='float-right'>{`${\r\n                              menu.restaurantInfo.monetary_symbol\r\n                            } ${getSubTotal()}`}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{ fontWeight: \"700\", color: \"black\" }}>\r\n                            Taxes{\" \"}\r\n                            <span className='float-right'>{`${\r\n                              menu.restaurantInfo.monetary_symbol\r\n                            } ${getSubTaxTotal()}`}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{ fontWeight: \"700\", color: \"black\" }}>\r\n                            Delivery Charges\r\n                            <span className='float-right'>{`${menu.restaurantInfo.monetary_symbol} ${user.delivery_cost}  `}</span>\r\n                          </td>\r\n                        </tr>\r\n\r\n                        {couponisapplied ? (\r\n                          <>\r\n                            <tr>\r\n                              <td\r\n                                className='total'\r\n                                style={{\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"750\",\r\n                                  color: \"#25A09E\",\r\n                                }}\r\n                              >\r\n                                {couponappliedname} Offer\r\n                                <span className='float-right'>\r\n                                  - {menu.restaurantInfo.monetary_symbol}{\" \"}\r\n                                  {couponamount}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <br />\r\n                          </>\r\n                        ) : null}\r\n\r\n                        {couponredeemed ? (\r\n                          <>\r\n                            <tr>\r\n                              <td\r\n                                className='total'\r\n                                style={{\r\n                                  fontSize: \"14px\",\r\n                                  fontWeight: \"750\",\r\n                                  color: \"red\",\r\n                                }}\r\n                              >\r\n                                {couponredeemedmessage} !\r\n                              </td>\r\n                            </tr>\r\n                            <br />\r\n                          </>\r\n                        ) : null}\r\n\r\n                        <tr>\r\n                          <td\r\n                            className='total'\r\n                            style={{ fontWeight: \"700\", color: \"black\" }}\r\n                          >\r\n                            TOTAL{\" \"}\r\n                            <span className='float-right'>{`${\r\n                              menu.restaurantInfo.monetary_symbol\r\n                            } ${getBillAmount()}`}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <br />\r\n                        {savedAmount ? (\r\n                          <>\r\n                            <tr>\r\n                              <div\r\n                                className='savings'\r\n                                style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                              >\r\n                                <p\r\n                                  className='para-savings'\r\n                                  style={{ margin: \"auto\" }}\r\n                                >\r\n                                  YOU SAVED{\" \"}\r\n                                  {` ${savedAmount} ${menu.restaurantInfo.monetary_symbol}`}{\" \"}\r\n                                  ON THE BILL\r\n                                </p>\r\n                              </div>\r\n                            </tr>\r\n                          </>\r\n                        ) : null}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Checkout;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\WaitingOverlay\\WaitingOverlay.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\utils.js",["789","790","791","792","793","794","795","796","797","798"],"import moment from \"moment\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst DELIVERY_TYPE = {\r\n  DEFAULT: \"Delivery\",\r\n  TAKE_AWAY: \"PickUp\",\r\n  HOME_DELIVERY: \"Delivery\",\r\n  EAT_IN: \"EatIn\",\r\n};\r\n\r\nfunction getFormmatedItems(items, restaurant) {\r\n  console.log(\"items in formatlikst\", items);\r\n\r\n  return items.map((item) => {\r\n    let forced_modifiers = \"\";\r\n    const {\r\n      is_localtax: isLocal,\r\n      is_othertax: isOther,\r\n      is_vat: isVat,\r\n      is_servicetax: isService,\r\n      modifiers: modifiers,\r\n    } = item;\r\n\r\n    forced_modifiers = modifiers;\r\n    console.log(\"map modi\", forced_modifiers);\r\n\r\n    // var Fm = [];\r\n    // Fm = modifiers;\r\n    let detours = {};\r\n    let detourLength = [];\r\n    let is_detour = \"\";\r\n    let jsonDetour = \"\";\r\n    if (forced_modifiers !== null) {\r\n      const { forcedModifier: Fm } = forced_modifiers;\r\n      Fm.map((fmi) => {\r\n        if (fmi.detour) {\r\n          detourLength.push(fmi.detour);\r\n          detours[fmi.id] = fmi.detour;\r\n        }\r\n      });\r\n      if (detourLength.length > 0) {\r\n        // array exists and is not empty\r\n        // console.log(\"entering valid detourLength\");\r\n        is_detour = 1;\r\n        jsonDetour = JSON.stringify(detours);\r\n      } else {\r\n        is_detour = 0;\r\n        jsonDetour = \"\";\r\n      }\r\n    }\r\n\r\n    //? Assigning is_detour\r\n\r\n    // console.log(\"detoursOp\",jsonDetour, \"  is_detour: \", is_detour, \" detourLength \",detourLength.length, detourLength )\r\n    console.log(item.qty, typeof item.qty);\r\n    return {\r\n      ...item,\r\n      tax:\r\n        (item.happyHourItem\r\n          ? Number(item.happyHourItem.tax)\r\n          : Number(item.tax)) / Number(item.qty),\r\n      subTotal: item.happyHourItem\r\n        ? item.happyHourItem.grandTotal\r\n        : item.subTotal,\r\n      happy_hour_id: item.happyHourDetail\r\n        ? item.happyHourDetail[\"happy_hours_id\"]\r\n        : \"\",\r\n      happy_hour_amount: item.happyHourItem\r\n        ? Math.abs(\r\n            Number(item.grandTotal) - Number(item.happyHourItem.subTotal)\r\n          )\r\n        : 0,\r\n      productId: item.id,\r\n      comments: \"0\",\r\n      type: item.productType,\r\n      tax_total: item.happyHourItem ? item.happyHourItem.tax : item.tax,\r\n      tax_sub_total: item.happyHourItem ? item.happyHourItem.tax : item.tax,\r\n      timestamp: new Date().getTime().toString(),\r\n      ticket_status: \"New\",\r\n      qty: item.happyHourItem\r\n        ? Number(item.happyHourItem.qty)\r\n        : Number(item.qty),\r\n      price: item.subTotal / item.qty,\r\n      service_tax: Number(isService) ? restaurant[\"service_tax\"] : 0,\r\n      vat: Number(isVat) ? restaurant[\"vat\"] : 0,\r\n      local_tax: Number(isLocal) ? restaurant[\"local_tax\"] : 0,\r\n      other_tax: Number(isOther) ? restaurant[\"other_tax\"] : 0,\r\n      detours: jsonDetour,\r\n      is_detour: is_detour,\r\n    };\r\n  });\r\n}\r\n\r\nexport function getFormattedRequestPayload(\r\n  user,\r\n  selectedPickUpTime,\r\n  restaurant,\r\n  delivery,\r\n  orderId,\r\n  subTotal,\r\n  subTaxTotal,\r\n  grandTotal,\r\n  cartList,\r\n  distance,\r\n  savedAmount,\r\n  deliveryCharges,\r\n  phone_code,\r\n  delivery_time,\r\n  couponId,\r\n  couponAmount\r\n) {\r\n  // const menu = useSelector((state) => state.menu);\r\n  console.log(\"arguments\", cartList);\r\n  console.log(\"user in utils\", user);\r\n\r\n  console.log(\"coupon id is\", couponId, couponAmount);\r\n\r\n  //const user1 = useSelector((state) => state.user);\r\n\r\n  const formattedItems = getFormmatedItems(cartList, restaurant);\r\n  console.log(\"delivery in utils\", delivery);\r\n\r\n  const localTaxItem = formattedItems.find((item) => item[\"local_tax\"] !== 0);\r\n  const serviceTaxItem = formattedItems.find(\r\n    (item) => item[\"service_tax\"] !== 0\r\n  );\r\n  const otherTaxItem = formattedItems.find((item) => item[\"other_tax\"] !== 0);\r\n  const vatTaxItem = formattedItems.find((item) => item[\"vat\"] !== 0);\r\n  var moment = require(\"moment-timezone\");\r\n\r\n  var local_time = moment\r\n    .tz(moment(), `${restaurant.timezone}`)\r\n\r\n    .format(\"HH:mm\");\r\n  console.log(\"rest in util\", restaurant);\r\n  const payload = {\r\n    ...user,\r\n    ...restaurant,\r\n    order_id: orderId,\r\n    rest_id: restaurant.restaurant_id,\r\n    delivery_date: moment().format(\"yyyy-MM-DD\"),\r\n    order_date: moment().format(\"yyyy-MM-DD\"),\r\n    order_time: moment.tz(moment(), `${restaurant.timezone}`).format(\"HH:mm\"),\r\n    is_online: \"1\",\r\n    payment_method: delivery.paymentMethod,\r\n    comments: delivery.comments,\r\n    order_status: \"New\",\r\n    type: \"open\",\r\n    member_id: user.user.clientId,\r\n    firstname: user.user.firstName,\r\n    lastname: user.user.lastName,\r\n    email: user.user.email,\r\n    mobile: user.user.mobile,\r\n    delivery_phone: user.user.mobile,\r\n    total: subTotal,\r\n    tax: subTaxTotal,\r\n    grand_total: grandTotal,\r\n    paid: \"0\",\r\n    payment_status: \"\",\r\n    transaction_id: \"\",\r\n    happy_hours_discount: savedAmount,\r\n    Items: formattedItems,\r\n    service_tax: serviceTaxItem ? serviceTaxItem[\"service_tax\"] : 0,\r\n    vat: vatTaxItem ? vatTaxItem[\"vat\"] : 0,\r\n    local_tax: localTaxItem ? localTaxItem[\"local_tax\"] : 0,\r\n    other_tax: otherTaxItem ? otherTaxItem[\"other_tax\"] : 0,\r\n    comments: delivery.comments,\r\n    delivery_cost: deliveryCharges,\r\n    phone_code: phone_code,\r\n    coupon_id: couponId,\r\n    savings: couponAmount,\r\n  };\r\n\r\n  console.log(\"formatted request\", savedAmount);\r\n  console.log(\"Formatted Request Payload\", payload);\r\n\r\n  var x;\r\n  var u = Array.isArray(user.selectedAddress);\r\n  console.log(\"uyuuu is\", u);\r\n\r\n  if (delivery.deliveryType == DELIVERY_TYPE.DEFAULT) {\r\n    if (user.selectedAddress.state) {\r\n      x = user.selectedAddress.state;\r\n    } else if (Array.isArray(user.selectedAddress)) {\r\n      x = user.selectedAddress[0].state;\r\n    } else {\r\n      x = \"\";\r\n    }\r\n  }\r\n\r\n  return delivery.deliveryType !== DELIVERY_TYPE.TAKE_AWAY &&\r\n    delivery.deliveryType !== DELIVERY_TYPE.EAT_IN\r\n    ? {\r\n        ...payload,\r\n\r\n        street:\r\n          delivery.selectedAddress.address1 +\r\n            delivery.selectedAddress.address2 ||\r\n          delivery.selectedAddress[0].address1 +\r\n            delivery.selectedAddress[0].address2,\r\n        delivery_city:\r\n          user.selectedAddress.city || user.selectedAddress[0].city,\r\n        delivery_state: x,\r\n        // user.selectedAddress.state || user.selectedAddress[0].state,\r\n        delivery_country:\r\n          user.selectedAddress.country || user.selectedAddress[0].country,\r\n        delivery_zipcode:\r\n          user.selectedAddress.zipcode || user.selectedAddress[0].zipcode,\r\n        delivery_mobile: user.user.mobile,\r\n        mobile: user.user.mobile,\r\n        delivery_phone: user.user.mobile,\r\n        // mobile: user.selectedAddress.phone || user.selectedAddress[0].phone,\r\n        // delivery_phone:\r\n        //   user.selectedAddress.phone || user.selectedAddress[0].phone,\r\n        delivery_option: delivery.deliveryType.toLowerCase(),\r\n        order_location: null,\r\n        time_for_delivery: delivery.DeliveryTime,\r\n        delivery_time: delivery.DeliveryTime,\r\n        delivery_cost: deliveryCharges,\r\n        phone: \"\",\r\n        coupon_id: couponId,\r\n        savings: couponAmount,\r\n      }\r\n    : {\r\n        ...payload,\r\n        street: \"\",\r\n        delivery_city: \"\",\r\n        delivery_state: \"\",\r\n        delivery_country: \"\",\r\n        delivery_zipcode: \"\",\r\n        delivery_option: delivery.deliveryType.toLowerCase(),\r\n        order_location: null,\r\n        time_for_delivery: delivery.DeliveryTime,\r\n        delivery_time: delivery.DeliveryTime,\r\n        distance: \"\",\r\n        phone: user.user.mobile,\r\n        delivery_phone: user.user.mobile,\r\n        coupon_id: couponId,\r\n        savings: couponAmount,\r\n      };\r\n}\r\n//console.log(\"check\", getFormattedRequestPayload());\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentForm.jsx",["799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../Checkout/Checkout.css\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  setDeliveryCost,\r\n  setSelectedAddress,\r\n  setIsTakeAway,\r\n  setPickupTime,\r\n  setDeliveryTime,\r\n  setDefaultAddress,\r\n  setDeliveryDistance,\r\n} from \"../../state-management/user/actions\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport { NaturePeopleOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Address from \"../ManageAddress/Address\";\r\nimport { fetchAddressesList } from \"../../state-management/user/asyncActions\";\r\nimport GoogleMap from \"../GoogleMap/GoogleMap\";\r\nimport Geocode from \"react-geocode\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport { useTheme } from \"@material-ui/core\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\nimport DeliveryType from \"./DeliveryType\";\r\nimport TakeAddress from \"./TakeAddress\";\r\nimport SelectTimingsForDelivery from \"./SelectTimingsForDelivery\";\r\nimport SelectTimingsForPickup from \"./SelectTimingsForPickup\";\r\nGeocode.setApiKey(\"AIzaSyCMTj6FEwu3Kh0tSdgp6hh4QOKgIJF74rs\");\r\n\r\nconst PaymentForm = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const [showpickup, setshowpickup] = useState(false);\r\n  const [getOrderType, setgetOrderType] = useState();\r\n  const [getTime, setgetTime] = useState();\r\n  const [getAddress, setgetAddress] = useState();\r\n  const [listofpayment, setlistofpayment] = useState([]);\r\n  const [getpaymentoption, setgetpaymentoption] = useState();\r\n  const [deliveryCharges, setdeliveryCharges] = useState();\r\n  const [renderDeliveryType, setrenderDeliveryType] = useState(false);\r\n  const [renderTakeAddress, setrenderTakeAddress] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [frompayment, setfrompayment] = useState(false);\r\n\r\n  // useEffect(async () => {\r\n  //   console.log(\"not from checkout\", frompayment);\r\n  //   if (frompayment) {\r\n  //     setTimeout(async () => {\r\n  //       const { payload } = await dispatch(\r\n  //         fetchAddressesList(user.user.clientId)\r\n  //       );\r\n  //       console.log(\"payload after 2 seconds\", payload);\r\n  //     }, 2000);\r\n  //   }\r\n  // }, [frompayment]);\r\n\r\n  // useEffect(() => {\r\n  //   setdata({ ...data, comments: props.comm });\r\n  // }, [props.comm]);\r\n  // const [data, setdata] = useState({\r\n  //   // deliveryType: user.isTakeAway ? DELIVERY_TYPE.TAKE_AWAY : \"\",\r\n  //   // instead of \"\" --> DELIVERY_TYPE.HOME_DELIVERY\r\n  //   selectedAddress: user.selectedAddress,\r\n  //   delivery_option: false,\r\n  //   //selectedAddress: \"\",\r\n  //   //changeaddress: [],\r\n\r\n  //   isAddressesFetched: false,\r\n  //   paymentMethod: \"\",\r\n  //   booleanforpaymentmethod: 0,\r\n  //   // I wonder why we need these 3 states - this needs a lot of refactoring\r\n  //   openingBusinesHours: main.opening,\r\n  //   closingBusinesHours: main.closing,\r\n  //   businessHours: main.businessHour,\r\n  //   isTakeAway: user.isTakeAway,\r\n  //   orderButtonClicked: false,\r\n  //   addresses: [],\r\n  //   paymentOptions: [],\r\n  //   deliveryCharges: \"\",\r\n  //   // hasDeliveryOption: false,\r\n  //   // hasEatInOption: false,\r\n  //   // hasPickupOption: false,\r\n  //   // pickupTime: settime(),\r\n  //   // deliveryTime: settime(),\r\n  //   checkingChangeAddress: false,\r\n  //   showChangeAddress: false,\r\n\r\n  //   address_error: \"\",\r\n  // });\r\n\r\n  console.log(\"props comments\", props.comm);\r\n\r\n  // const initialize = async () => {\r\n  //   // check if user logged in, else return\r\n  //   if (!user.user.isUserLoggedIn) {\r\n  //     return;\r\n  //   }\r\n  //   // this.props.setPickupTime(this.state.pickupTime);\r\n  //   fetchAddresses();\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // dispatch(setSelectedAddress(user.defaultAddress));\r\n    // const time = new Date().toLocaleTimeString();\r\n\r\n    const deliveryOptions = !(\r\n      main.selectedRestaurant.order_option === \"\" ||\r\n      main.selectedRestaurant.order_option === null ||\r\n      main.selectedRestaurant.order_option === undefined\r\n    );\r\n\r\n    setlistofpayment(main.selectedRestaurant.payment_option_ids.split(\",\"));\r\n    dispatch(setDeliveryCost(0));\r\n    // let x = JSON.parse(window.localStorage.getItem(\"deliveryType\"));\r\n    // let y = JSON.parse(window.localStorage.getItem(\"checkoutState\"));\r\n    let z = JSON.parse(window.localStorage.getItem(\"paymentType\"));\r\n\r\n    // if (x) {\r\n    //   setrenderDeliveryType(true);\r\n    // } else if (y) {\r\n    //   setrenderTakeAddress(true);\r\n    // } else\r\n    if (z) {\r\n      setgetpaymentoption(z);\r\n    }\r\n  }, []);\r\n\r\n  const paymentOptionChange = (e) => {\r\n    setgetpaymentoption(e);\r\n    localStorage.setItem(\"paymentType\", JSON.stringify(e));\r\n  };\r\n\r\n  const onClick = () => {\r\n    let data = {\r\n      deliveryType: getOrderType,\r\n      selectedAddress: getAddress,\r\n      paymentMethod: getpaymentoption,\r\n      comments: props.comm,\r\n      PickupTime: getTime,\r\n      DeliveryTime: getTime,\r\n    };\r\n    console.log(\"new data from child in on click\", data);\r\n    if (!getOrderType) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: \"Please select Order Option\",\r\n      });\r\n    } else if (getOrderType == \"Delivery\" && !getAddress) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: \"Please select Atleast one address\",\r\n      });\r\n    } else if (!getpaymentoption) {\r\n      return notification[\"warning\"]({\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message: \"Please select payment method\",\r\n      });\r\n    } else if (main.isClosed) {\r\n      return notification[\"warning\"]({\r\n        description: \"Restaurant is closed\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message:\r\n          \"This restaurant is not taking any orders right now, please visit later\",\r\n      });\r\n    } else if (\r\n      getOrderType == \"Delivery\" &&\r\n      grandTotal < Number(main.selectedRestaurant.cost[\"min_order_amount\"])\r\n    ) {\r\n      return notification[\"warning\"]({\r\n        description: `Minimum amount required for delivery is ${menu.restaurantInfo.monetary_symbol} ${main.selectedRestaurant.cost[\"min_order_amount\"]}`,\r\n        message: \"Minimum amount for delivery did not meet\",\r\n        style: {\r\n          marginTop: \"90px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n      });\r\n    } else {\r\n      props.onHandleCheckout(data);\r\n    }\r\n  };\r\n\r\n  const getDisabledMinutes = () => {\r\n    let minutes = [];\r\n    for (let i = 0; i < moment().minute() + 30; i++) {\r\n      minutes.push(i);\r\n    }\r\n    return minutes;\r\n  };\r\n\r\n  // const handleChangeDefautAddress = async (address) => {\r\n  //   console.log(\"address in default address change\", address);\r\n  //   const lat = main.selectedRestaurant.lat;\r\n  //   const lon = main.selectedRestaurant.lon;\r\n\r\n  //   const response = await Geocode.fromAddress(address);\r\n\r\n  //   var geocoder = new window.google.maps.Geocoder();\r\n  //   var address = `${address.zipcode}`;\r\n\r\n  //   geocoder.geocode({ address: address }, function (results, status) {\r\n  //     var latitude = results[0].geometry.location.lat();\r\n  //     var longitude = results[0].geometry.location.lng();\r\n  //     console.log(\"geocoder\", latitude, results);\r\n  //   });\r\n\r\n  //   const { lat: customerLat, lng: customerLng } =\r\n  //     response.results[0].geometry.location;\r\n\r\n  //   console.log(\"in handleDefaut\", api);\r\n  //   // api.calculateDistance(\r\n  //   //   // {\r\n  //   //   //   lat,\r\n  //   //   //   lng: lon,\r\n  //   //   // },\r\n  //   //   // {\r\n  //   //   //   lat: customerLat,\r\n  //   //   //   lng: customerLng,\r\n  //   //   // },\r\n  //   //   address.address1,\r\n  //   //   address.city,\r\n  //   //   address.zipcode,\r\n  //   //   address.country,\r\n\r\n  //   //   handleChangeDistanceCalucationCallback\r\n  //   // );\r\n  // };\r\n\r\n  const grandTotal = Number(getGrandTotal());\r\n\r\n  function getGrandTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  const [handleadd, sethandleadd] = useState(false);\r\n\r\n  // useEffect(async () => {\r\n  //   if (handleadd) {\r\n  //     const { payload } = await dispatch(\r\n  //       fetchAddressesList(user.user.clientId)\r\n  //     );\r\n  //     console.log(\"payload in fetchadderss\", payload);\r\n\r\n  //     setadd({ ...add, addresses: payload.data });\r\n  //     sethandleadd(false);\r\n  //   }\r\n  // }, [handleadd]);\r\n\r\n  const [showAddres, setShowAddres] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"order type info\", getpaymentoption);\r\n  }, [getpaymentoption]);\r\n\r\n  return (\r\n    <>\r\n      <div className='box_style_2 delivery-container'>\r\n        <DeliveryType\r\n          showAddress={setShowAddres}\r\n          getordertype={setgetOrderType}\r\n          showPickup={setshowpickup}\r\n        />\r\n      </div>\r\n\r\n      {showAddres ? (\r\n        <TakeAddress getAddress={setgetAddress} getdc={setdeliveryCharges} />\r\n      ) : null}\r\n\r\n      {showpickup ? (\r\n        <SelectTimingsForPickup getpickuptime={setgetTime} />\r\n      ) : null}\r\n\r\n      {showAddres ? (\r\n        <SelectTimingsForDelivery getdeliverytime={setgetTime} />\r\n      ) : null}\r\n\r\n      <div className='box_style_2' style={{ marginTop: \"-30px\" }}>\r\n        <h2 className='delivery-head'>Payment method</h2>\r\n\r\n        <div className='payment-container'>\r\n          {listofpayment.map((val) => {\r\n            if (val == \"1\") {\r\n              return (\r\n                <>\r\n                  {/* <div className=\"payment_select\"> */}\r\n                  {/* <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"card\"\r\n                    value=\"1\"\r\n                    onChange={(e) => paymentOptionChange(\"1\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"card\">\r\n                    Pay With Card\r\n\r\n                     &nbsp; <CreditCardIcon />\r\n                  </label> */}\r\n\r\n                  <input\r\n                    className='check_payment'\r\n                    type='radio'\r\n                    name='payment'\r\n                    id='card'\r\n                    value='1'\r\n                    onChange={(e) => paymentOptionChange(\"1\")}\r\n                    checked={getpaymentoption == \"1\"}\r\n                  />\r\n\r\n                  <label\r\n                    className='payment-class'\r\n                    for='card'\r\n                    class='btn_radio_for_payment'\r\n                    style={{ whiteSpace: \"nowrap\" }}\r\n                  >\r\n                    Pay With Card\r\n                  </label>\r\n\r\n                  {/* </div> */}\r\n                </>\r\n              );\r\n            } else if (val == \"2\") {\r\n              return (\r\n                <>\r\n                  {/* <div className=\"payment_select\"> */}\r\n                  {/* <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"cashondelivery\"\r\n                    value=\"2\"\r\n                    onChange={(e) => paymentOptionChange(\"2\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"cashondelivery\">\r\n                    cash on delivery &nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label> */}\r\n\r\n                  <input\r\n                    className='check_payment'\r\n                    type='radio'\r\n                    name='payment'\r\n                    id='cashondelivery'\r\n                    value='2'\r\n                    onChange={(e) => paymentOptionChange(\"2\")}\r\n                    checked={getpaymentoption == \"2\"}\r\n                  />\r\n\r\n                  <label\r\n                    className='payment-class'\r\n                    for='cashondelivery'\r\n                    class='btn_radio_for_payment'\r\n                    style={{ whiteSpace: \"nowrap\" }}\r\n                  >\r\n                    cash on delivery\r\n                  </label>\r\n                  {/* </div> */}\r\n                </>\r\n              );\r\n            } else if (val == \"5\") {\r\n              return (\r\n                <>\r\n                  {/* <div className=\"payment_select\"> */}\r\n                  {/* <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"paywithpoints\"\r\n                    value=\"4\"\r\n                    onChange={(e) => paymentOptionChange(\"4\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"paywithpoints\">\r\n                    Open Banking &nbsp;\r\n                    <AccountBalanceIcon />\r\n                  </label> */}\r\n\r\n                  <input\r\n                    className='check_payment'\r\n                    type='radio'\r\n                    name='payment'\r\n                    id='paywithpoints'\r\n                    value='4'\r\n                    onChange={(e) => paymentOptionChange(\"4\")}\r\n                    checked={getpaymentoption == \"4\"}\r\n                  />\r\n\r\n                  <label\r\n                    className='payment-class'\r\n                    for='paywithpoints'\r\n                    class='btn_radio_for_payment'\r\n                    style={{ whiteSpace: \"nowrap\" }}\r\n                  >\r\n                    Open Banking\r\n                  </label>\r\n\r\n                  {/* <CreditCardIcon />\r\n                  <AccountBalanceIcon />\r\n                  <AccountBalanceWalletIcon /> */}\r\n\r\n                  {/* </div> */}\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        <div className='paymentform-btn-container'>\r\n          <Button\r\n            onClick={onClick}\r\n            style={{\r\n              backgroundColor: \"#5c48d2\",\r\n              color: \"white\",\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              textTransform: \"none\",\r\n              fontSize: \"17px\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            Proceed To Pay<strong>&nbsp;</strong>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PaymentForm;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\OrderSuccess\\OrderSuccess.jsx",["845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchMyOrderList,\r\n  fetchMyOrderDetails,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport moment from \"moment\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport \"./OrderSuccess.css\";\r\nimport icon from \"./dersucces-icon.png\";\r\nimport { clearMenuState } from \"../../state-management/menu/actions\";\r\nimport RestrictUser from \"../RestrictUser/RestrictUser\";\r\n\r\nconst OrderSuccess = () => {\r\n  const dispatch = useDispatch();\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const [restrict, setRestrict] = useState(false);\r\n  const [ordersession, setordersession] = useState();\r\n\r\n  const [state, setstate] = useState({\r\n    showOrderDetails: false,\r\n    loadingData: false,\r\n    showOverlay: false,\r\n    errorMessage: false,\r\n    requestSuccess: null,\r\n  });\r\n  var ordersList = [];\r\n  var ordersData = [];\r\n  const [orderCoompleteDetails, setorderCoompleteDetails] = useState({});\r\n  const [savedcouponamount, setsavedcouponamount] = useState();\r\n  const [waitfordata, setwaitfordata] = useState(true);\r\n  const [happyHour, sethappyHour] = useState();\r\n\r\n  const fetchdata = async () => {\r\n    setstate({ ...state, loadingData: true });\r\n    console.log(\"clientid\", user.user.clientId);\r\n    const response = await dispatch(fetchMyOrderList(user.user.clientId));\r\n    const { payload } = await response;\r\n    console.log(\"payload is\", payload);\r\n\r\n    setstate({ ...state, loadingData: false });\r\n    let dataSource = [];\r\n    if (payload.status == \"200\") {\r\n      //setstate({ ...state, ordersList: payload.data });\r\n      ordersList = payload.data;\r\n      console.log(\r\n        ordersList.filter(\r\n          (order) => order.restaurant_id === menu.restaurantInfo.restaurant_id\r\n        )\r\n      );\r\n      //console.log(\"orderList\", state.ordersList);\r\n\r\n      ordersList\r\n        .filter(\r\n          (order) => order.restaurant_id === menu.restaurantInfo.restaurant_id\r\n        )\r\n        .map((order, i) => {\r\n          let data = {};\r\n          data[\"key\"] = `${i}`;\r\n          data[\"order_no\"] = order.order_id;\r\n          data[\"order_date\"] = order.order_date;\r\n          data[\"paid\"] = order.paid === \"1\" ? \"Yes\" : \"No\";\r\n          data[\"status\"] = order.order_status;\r\n          // console.log(data);\r\n          dataSource.push(data);\r\n          // console.log(this.state.ordersData);\r\n        });\r\n      ordersData = dataSource;\r\n\r\n      var oid = ordersList[0].order_id;\r\n      console.log(\"orders data\", oid);\r\n      //setstate({ ...state, ordersData: dataSource });\r\n      //console.log(\"complete data\", state);\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    var order_session = \"\";\r\n    for (const entry of urlParams.entries()) {\r\n      order_session = entry[1].slice(\"30\");\r\n    }\r\n    console.log(\"order session in 78\", order_session);\r\n    const response_2 = await dispatch(fetchMyOrderDetails(order_session));\r\n    const { payload_again } = await response_2;\r\n\r\n    console.log(\"response_2 in ordersuccess\", response_2);\r\n\r\n    var i = 0;\r\n\r\n    if (response_2.payload.status == 200) {\r\n      //orderCoompleteDetails = response_2.payload.data;\r\n      setorderCoompleteDetails(response_2.payload.data[0]);\r\n      setsavedcouponamount(response_2.payload.data[0].savings);\r\n      sethappyHour(response.payload.data[0].happy_hours_discount);\r\n      dispatch(clearMenuState());\r\n      setwaitfordata(false);\r\n    } else if (response_2.payload.status == 201) {\r\n      setTimeout(async function () {\r\n        var order_session_for_card = \"\";\r\n        for (const entry of urlParams.entries()) {\r\n          order_session_for_card = entry[1].slice(\"30\");\r\n        }\r\n        console.log(\"after 20 seconds\", order_session_for_card);\r\n        const response_2_for_payments = await dispatch(\r\n          fetchMyOrderDetails(order_session_for_card)\r\n        );\r\n        setorderCoompleteDetails(response_2_for_payments.payload.data[0]);\r\n        setsavedcouponamount(response_2_for_payments.payload.data[0].savings);\r\n        dispatch(clearMenuState());\r\n        setwaitfordata(false);\r\n        var order_session_for_card = \"\";\r\n      }, 25000);\r\n    }\r\n    console.log(\"complete details\", orderCoompleteDetails);\r\n    var order_session = \"\";\r\n    console.log(\"order session in 89\", order_session);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user.user.isUserLoggedIn) {\r\n      setRestrict(true);\r\n    } else {\r\n      fetchdata();\r\n    }\r\n    localStorage.removeItem(\"paymentType\");\r\n    localStorage.removeItem(\"deliveryType\");\r\n    localStorage.removeItem(\"checkoutState\");\r\n    localStorage.removeItem(\"dtime\");\r\n    localStorage.removeItem(\"ptime\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"saved amount\", savedcouponamount);\r\n  }, [savedcouponamount]);\r\n\r\n  // useEffect(() => {\r\n\r\n  // }, [apicall]);\r\n\r\n  return (\r\n    <>\r\n      {restrict ? (\r\n        <RestrictUser />\r\n      ) : (\r\n        <>\r\n          {waitfordata ? (\r\n            <>\r\n              <p\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  marginTop: \"180px\",\r\n                  fontSize: \"30px\",\r\n                }}\r\n              >\r\n                Order Confirmed ! <br />\r\n                We are fetching your details Please Wait !\r\n              </p>\r\n              <div class='lds-roller-orderSuccess'>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <AppHeader />\r\n              <div className='container margin_60_35'>\r\n                {/* style={{ marginTop: \"20px\" }} */}\r\n                <div className='row justify-content-center'>\r\n                  <div className='col-md-6'>\r\n                    <div style={{ marginTop: \"80px\" }}>\r\n                      <img src={icon} style={{ height: \"400px\" }} />\r\n                      <div className='myorder-parent'>\r\n                        <p className='order-confirm-text'>Order confirmed !</p>\r\n\r\n                        <p className='hi-text'>Hi {user.user.firstName} !</p>\r\n                        <p className='hi-text-2'>Thanks for your order !</p>\r\n\r\n                        <p className='order-number-text'>\r\n                          Order Number : {orderCoompleteDetails.order_id}\r\n                        </p>\r\n\r\n                        {orderCoompleteDetails.products &&\r\n                          orderCoompleteDetails.products.map((currval) => {\r\n                            return (\r\n                              <>\r\n                                <div className='list-of-orders'>\r\n                                  <p className='list-of-order-text'>\r\n                                    {currval.product_name} &nbsp; x{\" \"}\r\n                                    {currval.quantity}\r\n                                  </p>\r\n                                  <p className='list-of-order-text2'>\r\n                                    {orderCoompleteDetails.currency}{\" \"}\r\n                                    {truncateDecimal(\r\n                                      Number(currval.price) +\r\n                                        Number(currval.tax)\r\n                                    )}\r\n                                  </p>\r\n                                </div>\r\n                                <hr style={{ marginTop: \"0px\" }} />\r\n                              </>\r\n                            );\r\n                          })}\r\n\r\n                        {savedcouponamount > 0 ? (\r\n                          <>\r\n                            <div className='list-of-orders'>\r\n                              <p\r\n                                className='list-of-order-text'\r\n                                style={{ color: \"#6244da\" }}\r\n                              >\r\n                                You SAVED {savedcouponamount}{\" \"}\r\n                                {orderCoompleteDetails.currency} !\r\n                              </p>\r\n                            </div>\r\n                          </>\r\n                        ) : null}\r\n\r\n                        {happyHour > 0 ? (\r\n                          <>\r\n                            <div className='list-of-orders'>\r\n                              <p\r\n                                className='list-of-order-text'\r\n                                style={{ color: \"#6244da\" }}\r\n                              >\r\n                                Happy Hour discount {happyHour}{\" \"}\r\n                                {orderCoompleteDetails.currency} !\r\n                              </p>\r\n                            </div>\r\n                          </>\r\n                        ) : null}\r\n\r\n                        <div className='list-of-orders'>\r\n                          <p className='list-of-order-text'>Total</p>\r\n                          <p\r\n                            className='list-of-order-text2'\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            {orderCoompleteDetails.currency}&nbsp;\r\n                            {orderCoompleteDetails.total}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className='list-of-orders'>\r\n                          <p className='list-of-order-text'>Payment method</p>\r\n                          <p\r\n                            className='list-of-order-text2'\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            {orderCoompleteDetails.pay_method}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className='list-of-orders'>\r\n                          <p className='list-of-order-text'>Order Option</p>\r\n\r\n                          {orderCoompleteDetails.delivery_option == \"pickup\" ? (\r\n                            <>\r\n                              <p\r\n                                className='list-of-order-text2'\r\n                                style={{ color: \"black\" }}\r\n                              >\r\n                                {orderCoompleteDetails.delivery_option}\r\n                              </p>\r\n                            </>\r\n                          ) : null}\r\n                          {orderCoompleteDetails.delivery_option == \"eatin\" ? (\r\n                            <p\r\n                              className='list-of-order-text2'\r\n                              style={{ color: \"black\" }}\r\n                            >\r\n                              {orderCoompleteDetails.delivery_option}\r\n                            </p>\r\n                          ) : null}\r\n                          {orderCoompleteDetails.delivery_option ==\r\n                          \"delivery\" ? (\r\n                            <p\r\n                              className='list-of-order-text2'\r\n                              style={{ color: \"black\" }}\r\n                            >\r\n                              {orderCoompleteDetails.delivery_option}\r\n                            </p>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {/* <Footer /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default OrderSuccess;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\ItemList.jsx",["865","866","867","868","869","870","871","872","873","874","875","876","877"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n  truncateDecimal,\r\n} from \"../../state-management/menu/utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport RenderModifiers from \"../../containers/Modifiers/RenderModifiers\";\r\nimport \"./Cart.css\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nconst ItemList = ({\r\n  items,\r\n  currency,\r\n  isPriceWithoutTax,\r\n  timezone,\r\n  onRemove,\r\n  onAdd,\r\n}) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const modal = useSelector((state) => state.modal);\r\n  let refIndex = -1;\r\n  const timeOutRef = Array.from({ length: 100 }, () => React.createRef());\r\n\r\n  const [state, setState] = useState({\r\n    item: \"\",\r\n  });\r\n\r\n  function getDiscountedPrice(item, isStillActive) {\r\n    if (item.happyHourItem && isStillActive) {\r\n      const itemPrice = item.subTotal;\r\n      const itemHappyHourPrice = item.happyHourItem.subTotal;\r\n\r\n      return truncateDecimal(itemPrice - itemHappyHourPrice);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n  function isPriceWithoutTax() {\r\n    console.log(\r\n      \"price without tax\",\r\n      menu.restaurantInfo[\"price_without_tax_flag\"]\r\n    );\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  }\r\n  function renderHappyHourOffers(item, isStillActive) {\r\n    if (isStillActive && item.happyHourItem) {\r\n      switch (item.happyHourDetail.type) {\r\n        case \"Discount\":\r\n        case \"Amount\": {\r\n          const discountedPrice = getDiscountedPrice(item, isStillActive);\r\n\r\n          return <span>{`You saved: ${currency} ${discountedPrice}`}</span>;\r\n        }\r\n        default: {\r\n          const extraQty = item.happyHourItem.freeQty;\r\n\r\n          return extraQty ? (\r\n            <span>{`You recieved : ${extraQty} ${\r\n              extraQty > 1 ? \"extra quantities\" : \"extra quantity\"\r\n            }`}</span>\r\n          ) : null;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function renderPizzaDetails(item) {\r\n    let defaultToppings = \"\";\r\n\r\n    let optionalToppings = \"\";\r\n\r\n    let halfAndHalf = \"\";\r\n\r\n    for (let i = 0; i < item.defaultToppings.length; i++) {\r\n      defaultToppings += `, ${item.defaultToppings[i].topping_name}`;\r\n    }\r\n    defaultToppings = defaultToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    for (let i = 0; i < item.optionalToppings.length; i++) {\r\n      optionalToppings += ` ,${item.optionalToppings[i].topping_name}`;\r\n    }\r\n    optionalToppings = optionalToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    if (item.firstHalf !== null) {\r\n      halfAndHalf = `First Half: ${item.firstHalf.topping_name},`;\r\n      halfAndHalf += ` Second Half: ${item.secondHalf.topping_name}`;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <section className='size-and-base-section'>\r\n          <label>Size & Base: {item.selectedBase.name}</label>\r\n        </section>\r\n        <section className='toppings-list'>\r\n          {defaultToppings !== \"\" ? <label>Default Toppings: </label> : null}\r\n          <span>{defaultToppings}</span>\r\n          <br />\r\n          {optionalToppings !== \"\" ? <label>Optional Toppings: </label> : null}\r\n          <span>{optionalToppings}</span>\r\n        </section>\r\n        <section className='toppings-list'>\r\n          {halfAndHalf !== \"\" ? <label>Half And Half Choice: </label> : null}\r\n          <span>{halfAndHalf}</span>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function getItemPrice(item, isStillActive) {\r\n    console.log(\"getItem item is\", item);\r\n    if (item.happyHourItem && isStillActive) {\r\n      return isPriceWithoutTax\r\n        ? truncateDecimal(item.happyHourItem.grandTotal)\r\n        : truncateDecimal(item.happyHourItem.grandTotal);\r\n    } else if (item.subTotal && item.grandTotal) {\r\n      return isPriceWithoutTax ? item.grandTotal : item.grandTotal;\r\n    }\r\n\r\n    console.log(\"items in itemlits\", item);\r\n    // if (item.modifiers !== null) {\r\n    //   if (item.modifiers && item.happyHourItem && isStillActive) {\r\n    //     return isPriceWithoutTax\r\n    //       ? truncateDecimal(item.happyHourItem.subTotal)\r\n    //       : truncateDecimal(item.happyHourItem.grandTotal);\r\n    //   } else if (item.modifiers !== null && item.subTotal && item.grandTotal) {\r\n    //     alert(\"now we re in subtotal dishes\");\r\n    //     return isPriceWithoutTax ? item.grandTotal : item.grandTotal;\r\n    //   }\r\n    // }\r\n\r\n    //starts here\r\n\r\n    // if (item.happyHourItem && isStillActive) {\r\n    //   if (item.similarItems && item.similarItems.length > 0) {\r\n    //     let totalPrice = 0;\r\n\r\n    //     for (let i = 0; i < item.similarItems.length; i++) {\r\n    //       totalPrice += isPriceWithoutTax()\r\n    //         ? item.similarItems[i].happyHourItem.subTotal\r\n    //         : item.similarItems[i].happyHourItem.grandTotal;\r\n    //     }\r\n\r\n    //     return Number(totalPrice).toFixed(2);\r\n    //   } else {\r\n    //     console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n    //     console.log(\"grand\", Number(item.happyHourItem.grandTotal).toFixed(2));\r\n    //     return isPriceWithoutTax()\r\n    //       ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n    //       : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n    //   }\r\n    // } else if (item.subTotal && item.grandTotal) {\r\n    //   if (item.similarItems && item.similarItems.length > 0) {\r\n    //     let totalPrice = 0;\r\n\r\n    //     for (let i = 0; i < item.similarItems.length; i++) {\r\n    //       totalPrice += isPriceWithoutTax()\r\n    //         ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n    //         : item.similarItems[i].grandTotal ||\r\n    //           getActualPrice(item.similarItems[i]);\r\n    //     }\r\n\r\n    //     return Number(totalPrice).toFixed(2);\r\n    //   } else {\r\n    //     //alert(\"only for dish & pizza\");\r\n\r\n    //     return isPriceWithoutTax()\r\n    //       ? item.subTotal || item.price\r\n    //       : item.grandTotal || getActualPrice(item);\r\n    //   }\r\n    // }\r\n\r\n    //ends here\r\n  }\r\n\r\n  function getModifierPrice(item, isStillActive) {\r\n    console.log(\"item in getModi\", item);\r\n\r\n    var temp_arr = [];\r\n    var temp_comapre_array = [];\r\n    item.modifiers.forcedModifier.map((val) => {\r\n      temp_arr.push(val.optionalModifiers);\r\n    });\r\n    console.log(\"temp_arr in getModi\", temp_arr);\r\n    for (let i = 0; i < temp_arr.length; i++) {\r\n      temp_comapre_array.push(temp_arr[i]);\r\n    }\r\n    console.log(\"comaprision lenmgth\", temp_comapre_array[0].length);\r\n\r\n    if (temp_comapre_array[0].length > 0) {\r\n      return isPriceWithoutTax()\r\n        ? item.subTotal || item.price\r\n        : item.grandTotal || getActualPrice(item);\r\n    } else {\r\n      return isPriceWithoutTax()\r\n        ? item.subTotal || item.price\r\n        : item.grandTotal || getActualPrice(item);\r\n    }\r\n  }\r\n\r\n  function getPizzaItemPrice(item, isStillActive) {\r\n    console.log(\"getItem item is\", item);\r\n    if (item.happyHourItem && isStillActive) {\r\n      return isPriceWithoutTax\r\n        ? truncateDecimal(item.happyHourItem.subTotal)\r\n        : truncateDecimal(item.happyHourItem.grandTotal);\r\n    } else if (item.subTotal && item.grandTotal) {\r\n      return isPriceWithoutTax ? item.grandTotal : item.grandTotal;\r\n    }\r\n  }\r\n  function getActualPrice(item) {\r\n    if (menu.restaurantInfo) {\r\n      // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n      return isPriceWithoutTax()\r\n        ? item.price\r\n        : (\r\n            Number(item.price) +\r\n            Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n          ).toFixed(2);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  function renderPizzaDetails(item) {\r\n    let defaultToppings = \"\";\r\n\r\n    let optionalToppings = \"\";\r\n\r\n    let halfAndHalf = \"\";\r\n\r\n    for (let i = 0; i < item.defaultToppings.length; i++) {\r\n      defaultToppings += `, ${item.defaultToppings[i].topping_name}`;\r\n    }\r\n    defaultToppings = defaultToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    for (let i = 0; i < item.optionalToppings.length; i++) {\r\n      optionalToppings += ` ,${item.optionalToppings[i].topping_name}`;\r\n    }\r\n    optionalToppings = optionalToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    if (item.firstHalf !== null) {\r\n      halfAndHalf = `First Half: ${item.firstHalf.topping_name},`;\r\n      halfAndHalf += ` Second Half: ${item.secondHalf.topping_name}`;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className='size-and-base-section'\r\n          style={{ marginTop: \"10px\", marginLeft: \"25px\", lineHeight: \"1.4\" }}\r\n        >\r\n          <label style={{ fontSize: \"12px\" }}>Size & Base:&nbsp; </label>\r\n          <span\r\n            style={{\r\n              fontSize: \"12px\",\r\n            }}\r\n          >\r\n            {item.selectedBase.name}\r\n          </span>\r\n        </section>\r\n        <section\r\n          className='toppings-list'\r\n          style={{ marginLeft: \"25px\", lineHeight: \"1.4\" }}\r\n        >\r\n          {defaultToppings !== \"\" ? (\r\n            <label style={{ fontSize: \"12px\", lineHeight: \"0\" }}>\r\n              Default Toppings:&nbsp;{\" \"}\r\n            </label>\r\n          ) : null}\r\n          <span\r\n            style={{\r\n              textTransform: \"lowercase\",\r\n              fontSize: \"12px\",\r\n              lineHeight: \"0\",\r\n            }}\r\n          >\r\n            {defaultToppings}\r\n          </span>\r\n\r\n          {optionalToppings !== \"\" ? (\r\n            <label style={{ fontSize: \"12px\", lineHeight: \"0\" }}>\r\n              Optional Toppings:{\" \"}\r\n            </label>\r\n          ) : null}\r\n          <span\r\n            style={{\r\n              textTransform: \"lowercase\",\r\n              fontSize: \"12px\",\r\n              lineHeight: \"0\",\r\n            }}\r\n          >\r\n            {optionalToppings}\r\n          </span>\r\n        </section>\r\n        <section\r\n          className='toppings-list'\r\n          style={{ marginLeft: \"25px\", lineHeight: \"1.4\" }}\r\n        >\r\n          {halfAndHalf !== \"\" ? (\r\n            <label style={{ fontSize: \"12px\", lineHeight: \"0\" }}>\r\n              Half And Half Choice:{\" \"}\r\n            </label>\r\n          ) : null}\r\n          <span\r\n            style={{\r\n              textTransform: \"lowercase\",\r\n              fontSize: \"12px\",\r\n              lineHeight: \"0\",\r\n            }}\r\n          >\r\n            {halfAndHalf}\r\n          </span>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className='table table_summary'>\r\n        <tbody>\r\n          {items.map((item, i) => {\r\n            if (item.isHappyHourActive) {\r\n              const result = isHappyHourStillActive(item, timezone);\r\n              console.log(\"items in itemlist\", item);\r\n\r\n              var isStillActive = result.isActive;\r\n              if (isStillActive) {\r\n                refIndex++;\r\n                setTimer(result.distance, timeOutRef[refIndex]);\r\n              }\r\n            }\r\n\r\n            return (\r\n              <>\r\n                <tr\r\n                  style={{\r\n                    lineHeight: \"1\",\r\n                  }}\r\n                >\r\n                  <td>\r\n                    <button\r\n                      onClick={() => onRemove(item)}\r\n                      className='cart-button'\r\n                    >\r\n                      <RemoveCircleIcon\r\n                        fontSize='small'\r\n                        style={{ color: \"black\" }}\r\n                      />\r\n                    </button>\r\n                    {/* <button onClick={() => onAdd(item)} className=\"cart-button\">\r\n                      <i className=\"icon_plus_alt\" />\r\n                    </button>{\" \"}  */}\r\n                    <strong>{item.qty}x</strong>\r\n                    <strong>{item.name} &nbsp;</strong>\r\n                    <br />\r\n                    {item.modifiers ? (\r\n                      <>\r\n                        <p\r\n                          style={{\r\n                            // marginTop: \"10px\",\r\n                            marginLeft: \"25px\",\r\n                            lineHeight: \"1.4\",\r\n                            fontSize: \"10px\",\r\n                          }}\r\n                        >\r\n                          <RenderModifiers modifier={item.modifiers} />\r\n                        </p>\r\n                      </>\r\n                    ) : null}\r\n                    {item.productType == \"Pizza\"\r\n                      ? renderPizzaDetails(item)\r\n                      : null}\r\n                  </td>\r\n                  {console.log(\"items in itemlist\", item)}\r\n                  <td style={{ width: \"30%\" }}>\r\n                    {/* {item.modifiers !== null ? (\r\n                      <p style={{ textAlign: \"right\" }}>\r\n                        {`${currency}${truncateDecimal(\r\n                          getModifierPrice(item, isStillActive)\r\n                        )}`}\r\n                      </p>\r\n                    ) : (\r\n                      <p style={{ textAlign: \"right\" }}>\r\n                        {`${currency}${truncateDecimal(\r\n                          getItemPrice(item, isStillActive)\r\n                        )}`}\r\n                      </p>\r\n                    )} */}\r\n\r\n                    <p style={{ textAlign: \"right\" }}>\r\n                      {`${currency} ${truncateDecimal(\r\n                        getItemPrice(item, isStillActive)\r\n                      )}`}\r\n                    </p>\r\n\r\n                    {/* {item.modifiers ? (\r\n                      <p style={{ textAlign: \"right\" }}>\r\n                        {`${currency}${truncateDecimal(\r\n                          getItemPrice(item, isStillActive)\r\n                        )}`}\r\n                      </p>\r\n                    ) : (\r\n                      <>\r\n                        <p style={{ textAlign: \"right\" }}>\r\n                          {`${currency}${truncateDecimal(\r\n                            getItemPrice(item, isStillActive)\r\n                          )}`} \r\n                        </p>\r\n                      </>\r\n                    )} */}\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            );\r\n          })}\r\n\r\n          {/* })} */}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\nexport default ItemList;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentFailed.jsx",["878","879","880"],"import { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PaymentFailed = () => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const history = useHistory();\r\n  //http://ciboapp.me\r\n  return (\r\n    <>\r\n      <div className='failed' style={{ alignItems: \"center\" }}>\r\n        <img\r\n          style={{ marginTop: \"10%\", marginLeft: \"42%\" }}\r\n          src='https://i.ibb.co/StsVjS2/Failed.png'\r\n        />{\" \"}\r\n        <br />\r\n        <p style={{ fontSize: \"50px\", marginLeft: \"30%\" }}>\r\n          Your Payment is Failed\r\n        </p>\r\n        <a\r\n          style={{ marginLeft: \"40%\", fontSize: \"30px\" }}\r\n          href={`/feedmii/?/restId=${menu.restaurantInfo.restaurant_id}/menu`}\r\n        >\r\n          Please try again\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PaymentFailed;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ModifierOption.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\AddAddress.jsx",["881","882","883","884","885","886","887","888","889","890","891"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Input, Radio, Checkbox, InputNumber } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//import Button from \"@material-ui/core/Button\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport {\r\n  postAddAddress,\r\n  fetchAddressesList,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport { setSelectedAddress } from \"../../state-management/user/actions\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport { updateProfile } from \"../../state-management/user/asyncActions\";\r\n\r\nconst AddAddress = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(\"props of add\", props);\r\n\r\n  const [state, setState] = useState({\r\n    name: `${user.user.firstName} ${user.user.lastName}`,\r\n    //address1: user.deliveryOption.userAddress.address1.address_1,\r\n    address1: \"\",\r\n    address2: \"\",\r\n    // city: user.deliveryOption.userAddress.city,\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    phone: user.user.mobile,\r\n    phonecode: menu.restaurantInfo.phone_code,\r\n    // country: user.deliveryOption.userAddress.country,\r\n    // zipcode: user.deliveryOption.userAddress.zipcode,\r\n    // //phone: this.props.user.mobile,\r\n    //phonecode: Number(this.props.selectedRestaurant.phone_code),\r\n    type: \"Home\",\r\n    is_default: \"0\",\r\n    client_id: user.user.clientId,\r\n    waitingOverlay: false,\r\n    submitText: \"Please fill in all the mandatory(*) fields!\",\r\n    submitPressed: false,\r\n    error: false,\r\n    ...(user.deliveryOption ? user.deliveryOption.userAddress : undefined),\r\n    ...modal.modal.state.address,\r\n  });\r\n  const closeLoginModal = () => {\r\n    // dispatch(displayAddressModal(false));\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  const handleNameChange = (value) => {\r\n    setState({ ...state, name: value });\r\n  };\r\n  const handleAddress1Change = (value) => {\r\n    setState({ ...state, address1: value });\r\n  };\r\n  const handleAddress2Change = (value) => {\r\n    setState({ ...state, address2: value });\r\n  };\r\n  const handleStateChange = (value) => {\r\n    setState({ ...state, state: value });\r\n  };\r\n\r\n  const handlePhoneChange = (value) => {\r\n    setState({ ...state, phone: value });\r\n  };\r\n\r\n  const locationOfDelivery = (value) => {\r\n    setState({ ...state, type: value });\r\n  };\r\n\r\n  const onChangeSetDefault = (value) => {\r\n    setState({ ...state, is_default: state[\"is_default\"] === \"0\" ? \"1\" : \"0\" });\r\n  };\r\n\r\n  const handleResponse = (payload) => {\r\n    setState({ ...state, waitingOverlay: false, submitPressed: false });\r\n\r\n    if (payload.success) {\r\n      //this.props.successCallback && this.props.successCallback();\r\n      //   this.props.modalState.selectAddress &&\r\n      dispatch(setSelectedAddress(state));\r\n      closeLoginModal();\r\n    } else {\r\n      setState({ ...state, submitText: \"SUBMIT\" });\r\n      setState({ ...state, error: payload.message });\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = async () => {\r\n    props.getAddress(state);\r\n    // if (props.bool == \"yes\") {\r\n    //   props.isItFromCheckout(true);\r\n    // } else if (props.bool == \"no\") {\r\n    //   props.isItFromCheckout(false);\r\n    // }\r\n    console.log(\"state is\", state);\r\n    const creds = {\r\n      client_id: user.user.clientId,\r\n      merchant_id: menu.restaurantInfo.merchant_key,\r\n      phone: state.phone,\r\n      mobile: state.phone,\r\n    };\r\n\r\n    console.log(\"update profile in add address\", creds);\r\n\r\n    dispatch(updateProfile(creds));\r\n\r\n    setState({\r\n      ...state,\r\n      waitingOverlay: true,\r\n      submitText: \"Please Wait...\",\r\n      error: false,\r\n      submitPressed: true,\r\n    });\r\n    const { existingDefaultAddress } = modal.modal.state;\r\n    console.log(\"existing address\", existingDefaultAddress);\r\n\r\n    //if k andar yeh b aaega ==> existingDefaultAddress &&\r\n    if (existingDefaultAddress && state[\"is_default\"] === \"1\") {\r\n      const { payload: payload1 } = await dispatch(\r\n        postAddAddress(\r\n          {\r\n            ...existingDefaultAddress,\r\n            is_default: \"0\",\r\n          },\r\n          true\r\n        )\r\n      );\r\n      !payload1.success && handleResponse(payload1);\r\n      if (payload1.success) {\r\n        const { payload } = await dispatch(\r\n          postAddAddress(state, modal.modal.state.editMode)\r\n        );\r\n\r\n        handleResponse(payload);\r\n      }\r\n    } else {\r\n      const { payload } = await dispatch(\r\n        postAddAddress(\r\n          state,\r\n\r\n          modal.modal.state.editMode\r\n        )\r\n      );\r\n      if (!modal.modal.state.editMode)\r\n        if (payload.success) {\r\n          props.refetchAddresses(true);\r\n        }\r\n\r\n      console.log(\"payload on post\", payload);\r\n      setState({ ...state, payload });\r\n\r\n      handleResponse(payload);\r\n\r\n      dispatch(closeModal());\r\n    }\r\n  };\r\n\r\n  // const fetchAddressList = async () => {\r\n  //   const payload = await dispatch(fetchAddressesList(user.user.clientId));\r\n  //   const resp = payload.data;\r\n  //   setState({ ...state, resp });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log(\"state in add address\", state);\r\n  }, [state]);\r\n\r\n  const toggle = () => {\r\n    dispatch(closeModal());\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        className='add-address-for-mobile-resp '\r\n        isOpen={true}\r\n        toggle={toggle}\r\n        style={{ top: \"5%\" }}\r\n      >\r\n        <ModalHeader toggle={toggle}>\r\n          {\" \"}\r\n          {modal.modal.state.editMode ? \"Edit Address\" : \"Add Address\"}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {/* {state.waitingOverlay ? <WaitingOverlay /> : null} */}\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              size='medium'\r\n              placeholder='Full Name'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.name || null}\r\n              onChange={(e) => handleNameChange(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              size='medium'\r\n              placeholder='Address Line 1'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.address1 || null}\r\n              onChange={(e) => handleAddress1Change(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              size='medium'\r\n              placeholder='House Number'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.address2}\r\n              onChange={(e) => handleAddress2Change(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              disabled\r\n              size='medium'\r\n              placeholder='City'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.city || null}\r\n              //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              size='medium'\r\n              placeholder='state'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.state || null}\r\n              onChange={(e) => handleStateChange(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              disabled\r\n              size='medium'\r\n              placeholder='Address Line 2'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.zipcode || null}\r\n              //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='input-addd-address'>\r\n            <Input\r\n              disabled\r\n              size='medium'\r\n              placeholder='Address Line 2'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.country || null}\r\n              //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='input-addd-address-contact'>\r\n            {/* <Input\r\n              size=\"medium\"\r\n              placeholder=\"phonecode\"\r\n              style={{ width: \"25%\", borderRadius: \"5px\" }}\r\n              value={menu.restaurantInfo.phone_code || null}\r\n              //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n            />\r\n            &nbsp; */}\r\n            <Input\r\n              size='medium'\r\n              placeholder='phone number'\r\n              style={{ borderRadius: \"5px\" }}\r\n              value={state.phone || null}\r\n              onChange={(e) => handlePhoneChange(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className='address-type'\r\n            style={{\r\n              marginLeft: \"15px\",\r\n              // marginTop: \"5px\",\r\n            }}\r\n          >\r\n            <input\r\n              className='check_payment'\r\n              type='radio'\r\n              name='delivery_type'\r\n              id='home'\r\n              value='home'\r\n              onChange={(e) => locationOfDelivery(e.target.value)}\r\n            />\r\n            <label\r\n              //onClick={paymentoptioncardClick}\r\n              for='home'\r\n              class='btn_radio_type'\r\n            >\r\n              Home &nbsp;\r\n              <HomeIcon className='icon-delivery-address' />\r\n            </label>\r\n\r\n            <input\r\n              className='check_payment'\r\n              type='radio'\r\n              name='delivery_type'\r\n              id='work'\r\n              value='work'\r\n              onChange={(e) => locationOfDelivery(e.target.value)}\r\n            />\r\n            <label\r\n              //onClick={paymentoptioncardClick}\r\n              for='work'\r\n              class='btn_radio_type'\r\n            >\r\n              Work &nbsp; <WorkIcon className='icon-delivery-address' />\r\n            </label>\r\n\r\n            <input\r\n              className='check_payment'\r\n              type='radio'\r\n              name='delivery_type'\r\n              id='others'\r\n              value='others'\r\n              onChange={(e) => locationOfDelivery(e.target.value)}\r\n            />\r\n            <label\r\n              //onClick={paymentoptioncardClick}\r\n              for='others'\r\n              class='btn_radio_type'\r\n            >\r\n              Others &nbsp; <HomeIcon className='icon-delivery-address' />\r\n            </label>\r\n          </div>\r\n\r\n          <div className='set-default'>\r\n            <Checkbox\r\n              checked={state[\"is_default\"] === \"1\"}\r\n              onChange={(e) => onChangeSetDefault(e.target.value)}\r\n            >\r\n              {state[\"is_default\"] === \"1\" ? \"Default\" : \"Set To Default?\"}\r\n            </Checkbox>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Button\r\n              className='add-address-button'\r\n              style={{ backgroundColor: \"#302f31\" }}\r\n              onClick={onFormSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          <div\r\n          style={{\r\n            width: \"100%\",\r\n            marginLeft: \"25px\",\r\n            marginBottom: \"10px\",\r\n            marginTop: \"10px\",\r\n          }}\r\n          >\r\n            <Button\r\n              onClick={onFormSubmit}\r\n              style={{\r\n                backgroundColor: \"black\",\r\n                padding: \"7px\",\r\n                color: \"white\",\r\n                width: \"90%\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </ModalFooter> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default AddAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\Address.jsx",["892","893"],"const Address = ({ address }) => {\r\n  console.log(\"adderss in add address\", address);\r\n  return (\r\n    <>\r\n      <ul\r\n        className='address-lines'\r\n        //onClick={() => onClick && onClick(address)}\r\n      >\r\n        <li style={{ marginTop: \"0px\" }}>\r\n          <span>\r\n            <p\r\n              className='address_name'\r\n              style={{\r\n                textTransform: \"capitalize\",\r\n                marginLeft: \"-10px\",\r\n                borderRadius: \"5px\",\r\n                paddingTop: \"5px\",\r\n                textAlign: \"center\",\r\n                fontSize: \"20px\",\r\n                height: \"30px\",\r\n                width: \"80px\",\r\n                //backgroundColor: \"black\",\r\n                //color: \"white\",\r\n              }}\r\n            >\r\n              {address.type}\r\n            </p>\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span>\r\n            <h5 className='address_name'>{address.name}</h5>\r\n          </span>\r\n        </li>\r\n        <div className='for-mobile'>\r\n          <li>\r\n            <span>{address.address1}</span> &nbsp;{\" \"}\r\n            <span>{address.address2}</span>\r\n          </li>\r\n\r\n          <li>\r\n            <span>\r\n              {address.city == \"undefined\" ? \"\" : address.city}\r\n              {address.zipcode}\r\n            </span>\r\n          </li>\r\n        </div>\r\n\r\n        <li>\r\n          <span>\r\n            {address.state == \"undefined\" ? \"\" : address.state}\r\n            <span>{address.country}</span>\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default Address;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppModal\\AppModal.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\DishModal.jsx",["894","895","896","897","898","899","900","901","902","903"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem, removeItem } from \"../../../state-management/menu/actions\";\r\nimport { truncateDecimal } from \"../../../state-management/menu/utils\";\r\nimport ForcedModifiers from \"../../Modifiers/ForcedModifiers/ForcedModifiers\";\r\nimport OptionalModifiers from \"../../Modifiers/OptionalModifiers/OptionalModifiers\";\r\n// import ModalHeader from \"./ModalHeader\";\r\nimport FooterModifier from \"./FooterModifier\";\r\nimport \"./DishModal.css\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport \"simplebar/src/simplebar.css\";\r\nimport { getTaxes } from \"../../../state-management/menu/operations\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { openModal, closeModal } from \"../../../state-management/modal/actions\";\r\nimport { modalNames } from \"../../../components/AppModal/constants\";\r\n\r\nconst DishModal = () => {\r\n  const dispatch = useDispatch();\r\n  const menu = useSelector((state) => state.menu);\r\n  const modal = useSelector((state) => state.modal);\r\n  const [modalM, setModalM] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    selectedOptionalModifier: [],\r\n    selectedForcedModifier: [],\r\n    forcedPrice: 0,\r\n    optionalPrice: 0,\r\n    item: modal.modal.state.item,\r\n  });\r\n\r\n  const getForcedModifiers = () => {\r\n    if (state.item.forced_modifier !== \"0\") {\r\n      const itemForcedModifiers = state.item.forced_modifier.split(\",\");\r\n\r\n      return menu.allForcedModifier.filter((item) =>\r\n        itemForcedModifiers.includes(item.fm_cat_id)\r\n      );\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const getOptionModifiers = () => {\r\n    if (state.item.optional_modifier !== \"0\") {\r\n      const itemOptionalModifiers = state.item.optional_modifier.split(\",\");\r\n\r\n      return menu.allOptionalModifier.filter((item) =>\r\n        itemOptionalModifiers.includes(item.om_cat_id)\r\n      );\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const [detourid, setdetourid] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(\"check id\", setdetourid);\r\n  });\r\n  const handleAddItem = () => {\r\n    const current_item = modal.modal.state.item;\r\n    const similarItems = menu.cart.filter(({ id }) => current_item.id === id);\r\n\r\n    console.log(\"similar item in dish modal\", similarItems);\r\n    const menuItems = menu.menuItems;\r\n    const item = menuItems.find(({ id }) => state.item.id === id);\r\n    const { forcedPrice, optionalPrice } = state;\r\n    const modifier = {\r\n      forcedModifier: state.selectedForcedModifier,\r\n      optionalModifier: state.selectedOptionalModifier,\r\n    };\r\n    const subTotal = forcedPrice + optionalPrice + Number(item.price);\r\n    console.log(\"modifier in dish modal\", modifier);\r\n\r\n    console.log(\"modifiers in handleAddItem\", modifier);\r\n    console.log(\"item in modifier\", item);\r\n    console.log(\"subtotal in dish\", subTotal);\r\n\r\n    // if (modifier.forcedModifier[0].optionalModifiers[0].id) {\r\n    //   setdetourid(modifier.forcedModifier[0].optionalModifiers[0].id);\r\n    // }\r\n\r\n    dispatch(addItem(item, modifier, subTotal, menu.restaurantInfo));\r\n    dispatch(closeModal());\r\n\r\n    setState({ ...state, forcedPrice: 0, optionalPrice: 0 });\r\n  };\r\n\r\n  const handleForcedModifierSelectionChange = (\r\n    selectedForcedModifier,\r\n    forcedPrice\r\n  ) => {\r\n    setState({ ...state, selectedForcedModifier, forcedPrice });\r\n    console.log(\"selection change\", state);\r\n  };\r\n\r\n  const handleOptionalModifierSelectionChange = (\r\n    selectedOptionalModifier,\r\n    optionalPrice\r\n  ) => {\r\n    setState({ ...state, selectedOptionalModifier, optionalPrice });\r\n  };\r\n\r\n  const isPriceWithoutTax = () => {\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  const getActualPrice = (item) => {\r\n    if (menu.restaurantInfo) {\r\n      return isPriceWithoutTax()\r\n        ? Number(item.price)\r\n        : truncateDecimal(\r\n            Number(item.price) +\r\n              Number(\r\n                getTaxes(item, Number(item.price), menu.restaurantInfo).tax\r\n              )\r\n          );\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const getModifierPrice = (price) =>\r\n    isPriceWithoutTax()\r\n      ? price\r\n      : truncateDecimal(\r\n          Number(price) +\r\n            Number(getTaxes(state.item, Number(price), menu.restaurantInfo).tax)\r\n        );\r\n\r\n  const getPrice = (item, price) => {\r\n    return isPriceWithoutTax()\r\n      ? truncateDecimal(price)\r\n      : truncateDecimal(\r\n          Number(price) +\r\n            Number(getTaxes(item, Number(price), menu.restaurantInfo).tax)\r\n        );\r\n  };\r\n\r\n  const getTotalPrice = (item) => {\r\n    const { forcedPrice, optionalPrice } = state;\r\n    const { price } = item;\r\n    const modifierPrice = forcedPrice + optionalPrice;\r\n    const result = modifierPrice\r\n      ? modifierPrice + Number(price)\r\n      : getActualPrice(item);\r\n\r\n    return modifierPrice ? getPrice(item, result) : result;\r\n  };\r\n\r\n  const isConfirmationDisabled = () => {\r\n    const forcedModifers = getForcedModifiers();\r\n    const { selectedForcedModifier } = state;\r\n\r\n    if (forcedModifers && forcedModifers.length) {\r\n      return (\r\n        !selectedForcedModifier ||\r\n        (selectedForcedModifier &&\r\n          forcedModifers.length !== selectedForcedModifier.length)\r\n      );\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  // renderFooter() {\r\n  //   const { menuItems } = this.props;\r\n  //   const item = menuItems.find(({ id }) => this.state.item.id === id);\r\n  //   console.log(\r\n  //     \"Forced modifiers with Detours \",\r\n  //     this.state.selectedForcedModifier\r\n  //   );\r\n  //   console.log(\r\n  //     \"Optional modifiers with Detours \",\r\n  //     this.state.selectedOptionalModifier\r\n  //   );\r\n  //   console.log(\"Detours \", this.state.item.detour_ids);\r\n  //   return (\r\n  //\r\n  //   );\r\n  // }\r\n\r\n  const menuItems = menu.menuItems;\r\n  console.log(\"menu item\", menuItems);\r\n  const itemForFooter = menuItems.find(({ id }) => state.item.id === id);\r\n  console.log(\"Forced modifiers with Detours \", state.selectedForcedModifier);\r\n  console.log(\r\n    \"Optional modifiers with Detours \",\r\n    state.selectedOptionalModifier\r\n  );\r\n  console.log(\"Detours \", state.item.omCats);\r\n\r\n  useEffect(() => {\r\n    console.log(\"omCats\", state.item);\r\n  }, [state]);\r\n\r\n  const toggle = () => {\r\n    setModalM(!modalM);\r\n    dispatch(closeModal());\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={true}\r\n        toggle={toggle}\r\n        style={{ top: \"15%\", left: \"2%\", width: \"35%\", borderRadius: \"20px\" }}\r\n      >\r\n        <ModalHeader toggle={toggle} style={{ borderBottom: \"none\" }}>\r\n          <span\r\n            style={{ fontSize: \"20px\", fontWeight: \"700\", marginLeft: \"16px\" }}\r\n          >\r\n            {state.item.name}\r\n          </span>\r\n        </ModalHeader>\r\n        <ModalBody\r\n          style={{\r\n            maxHeight: \"400px\",\r\n            overflowY: \"scroll\",\r\n            marginTop: \"-15px\",\r\n          }}\r\n        >\r\n          <ForcedModifiers\r\n            currency={menu.restaurantInfo.currency}\r\n            isPriceWithoutTax={isPriceWithoutTax()}\r\n            item={state.item}\r\n            forcedModifiers={getForcedModifiers()}\r\n            detours={state.item.detour_ids}\r\n            getModifierPrice={getModifierPrice}\r\n            onSelectionChange={handleForcedModifierSelectionChange}\r\n          />\r\n          {console.log(\"detour id\", state.item.detour_ids)}\r\n          <OptionalModifiers\r\n            getModifierPrice={getModifierPrice}\r\n            currency={menu.restaurantInfo.currency}\r\n            optionalModifier={getOptionModifiers()}\r\n            onSelectionChange={handleOptionalModifierSelectionChange}\r\n          />\r\n        </ModalBody>\r\n        {console.log(\"confirm disabke is\", isConfirmationDisabled)}\r\n        <FooterModifier\r\n          buttonTitle={`ADD TO ORDER - ${\r\n            menu.restaurantInfo.currency\r\n          } ${getTotalPrice(itemForFooter)}`}\r\n          btnCls=\"cart\"\r\n          disabled={isConfirmationDisabled()}\r\n          onClick={handleAddItem}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      <div className=\"dish-modal\">\r\n        <ModalHeader\r\n          title={state.item.name}\r\n          //onClose={this.props.onCloseModal}\r\n        />\r\n        {/* <SimpleBarReact className=\"main-content\">\r\n          <div className=\"modifiers-list\">\r\n            <h1>Check</h1>\r\n            <ForcedModifier\r\n              currency={menu.restaurantInfo.currency}\r\n              isPriceWithoutTax={isPriceWithoutTax()}\r\n              item={state.item}\r\n              forcedModifiers={getForcedModifiers()}\r\n              detours={state.item.detour_ids}\r\n              getModifierPrice={getModifierPrice}\r\n              onSelectionChange={handleForcedModifierSelectionChange}\r\n            />\r\n            <OptionalModifier\r\n              getModifierPrice={getModifierPrice}\r\n              currency={menu.restaurantInfo.currency}\r\n              optionalModifier={getOptionModifiers()}\r\n              onSelectionChange={handleOptionalModifierSelectionChange}\r\n            />\r\n          </div>\r\n        </SimpleBarReact>\r\n        <ModalFooter\r\n          buttonTitle={`ADD TO ORDER - ${\r\n            menu.restaurantInfo.currency\r\n          } ${getTotalPrice(itemForFooter)}`}\r\n          btnCls=\"cart\"\r\n          disabled={isConfirmationDisabled()}\r\n          onClick={handleAddItem}\r\n        /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishModal;\r\n\r\n// function mapStateToProps(state) {\r\n//   return {\r\n//     allForcedModifier: state.menu.allForcedModifier,\r\n//     allOptionalModifier: state.menu.allOptionalModifier,\r\n//     currency: state.main.selectedRestaurant.monetary_symbol,\r\n//     menuItems: state.menu.menuItems,\r\n//     restaurantInfo: state.main.selectedRestaurant,\r\n//   };\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   addItem,\r\n//   removeItem,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(DishModal);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\ModalHeader.jsx",[],["904","905"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppModal\\constants.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\FooterModifier.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\DishModal\\IntermediateAddModal.jsx",["906","907","908","909","910"],"import React from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../../../state-management/menu/actions\";\r\nimport { openModal, closeModal } from \"../../../state-management/modal/actions\";\r\n\r\n//import \"./IntermediateAddModal.scss\";\r\nimport { ADD_NEW, REPEATE_LAST, HEADER_TITLE, EXTRAS } from \"../constants\";\r\nimport { modalNames } from \"../../../components/AppModal/constants\";\r\nimport RenderModifiers from \"../../../containers/Modifiers/RenderModifiers\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nclass IntermediateAddModal extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { item: props.modalState.item };\r\n  }\r\n\r\n  handleAddNew = () => {\r\n    this.props.onCloseModal();\r\n    if (this.state.item.isPizza) {\r\n      this.props.openModal(modalNames.PIZZA_MODAL, { pizza: this.state.item });\r\n    } else {\r\n      this.props.openModal(modalNames.DISH_MODAL, { item: this.state.item });\r\n    }\r\n  };\r\n\r\n  // toggle() {\r\n  //   this.props.toggle();\r\n  // }\r\n\r\n  handleRepeatLast = () => {\r\n    const { item } = this.state;\r\n    const similarItems = this.props.cart.filter(({ id }) => item.id === id);\r\n    console.log(\"similar items in repeat last\", item);\r\n    const lastItem = similarItems[similarItems.length - 1] || item;\r\n    console.log(\"last item is\", lastItem);\r\n\r\n    this.props.addItem(\r\n      lastItem,\r\n      lastItem.modifiers || null,\r\n      lastItem.subTotal,\r\n      this.props.restaurantInfo\r\n    );\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  renderModifiers() {\r\n    const { item } = this.state;\r\n    const similarItems = this.props.cart.filter(({ id }) => item.id === id);\r\n    const { modifiers } = similarItems[similarItems.length - 1] || item;\r\n\r\n    return (\r\n      <>\r\n        <label>{EXTRAS}</label>\r\n        <RenderModifiers modifier={modifiers} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderPizzaDetails() {\r\n    const { item } = this.state;\r\n    const similarItems = this.props.cart.filter(({ id }) => item.id === id);\r\n\r\n    let defaultToppings = \"\";\r\n\r\n    let optionalToppings = \"\";\r\n\r\n    let halfAndHalf = \"\";\r\n\r\n    const similarItem = similarItems[similarItems.length - 1] || item;\r\n\r\n    for (let i = 0; i < similarItem.defaultToppings.length; i++) {\r\n      defaultToppings += ` ,${similarItem.defaultToppings[i].topping_name}`;\r\n    }\r\n    defaultToppings = defaultToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    for (let i = 0; i < similarItem.optionalToppings.length; i++) {\r\n      optionalToppings += ` ,${similarItem.optionalToppings[i].topping_name}`;\r\n    }\r\n    optionalToppings = optionalToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    if (similarItem.firstHalf !== null) {\r\n      halfAndHalf = `First Half: ${similarItem.firstHalf.topping_name},`;\r\n      halfAndHalf += ` Second Half: ${similarItem.secondHalf.topping_name}`;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <section className=\"size-and-base-section\">\r\n          <label>Size & Base: {similarItem.selectedBase.name}</label>\r\n        </section>\r\n        <section className=\"toppings-list\">\r\n          {defaultToppings !== \"\" ? <label>Default Toppings: </label> : null}\r\n          <span>{defaultToppings}</span>\r\n          <br />\r\n          {optionalToppings !== \"\" ? <label>Optional Toppings: </label> : null}\r\n          <span>{optionalToppings}</span>\r\n        </section>\r\n        <section className=\"toppings-list\">\r\n          {halfAndHalf !== \"\" ? <label>Half And Half Choice: </label> : null}\r\n          <span>{halfAndHalf}</span>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // renderFooter() {\r\n  //   return (\r\n  //     <footer>\r\n  //       <button className=\"add-new\" onClick={this.handleAddNew}>\r\n  //         {ADD_NEW}\r\n  //       </button>\r\n  //       <button className=\"repeat-last\" onClick={this.handleRepeatLast}>\r\n  //         {REPEATE_LAST}\r\n  //       </button>\r\n  //     </footer>\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={true}\r\n          toggle={this.props.onCloseModal}\r\n          style={{ top: \"10%\", left: \"2%\" }}\r\n        >\r\n          <ModalHeader toggle={this.props.onCloseModal}>\r\n            {this.state.item.name}\r\n          </ModalHeader>\r\n          <ModalBody style={{ maxHeight: \"400px\", overflowY: \"scroll\" }}>\r\n            {this.state.item.isPizza\r\n              ? this.renderPizzaDetails()\r\n              : this.renderModifiers()}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button\r\n              style={{ backgroundColor: \"black\", color: \"white\" }}\r\n              className=\"add-new\"\r\n              onClick={this.handleAddNew}\r\n            >\r\n              ADD NEW\r\n            </button>\r\n            <button\r\n              style={{ backgroundColor: \"black\", color: \"white\" }}\r\n              className=\"repeat-last\"\r\n              onClick={this.handleRepeatLast}\r\n            >\r\n              REPEAT LAST\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.menu.cart,\r\n    restaurantInfo: state.main.selectedRestaurant,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addItem,\r\n  openModal,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IntermediateAddModal);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\RenderModifiers.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\Detours\\utils.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\Detours\\Detours.jsx",["911","912"],"import React, { useState, useEffect } from \"react\";\r\nimport { Checkbox } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Detours.scss\";\r\n\r\nconst Detours = React.memo(\r\n  ({\r\n    optionalModifierId,\r\n    currency,\r\n    allOptionalModifier,\r\n    getModifierPrice,\r\n    onDetourSelectionChange,\r\n  }) => {\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const detourOptions = allOptionalModifier.filter((item) => {\r\n      if (Number(optionalModifierId) === Number(item.om_cat_id)) {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      console.log(\"selected item\", selectedOptions);\r\n    }, [selectedOptions]);\r\n\r\n    console.log(\"detouropt\", detourOptions);\r\n\r\n    function isMaxLimit(selectedModifiers, catDetails) {\r\n      if (Number(catDetails.maxLimit) === 0) {\r\n        return false;\r\n      }\r\n\r\n      let counter = 0;\r\n\r\n      for (let i = 0; i < selectedModifiers.length; i++) {\r\n        if (selectedModifiers[i].omCatId === catDetails.omCatId) {\r\n          counter++;\r\n        }\r\n      }\r\n      if (counter >= catDetails.maxLimit) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function getTotalPrice(updatedItems) {\r\n      return updatedItems.reduce(\r\n        (acc, item) => acc + (item.isFree ? 0 : Number(item.price)),\r\n        0\r\n      );\r\n    }\r\n\r\n    function setFreeLimitPrices(allItems) {\r\n      // update free limit items prices\r\n      const priceSortedItems = allItems.sort((a, b) => a.price - b.price);\r\n\r\n      const freeLimit = Number(detourOptions[0].free_limit);\r\n      const limit =\r\n        freeLimit > priceSortedItems.length\r\n          ? priceSortedItems.length\r\n          : freeLimit;\r\n\r\n      for (let i = 0; i < limit; i++) {\r\n        priceSortedItems[i].isFree = true;\r\n      }\r\n      for (let i = limit; i < priceSortedItems.length; i++) {\r\n        priceSortedItems[i].isFree = false;\r\n      }\r\n\r\n      return priceSortedItems;\r\n    }\r\n\r\n    const handleChange = (checked, option) => {\r\n      console.log(\"item in detours checked\", checked);\r\n      console.log(\"item in detours checked\", option);\r\n      let newSelectedOptions = [];\r\n\r\n      let withFreeLimitItems = [];\r\n\r\n      if (checked) {\r\n        newSelectedOptions = [...selectedOptions, option];\r\n      } else {\r\n        newSelectedOptions = selectedOptions.filter(\r\n          ({ id }) => id !== option.id\r\n        );\r\n      }\r\n\r\n      withFreeLimitItems = setFreeLimitPrices(newSelectedOptions);\r\n      setSelectedOptions(withFreeLimitItems);\r\n\r\n      // check if max limit has crossed for optional category items\r\n      isMaxLimit(withFreeLimitItems, option);\r\n      onDetourSelectionChange && onDetourSelectionChange(withFreeLimitItems);\r\n    };\r\n\r\n    function renderOptions() {\r\n      const catDetails = {\r\n        omCatId: detourOptions[0].om_cat_id,\r\n        maxLimit: detourOptions[0].max_limit,\r\n      };\r\n      const isMaxLimitReached = isMaxLimit(selectedOptions, catDetails);\r\n\r\n      return detourOptions[0].items.map((option, i) => {\r\n        const canSetDisabled =\r\n          isMaxLimitReached &&\r\n          !selectedOptions.some(\r\n            ({ id, omCatId }) => id === option.id && omCatId === option.omCatId\r\n          );\r\n        const currentItem = selectedOptions.find(\r\n          (item) => item.id === option.id\r\n        );\r\n        const strikeOutFree =\r\n          currentItem && currentItem.isFree ? \"free-amount\" : \"\";\r\n\r\n        return (\r\n          <>\r\n            {/* <section style={{ display: \"inline-flex\" }} key={i}>\r\n             <label className=\"label\"> */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Checkbox\r\n                style={{ fontSize: \"13px\" }}\r\n                disabled={canSetDisabled}\r\n                onChange={({ target: { checked } }) =>\r\n                  handleChange(checked, option)\r\n                }\r\n              >\r\n                {option.name}\r\n              </Checkbox>\r\n              {/* </label> */}\r\n              <p\r\n                style={{ textAlign: \"right\", fontSize: \"13px\" }}\r\n                className={`modifier-amount ${strikeOutFree}`}\r\n              >\r\n                ( {currency} {getModifierPrice(option.price)} )\r\n              </p>\r\n            </div>\r\n            {/* </section> */}\r\n          </>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <hr\r\n          style={{\r\n            backgroundColor: \"#f1f1f1\",\r\n\r\n            marginLeft: \"22px\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        />\r\n        <div\r\n          className=\"detour-options\"\r\n          style={{\r\n            marginLeft: \"12px\",\r\n            marginTop: \"-15px\",\r\n            // border: \"1px solid black\",\r\n            padding: \"10px\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n          key={optionalModifierId.om_cat_id}\r\n        >\r\n          <h5 className=\"category-name\">{detourOptions[0].om_cat_name}</h5>\r\n          <span className=\"modifier-category-instruction\">\r\n            {detourOptions[0].free_limit > 0\r\n              ? `Cheapest ${detourOptions[0].free_limit} options will be free`\r\n              : null}\r\n            {detourOptions[0].free_limit > 0 && detourOptions[0].max_limit > 0\r\n              ? \", \"\r\n              : null}\r\n            {detourOptions[0].max_limit > 0\r\n              ? `You can choose max upto ${detourOptions[0].max_limit} options`\r\n              : null}\r\n          </span>\r\n          {renderOptions()}\r\n        </div>\r\n        <hr\r\n          style={{\r\n            backgroundColor: \"#f1f1f1\",\r\n\r\n            marginLeft: \"22px\",\r\n            marginTop: \"0px\",\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dishModalData: state.menu.dishModalData,\r\n    allForcedModifier: state.menu.allForcedModifier,\r\n    allOptionalModifier: state.menu.allOptionalModifier,\r\n    currency: state.main.selectedRestaurant.monetary_symbol,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Detours);\r\n",["913","914"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\PizzaModal.jsx",["915","916","917","918","919","920","921","922","923","924","925","926","927"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchToppings } from \"../../../state-management/menu/asyncActions\";\r\nimport { addItem } from \"../../../state-management/menu/actions\";\r\n// import Toppings from './Toppings';\r\nimport HalfAndHalf from \"./HalfAndHalf/HalfAndHalf\";\r\nimport SizeAndBase from \"../PizzaModal/SizeAndBase/SizeAndBase\";\r\n// import { AppLoader } from '../../../components/AppLoader';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { openModal, closeModal } from \"../../../state-management/modal/actions\";\r\nimport \"../../Modals/PizzaModal/PizzaModal.css\";\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport \"simplebar/src/simplebar.css\";\r\nimport { getPizzaActualPrice } from \"../../../state-management/menu/operations\";\r\nimport Toppings from \"../PizzaModal/Toppings/Toppings\";\r\nimport FooterModifier from \"../DishModal/FooterModifier\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WaitingOverlay from \"../../../components/WaitingOverlay/WaitingOverlay\";\r\n\r\nclass PizzaModal extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOptionalToppings: [],\r\n      selectedDefaultToppings: [],\r\n      selecteBaseId: null,\r\n      selectedSizeId: null,\r\n      halfAndHalfPizzaList: [],\r\n      pizza: props.modalState.pizza,\r\n      toppingsList: {},\r\n      sizeAndBaseList: [],\r\n      firstHalf: null,\r\n      secondHalf: null,\r\n      isToppingFetched: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const restaurantId = this.props.restaurantInfo[\"restaurant_id\"];\r\n    console.log(\"pixxa is\", this.state.pizza);\r\n    const sizeAndBaseList = this.getSizeAndBase(\r\n      this.state.pizza,\r\n      this.props.restaurantInfo\r\n    );\r\n\r\n    this.setState({\r\n      sizeAndBaseList,\r\n      selecteBaseId: sizeAndBaseList[0].baseId,\r\n      selectedSizeId: sizeAndBaseList[0].sizeId,\r\n    });\r\n\r\n    const requestData = {\r\n      restaurant_id: restaurantId,\r\n      pizza_id: this.state.pizza.pizza_id,\r\n      size: sizeAndBaseList[0].sizeId,\r\n    };\r\n\r\n    const { payload } = await this.props.fetchToppings(requestData);\r\n\r\n    this.setState({ isToppingFetched: true });\r\n    if (payload) {\r\n      const toppingsList = {};\r\n\r\n      toppingsList.defaultToppings = payload.default_toppings;\r\n      toppingsList.optionalToppings = payload.toppings;\r\n\r\n      this.setState({\r\n        toppingsList,\r\n        selectedDefaultToppings: toppingsList.defaultToppings,\r\n        halfAndHalfPizzaList: payload.halfnhalf,\r\n        isToppingFetched: true,\r\n      });\r\n\r\n      console.log(\"pizza state is\", this.state);\r\n    }\r\n    //throw error if no information is available\r\n  }\r\n\r\n  getSizeAndBase = (pizza) => {\r\n    const sizeAndBaseCollection = [];\r\n\r\n    for (let i = 0; i < pizza.size.length; i++) {\r\n      const sizeBaseObj = {\r\n        name: pizza.size[i].pizza_size,\r\n        baseId: null,\r\n        sizeValue: pizza.size[i].pizza_size,\r\n        basePrice: 0,\r\n        sizeId: pizza.size[i].pizza_size_id,\r\n        sizePrice: Number(pizza.size[i].price),\r\n        totalPrice: Number(pizza.size[i].price),\r\n      };\r\n\r\n      // get the base price with base_size\r\n      if (\r\n        pizza.base !== undefined &&\r\n        pizza.base !== null &&\r\n        pizza.base !== \"0\" &&\r\n        pizza.base !== 0\r\n      ) {\r\n        for (let j = 0; j < pizza.base.length; j++) {\r\n          const sizeBaseObj = {\r\n            name: pizza.size[i].pizza_size,\r\n            sizeValue: pizza.size[i].pizza_size,\r\n            basePrice: 0,\r\n            baseId: null,\r\n            sizeId: pizza.size[i].pizza_size_id,\r\n            sizePrice: Number(pizza.size[i].price),\r\n            totalPrice: Number(pizza.size[i].price),\r\n          };\r\n\r\n          sizeBaseObj.name += ` ${pizza.base[j].base_name}`;\r\n          sizeBaseObj.baseId = pizza.base[j].base_id;\r\n          const basePrice = pizza.base[j].base_price.find(\r\n            (item) => item.base_size === pizza.size[i].pizza_size\r\n          );\r\n\r\n          sizeBaseObj.basePrice = Number(\r\n            basePrice === undefined ? 0 : basePrice.base_price\r\n          );\r\n          sizeBaseObj.totalPrice =\r\n            sizeBaseObj.totalPrice + sizeBaseObj.basePrice;\r\n          sizeAndBaseCollection.push(sizeBaseObj);\r\n        }\r\n      } else {\r\n        sizeAndBaseCollection.push(sizeBaseObj);\r\n      }\r\n    }\r\n    sizeAndBaseCollection.sort((a, b) => a.totalPrice - b.totalPrice);\r\n\r\n    return sizeAndBaseCollection;\r\n  };\r\n\r\n  getTotalPrice() {\r\n    if (this.state.sizeAndBaseList.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const selectedSizePrice = this.state.sizeAndBaseList.find(\r\n      (op) =>\r\n        op.sizeId === this.state.selectedSizeId &&\r\n        (op.baseId !== null ? op.baseId === this.state.selecteBaseId : true)\r\n    ).totalPrice;\r\n\r\n    let toppingsPrice = selectedSizePrice;\r\n    const { firstHalf, secondHalf } = this.state;\r\n    const halfNhalfPrize =\r\n      (firstHalf ? Number(firstHalf[\"topping_price\"]) : 0) +\r\n      (secondHalf ? Number(secondHalf[\"topping_price\"]) : 0);\r\n\r\n    if (this.state.selectedOptionalToppings.length === 0) {\r\n      return getPizzaActualPrice(\r\n        this.state.pizza,\r\n        toppingsPrice + halfNhalfPrize,\r\n        this.props.restaurantInfo\r\n      );\r\n    }\r\n\r\n    const toppings = [...this.state.selectedOptionalToppings];\r\n\r\n    for (let i = 0; i < toppings.length; i++) {\r\n      toppingsPrice += Number(toppings[i].topping_price);\r\n    }\r\n\r\n    return getPizzaActualPrice(\r\n      this.state.pizza,\r\n      toppingsPrice + halfNhalfPrize,\r\n      this.props.restaurantInfo\r\n    );\r\n  }\r\n\r\n  getNormalPrice() {\r\n    if (this.state.sizeAndBaseList.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const selectedSizePrice = this.state.sizeAndBaseList.find(\r\n      (op) =>\r\n        op.sizeId === this.state.selectedSizeId &&\r\n        op.baseId === this.state.selecteBaseId\r\n    ).totalPrice;\r\n\r\n    const { firstHalf, secondHalf } = this.state;\r\n    const halfNhalfPrize =\r\n      (firstHalf ? Number(firstHalf[\"topping_price\"]) : 0) +\r\n      (secondHalf ? Number(secondHalf[\"topping_price\"]) : 0);\r\n\r\n    let toppingsPrice = selectedSizePrice;\r\n\r\n    if (this.state.selectedOptionalToppings.length === 0) {\r\n      return toppingsPrice + halfNhalfPrize;\r\n    }\r\n\r\n    const toppings = [...this.state.selectedOptionalToppings];\r\n\r\n    for (let i = 0; i < toppings.length; i++) {\r\n      toppingsPrice += Number(toppings[i].topping_price);\r\n    }\r\n\r\n    return toppingsPrice + halfNhalfPrize;\r\n  }\r\n\r\n  isConfirmationDisabled() {\r\n    const isHalfNHalf = this.state.halfAndHalfPizzaList.length > 0;\r\n\r\n    if (\r\n      (!isHalfNHalf && !this.state.isToppingFetched) ||\r\n      (isHalfNHalf &&\r\n        (this.state.firstHalf === null || this.state.secondHalf === null)) ||\r\n      !this.state.isToppingFetched\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleSizeBaseChange = async (sizeBaseId) => {\r\n    this.setState({ isToppingFetched: false });\r\n    const sizeBase = sizeBaseId.split(\",\");\r\n    console.log(\"id of pizza\", sizeBase);\r\n\r\n    if (sizeBase[0] === this.state.selectedSizeId) {\r\n      this.setState({\r\n        selecteBaseId: sizeBase[1] ? sizeBase[1] : null,\r\n        selectedSizeId: sizeBase[0],\r\n        isToppingFetched: true,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const restaurantId = this.props.restaurantInfo[\"restaurant_id\"];\r\n\r\n    const requestData = {\r\n      restaurant_id: restaurantId,\r\n      pizza_id: this.state.pizza.pizza_id,\r\n      size: sizeBase[0],\r\n    };\r\n\r\n    const { payload } = await this.props.fetchToppings(requestData);\r\n    console.log(\"payload of toppings\", payload);\r\n\r\n    this.setState({ isToppingFetched: true });\r\n    if (payload) {\r\n      const toppingsList = {};\r\n\r\n      toppingsList.defaultToppings = payload.default_toppings;\r\n      toppingsList.optionalToppings = payload.toppings;\r\n\r\n      this.setState({\r\n        selecteBaseId: sizeBase[1] ? sizeBase[1] : null,\r\n        selectedSizeId: sizeBase[0],\r\n        selectedDefaultToppings: toppingsList.defaultToppings,\r\n        toppingsList,\r\n        firstHalf: null,\r\n        secondHalf: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDefaultToppingsChange = (isChecked, topping) => {\r\n    let newDefaultToppings = [];\r\n\r\n    if (isChecked) {\r\n      newDefaultToppings = [...this.state.selectedDefaultToppings];\r\n      newDefaultToppings.push(topping);\r\n    } else {\r\n      newDefaultToppings = this.state.selectedDefaultToppings.filter((top) => {\r\n        if (top.topping_id !== topping.topping_id) {\r\n          return top;\r\n        }\r\n      });\r\n    }\r\n    this.setState({ selectedDefaultToppings: newDefaultToppings });\r\n  };\r\n\r\n  handleOptionalToppingsChange = (isChecked, topping) => {\r\n    let newOptionalToppings = [];\r\n\r\n    if (isChecked) {\r\n      newOptionalToppings = [...this.state.selectedOptionalToppings];\r\n      newOptionalToppings.push(topping);\r\n    } else {\r\n      newOptionalToppings = this.state.selectedOptionalToppings.filter(\r\n        (top) => {\r\n          if (top.topping_id !== topping.topping_id) {\r\n            return top;\r\n          }\r\n        }\r\n      );\r\n    }\r\n    this.setState({ selectedOptionalToppings: newOptionalToppings });\r\n  };\r\n\r\n  handleHalfAndHalfChange = (selected, item) => {\r\n    if (selected.includes(\"1-\")) {\r\n      const secondHalf =\r\n        this.state.secondHalf &&\r\n        this.state.secondHalf.topping_id === item.topping_id\r\n          ? null\r\n          : this.state.secondHalf;\r\n\r\n      this.setState({\r\n        firstHalf: item,\r\n        secondHalf,\r\n      });\r\n    } else {\r\n      const firstHalf =\r\n        this.state.firstHalf &&\r\n        this.state.firstHalf.topping_id === item.topping_id\r\n          ? null\r\n          : this.state.firstHalf;\r\n\r\n      this.setState({\r\n        firstHalf,\r\n        secondHalf: item,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleAddItem = () => {\r\n    const {\r\n      pizza,\r\n      firstHalf,\r\n      secondHalf,\r\n      selectedDefaultToppings,\r\n      selectedOptionalToppings,\r\n      sizeAndBaseList,\r\n      selecteBaseId,\r\n      selectedSizeId,\r\n    } = this.state;\r\n    const base = sizeAndBaseList.find(\r\n      ({ baseId, sizeId }) =>\r\n        (baseId ? baseId === selecteBaseId : true) && sizeId === selectedSizeId\r\n    );\r\n    const toppings = [...selectedDefaultToppings, ...selectedOptionalToppings];\r\n    const subTotal = Number(this.getNormalPrice());\r\n\r\n    let item = {\r\n      ...pizza,\r\n      productType: \"Pizza\",\r\n      id: pizza.pizza_id,\r\n      firstHalf,\r\n      secondHalf,\r\n      defaultToppings: selectedDefaultToppings,\r\n      optionalToppings: selectedOptionalToppings,\r\n      baseId: selecteBaseId,\r\n      sizeId: selectedSizeId,\r\n      size_value: base.sizeValue,\r\n      selectedBase: base,\r\n      toppingIdx1: toppings\r\n        .map((item) => item[\"topping_id\"])\r\n        .sort((q1, q2) => Number(q1) - Number(q2))\r\n        .join(\",\"),\r\n      subTotal,\r\n      name: pizza.title,\r\n    };\r\n\r\n    if (firstHalf && secondHalf) {\r\n      item = {\r\n        ...item,\r\n        first_half_toppings: firstHalf ? firstHalf[\"topping_id\"] : null,\r\n        second_half_toppings: secondHalf ? secondHalf[\"topping_id\"] : null,\r\n      };\r\n    }\r\n\r\n    this.props.addItem(item, null, subTotal, this.props.restaurantInfo);\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  toggle = () => {\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          //className={custom - pizza - modal}\r\n          size='lg'\r\n          isOpen={true}\r\n          toggle={this.toggle}\r\n          style={{ top: \"15%\", left: \"2%\", width: \"35%\" }}\r\n        >\r\n          <ModalHeader>\r\n            <img\r\n              className='img-of-pizza-modal'\r\n              // style={{ marginLeft: \"-17px\", marginTop: \"-20px\" }}\r\n              src='https://i.ibb.co/qWc9P0d/piiza-3.jpg'\r\n              // height=\"190px\"\r\n              // width=\"499px\"\r\n            />\r\n            <div\r\n              onClick={this.toggle}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                position: \"absolute\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"20px\",\r\n              }}\r\n            >\r\n              <CloseIcon\r\n                className='pizza-modal-close'\r\n                style={{ color: \"black\" }}\r\n              />\r\n            </div>\r\n            <p\r\n              className='text-pizzamodal'\r\n              style={{\r\n                fontWeight: \"800\",\r\n                color: \"#5c48d2\",\r\n                fontSize: \"25px\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              {this.state.pizza.title}\r\n            </p>\r\n          </ModalHeader>\r\n          <ModalBody style={{ maxHeight: \"400px\", overflowY: \"scroll\" }}>\r\n            <SizeAndBase\r\n              currency={this.props.currency}\r\n              onSelectionChange={this.handleSizeAndBaseSelectionChange}\r\n              sizeAndBaseList={this.state.sizeAndBaseList}\r\n              handleSizeBaseChange={this.handleSizeBaseChange}\r\n            />\r\n            {this.state.halfAndHalfPizzaList.length > 0 ? (\r\n              <HalfAndHalf\r\n                currency={this.props.currency}\r\n                pizza={this.state.pizza}\r\n                halfAndHalfPizzaList={this.state.halfAndHalfPizzaList}\r\n                restaurantInfo={this.props.restaurantInfo}\r\n                firstHalfId={\r\n                  this.state.firstHalf ? this.state.firstHalf.topping_id : null\r\n                }\r\n                secondHalfId={\r\n                  this.state.secondHalf\r\n                    ? this.state.secondHalf.topping_id\r\n                    : null\r\n                }\r\n                handleHalfAndHalfChange={this.handleHalfAndHalfChange}\r\n              />\r\n            ) : null}\r\n\r\n            {this.state.toppingsList.defaultToppings ? (\r\n              <Toppings\r\n                pizza={this.state.pizza}\r\n                currency={this.props.currency}\r\n                toppingsList={this.state.toppingsList}\r\n                selectedDefaultToppings={this.state.selectedDefaultToppings}\r\n                restaurantInfo={this.props.restaurantInfo}\r\n                handleDefaultToppingsChange={this.handleDefaultToppingsChange}\r\n                handleOptionalToppingsChange={this.handleOptionalToppingsChange}\r\n              />\r\n            ) : null}\r\n          </ModalBody>\r\n\r\n          <FooterModifier\r\n            buttonTitle={`ADD TO ORDER - ${this.props.currency} ${Number(\r\n              this.getTotalPrice()\r\n            ).toFixed(2)}`}\r\n            btnCls='cart'\r\n            disabled={this.isConfirmationDisabled()}\r\n            onClick={this.handleAddItem}\r\n          />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currency: state.main.selectedRestaurant.monetary_symbol,\r\n    menuItems: state.menu.pizzas,\r\n    restaurantInfo: state.main.selectedRestaurant,\r\n    isLoading: state.menu.isLoading,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchToppings,\r\n  addItem,\r\n  // removePizza,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaModal);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\SizeAndBase\\SizeAndBase.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\HalfAndHalf\\HalfAndHalf.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\PizzaModal\\Toppings\\Toppings.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuTable\\PizzaMenuTable.jsx",["928","929","930","931","932","933","934","935","936","937","938","939","940"],"import React, { useState } from \"react\";\r\nimport { Button } from \"react-scroll\";\r\n//import Button from \"@material-ui/core/Button\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modalNames } from \"../../components/AppModal/constants\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport MenuModal from \"../../containers/Modals/DishModal/DishModal\";\r\nimport { addItem, removeItem } from \"../../state-management/menu/actions\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport DishModal from \"../../containers/Modals/DishModal/DishModal\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport { connect } from \"react-redux\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport img1 from \"./388@2x.png\";\r\nimport img2 from \"./387@2x.png\";\r\nimport img3 from \"./389@2x.png\";\r\nimport img4 from \"./391@2x.png\";\r\nimport img5 from \"./390@2x.png\";\r\nclass PizzaMenuTable extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refIndex = -1;\r\n    this.timeOutRef = Array.from({ length: 1000 }, () => React.createRef());\r\n  }\r\n\r\n  getPizzaActualPrice(pizza, price) {\r\n    return this.isPriceWithoutTax()\r\n      ? Number(price).toFixed(2)\r\n      : (\r\n          Number(price).toFixed(3) +\r\n          Number(getTaxes(pizza, Number(price), this.props.restaurantInfo).tax)\r\n        ).toFixed(3);\r\n  }\r\n\r\n  isPriceWithoutTax() {\r\n    return Number(this.props.restaurantInfo[\"price_without_tax_flag\"]).toFixed(\r\n      3\r\n    );\r\n  }\r\n\r\n  getItemPrice(item, isStillActive) {\r\n    if (item.happyHourItem && isStillActive) {\r\n      if (item.similarItems && item.similarItems.length > 0) {\r\n        let totalPrice = 0;\r\n\r\n        for (let i = 0; i < item.similarItems.length; i++) {\r\n          totalPrice += this.isPriceWithoutTax()\r\n            ? item.similarItems[i].happyHourItem.grandTotal\r\n            : item.similarItems[i].happyHourItem.grandTotal;\r\n        }\r\n\r\n        return Number(totalPrice).toFixed(3);\r\n      } else {\r\n        return this.isPriceWithoutTax()\r\n          ? Number(item.happyHourItem.grandTotal).toFixed(3)\r\n          : Number(item.happyHourItem.grandTotal).toFixed(3);\r\n      }\r\n    } else if (item.subTotal && item.grandTotal) {\r\n      if (item.similarItems && item.similarItems.length > 0) {\r\n        let totalPrice = 0;\r\n\r\n        for (let i = 0; i < item.similarItems.length; i++) {\r\n          totalPrice += this.isPriceWithoutTax()\r\n            ? item.similarItems[i].grandTotal || item.similarItems[i].price\r\n            : item.similarItems[i].grandTotal ||\r\n              this.getActualPrice(item.similarItems[i]);\r\n        }\r\n\r\n        return Number(totalPrice).toFixed(3);\r\n      } else {\r\n        return this.isPriceWithoutTax()\r\n          ? Number(item.grandTotal || item.price).toFixed(3)\r\n          : Number(item.grandTotal).toFixed(2) ||\r\n              Number(this.getActualPrice(item)).toFixed(3);\r\n      }\r\n    }\r\n  }\r\n\r\n  getTotalPrice(pizza) {\r\n    var tax = pizza / 100;\r\n    var x = tax * 25;\r\n\r\n    // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n    return (Number(pizza) + Number(x)).toFixed(2);\r\n  }\r\n\r\n  getSizeAndBase(pizza) {\r\n    const sizeAndBaseCollection = [];\r\n\r\n    for (let i = 0; i < (pizza.size && pizza.size.length); i++) {\r\n      const sizeBaseObj = {\r\n        name: pizza.size[i].pizza_size,\r\n        baseId: null,\r\n        basePrice: 0,\r\n        sizeId: pizza.size[i].pizza_size_id,\r\n        sizePrice: this.getPizzaActualPrice(pizza, pizza.size[i].price),\r\n        totalPrice: this.getPizzaActualPrice(pizza, pizza.size[i].price),\r\n      };\r\n\r\n      // get the base price with base_size\r\n      if (\r\n        pizza.base !== undefined &&\r\n        pizza.base !== null &&\r\n        pizza.base !== \"0\" &&\r\n        pizza.base !== 0\r\n      ) {\r\n        for (let j = 0; j < pizza.base.length; j++) {\r\n          const sizeBaseObj = {\r\n            name: pizza.size[i].pizza_size,\r\n            basePrice: 0,\r\n            baseId: null,\r\n            sizeId: pizza.size[i].pizza_size_id,\r\n            sizePrice: this.getPizzaActualPrice(pizza, pizza.size[i].price),\r\n            totalPrice: this.getPizzaActualPrice(pizza, pizza.size[i].price),\r\n          };\r\n\r\n          sizeBaseObj.name += ` ${pizza.base[j].base_name}`;\r\n          sizeBaseObj.baseId = pizza.base[j].base_id;\r\n          const basePrice = pizza.base[j].base_price.find(\r\n            (item) => item.base_size === pizza.size[i].pizza_size\r\n          );\r\n\r\n          sizeBaseObj.basePrice = this.getPizzaActualPrice(\r\n            pizza,\r\n            basePrice === undefined ? 0 : basePrice.base_price\r\n          );\r\n          sizeBaseObj.totalPrice =\r\n            Number(sizeBaseObj.totalPrice) + Number(sizeBaseObj.basePrice);\r\n          sizeAndBaseCollection.push(sizeBaseObj);\r\n        }\r\n      } else {\r\n        sizeAndBaseCollection.push(sizeBaseObj);\r\n      }\r\n    }\r\n    sizeAndBaseCollection.sort((a, b) => a.totalPrice - b.totalPrice);\r\n\r\n    return sizeAndBaseCollection;\r\n  }\r\n\r\n  openPizzaModal(pizza, baseId, sizeId) {\r\n    // open Pizza modal having default topppings\r\n    // and half and half\r\n    console.log(\"pizza qty is\", pizza);\r\n    if (pizza.qty) {\r\n      this.props.openModal(modalNames.INTERMEDIATE_ADD_MODAL, {\r\n        item: pizza,\r\n        baseId,\r\n        sizeId,\r\n      });\r\n    } else {\r\n      this.props.openModal(modalNames.PIZZA_MODAL, {\r\n        pizza,\r\n        baseId,\r\n        sizeId,\r\n      });\r\n    }\r\n  }\r\n\r\n  myFunction() {\r\n    var dots = document.getElementById(\"dots\");\r\n    var moreText = document.getElementById(\"more\");\r\n    var btnText = document.getElementById(\"myBtn\");\r\n\r\n    moreText.style.display = \"inline\";\r\n    btnText.style.display = \"none\";\r\n  }\r\n\r\n  removefromcart(item) {\r\n    this.props.removeforpizza(item);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h4 className=\"category-name-head text-pizzamodal\" id=\"Pizza\">\r\n          Pizza\r\n        </h4>\r\n\r\n        <>\r\n          {this.props.list.map((item) => {\r\n            console.log(\"pizza item\", item);\r\n            let isStillActive = false;\r\n\r\n            var refIndex = -1;\r\n            var timeOutRef = Array.from({ length: 100 }, () =>\r\n              React.createRef()\r\n            );\r\n            if (item.isHappyHourActive) {\r\n              const result = isHappyHourStillActive(\r\n                item,\r\n                this.props.restaurantInfo.timezone\r\n              );\r\n\r\n              isStillActive = result.isActive;\r\n              if (isStillActive) {\r\n                refIndex++;\r\n                setTimer(result.distance, timeOutRef[refIndex]);\r\n              }\r\n            }\r\n            const minQty =\r\n              Number(item.min_qty) === 0 ? 0 : Number(item.min_qty);\r\n\r\n            const sizeAndBaseCollection = this.getSizeAndBase(item);\r\n            console.log(\"price is\", sizeAndBaseCollection);\r\n            //item.price = sizeAndBaseCollection[0].totalPrice;\r\n\r\n            //item.price = sizeAndBaseCollection[0].totalPrice;\r\n            if (item.size)\r\n              return (\r\n                <>\r\n                  <div>\r\n                    <div className=\"parent-menutable\">\r\n                      <div className=\"parent-flex\">\r\n                        <div className=\"left-menutable-img\">\r\n                          <div className=\"img-cover-menutable\">\r\n                            <img\r\n                              className=\"food-image\"\r\n                              src={item?.image ?? \"https://cutt.ly/gkb8C6Z\"}\r\n                              //src=\"https://cutt.ly/gkb8C6Z\"\r\n                            ></img>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"food-details\">\r\n                          <div className=\"inner-food-details-div\">\r\n                            <div className=\"specific-food-details\">\r\n                              <h4 className=\"food-item-name\">\r\n                                {item.cname || item.name || item.title}\r\n                              </h4>\r\n\r\n                              <div className=\"food-icons\">\r\n                                <div className=\"food-icon-child\">\r\n                                  {item.lactose_free === \"1\" ? (\r\n                                    <span title=\"Lactose Free\">\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"lactose free\"\r\n                                        src={img1}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.nuts_free === \"1\" ? (\r\n                                    <span\r\n                                      title=\"Nuts Free\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"nuts free\"\r\n                                        src={img3}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.is_hot === \"1\" ? (\r\n                                    <span\r\n                                      title=\"Hot\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"hot\"\r\n                                        src={img4}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.is_vegan === \"1\" ? (\r\n                                    <span\r\n                                      title=\"It's Vegan\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"it's vegan\"\r\n                                        src={img5}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                  {item.gluten_free === \"1\" ? (\r\n                                    <span\r\n                                      title=\"Gluten Free\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                      <img\r\n                                        className=\"properties-img\"\r\n                                        alt=\"gluten free\"\r\n                                        src={img2}\r\n                                      />\r\n                                    </span>\r\n                                  ) : null}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"item-price-parent-div\">\r\n                                <span className=\"item-price\">\r\n                                  {this.props.restaurantInfo.monetary_symbol}\r\n                                  &nbsp;\r\n                                  {this.getTotalPrice(\r\n                                    sizeAndBaseCollection[0].totalPrice\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {item.isPizza ? (\r\n                              <>\r\n                                {item.qty ? (\r\n                                  <>\r\n                                    <div className=\"after-first-add-container\">\r\n                                      <div className=\"after-first-add-parent\">\r\n                                        <div className=\"after-first-add-child\">\r\n                                          <div\r\n                                            className=\"left-after-add\"\r\n                                            onClick={() =>\r\n                                              this.removefromcart(item)\r\n                                            }\r\n                                          >\r\n                                            <RemoveIcon fontSize=\"small\" />\r\n                                          </div>\r\n                                          <div className=\"middle-after-add\">\r\n                                            <span className=\"qty-after-add\">\r\n                                              {item.qty}\r\n                                            </span>\r\n                                          </div>\r\n\r\n                                          <div\r\n                                            className=\"right-after-add\"\r\n                                            onClick={() =>\r\n                                              this.openPizzaModal(\r\n                                                item,\r\n                                                isHappyHourStillActive(\r\n                                                  item,\r\n                                                  this.props.restaurantInfo\r\n                                                    .timezone\r\n                                                ).isActive\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <AddIcon fontSize=\"small\" />\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </>\r\n                                ) : (\r\n                                  <div className=\"specific-add-button\">\r\n                                    <div\r\n                                      className=\"button-container\"\r\n                                      onClick={() =>\r\n                                        this.openPizzaModal(\r\n                                          item,\r\n                                          isHappyHourStillActive(\r\n                                            item,\r\n                                            this.props.restaurantInfo.timezone\r\n                                          ).isActive\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <span className=\"add-to-cart-button\">\r\n                                        Add\r\n                                      </span>\r\n                                      <span className=\"add-to-cart-button-plus\">\r\n                                        <AddIcon />\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </>\r\n                            ) : null}\r\n                          </div>\r\n                          {item.isHappyHourActive && isStillActive ? (\r\n                            <>\r\n                              <p\r\n                                className=\"food-description\"\r\n                                style={{ color: \"red\", fontWeight: \"600\" }}\r\n                              >\r\n                                {item.happyHourDetail.happyHourDisplayText}\r\n                              </p>\r\n                              <p className=\"food-description\">\r\n                                <AccessTimeIcon style={{ color: \"red\" }} />{\" \"}\r\n                                &nbsp;{\" \"}\r\n                                <span\r\n                                  style={{ color: \"red\", fontWeight: \"700\" }}\r\n                                  ref={timeOutRef[refIndex]}\r\n                                />\r\n                              </p>\r\n                            </>\r\n                          ) : null}\r\n\r\n                          {item.description ? (\r\n                            <>\r\n                              <p className=\"food-description\">\r\n                                {item.description.slice(0, 100)}\r\n                                <span id=\"dots\">...</span>\r\n                                <span\r\n                                  id=\"myBtn\"\r\n                                  className=\"read-more\"\r\n                                  onClick={this.myFunction}\r\n                                >\r\n                                  read more\r\n                                </span>\r\n                                <p\r\n                                  className=\"food-description\"\r\n                                  id=\"more\"\r\n                                  style={{ display: \"none\" }}\r\n                                >\r\n                                  {item.description.slice(101, 10000)}\r\n                                </p>\r\n                              </p>\r\n                            </>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                </>\r\n              );\r\n          })}\r\n        </>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    restaurantInfo: state.main.selectedRestaurant,\r\n    happyHourItems: state.menu.happyHours,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  openModal,\r\n  closeModal,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaMenuTable);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\constants.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\HomeSlider\\HomeSlider.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PizzaDetailsForCheckout.jsx",["941","942"],"import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeModal } from \"../../state-management/modal/actions\";\r\n\r\nconst PizzaDetailsForChekout = (item) => {\r\n  const dispatch = useDispatch();\r\n  const modal = useSelector((state) => state.modal);\r\n  function renderPizzaDetails(item) {\r\n    let defaultToppings = \"\";\r\n\r\n    let optionalToppings = \"\";\r\n\r\n    let halfAndHalf = \"\";\r\n\r\n    for (let i = 0; i < item.defaultToppings.length; i++) {\r\n      defaultToppings += `, ${item.defaultToppings[i].topping_name}`;\r\n    }\r\n    defaultToppings = defaultToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    for (let i = 0; i < item.optionalToppings.length; i++) {\r\n      optionalToppings += ` ,${item.optionalToppings[i].topping_name}`;\r\n    }\r\n    optionalToppings = optionalToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    if (item.firstHalf !== null) {\r\n      halfAndHalf = `First Half: ${item.firstHalf.topping_name},`;\r\n      halfAndHalf += ` Second Half: ${item.secondHalf.topping_name}`;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className=\"size-and-base-section\"\r\n          style={{ marginTop: \"10px\" }}\r\n        >\r\n          <label style={{ fontSize: \"17px\" }}>\r\n            Size & Base:&nbsp;\r\n            <span className=\"text-pizzamodal\"> {item.selectedBase.name} </span>\r\n          </label>\r\n        </section>\r\n        <br />\r\n        <section className=\"toppings-list\">\r\n          {defaultToppings !== \"\" ? (\r\n            <label style={{ fontSize: \"17px\" }}>\r\n              Default Toppings:&nbsp; &nbsp;{\" \"}\r\n            </label>\r\n          ) : null}\r\n          <span className=\"text-pizzamodal\" style={{ fontSize: \"14px\" }}>\r\n            {defaultToppings}\r\n          </span>\r\n          <br />\r\n          <br />\r\n          {optionalToppings !== \"\" ? (\r\n            <label style={{ fontSize: \"17px\" }}>\r\n              Optional Toppings: &nbsp; &nbsp;\r\n            </label>\r\n          ) : null}\r\n          <span className=\"text-pizzamodal\" style={{ fontSize: \"14px\" }}>\r\n            {optionalToppings}\r\n          </span>\r\n        </section>\r\n        <br />\r\n        <section className=\"toppings-list\">\r\n          {halfAndHalf !== \"\" ? (\r\n            <label style={{ fontSize: \"17px\" }}>\r\n              Half And Half Choice:&nbsp; &nbsp;{\" \"}\r\n            </label>\r\n          ) : null}\r\n          <span className=\"text-pizzamodal\" style={{ fontSize: \"14px\" }}>\r\n            {halfAndHalf}\r\n          </span>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const toggle = () => {\r\n    dispatch(closeModal());\r\n  };\r\n  return (\r\n    <>\r\n      <Modal isOpen={true} toggle={toggle} style={{ top: \"20%\", left: \"2%\" }}>\r\n        <ModalHeader toggle={toggle}>{modal.modal.state.item.name}</ModalHeader>\r\n        <ModalBody>{renderPizzaDetails(modal.modal.state.item)}</ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default PizzaDetailsForChekout;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\PaginationOrderList.jsx",["943","944","945","946","947"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./MyOrders.css\";\r\nfunction PaginationOrderList(props) {\r\n  const menu = useSelector((state) => state.menu);\r\n  useEffect(() => {\r\n    setPosts(props.orderList);\r\n  }, []);\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPerPage, setShowPerPage] = useState(6);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    setPagination({ start: start, end: end });\r\n    console.log(\"end is\", end);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container py-4 px-4 margin-overflow-class\">\r\n        <div className=\"row\">\r\n          {posts.slice(pagination.start, pagination.end).map((currval) => (\r\n            <div className=\"col-md-4 mb-4\" key={currval.id}>\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  border: \"1px dotted #302f31\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className={\r\n                    posts.length == 1\r\n                      ? \" card-body body-container-for-one-order\"\r\n                      : \"card-body body-container\"\r\n                  }\r\n                >\r\n                  <div style={{ marginBottom: \"-0.5rem\" }}>\r\n                    <p\r\n                      className=\"para\"\r\n                      style={{ fontSize: \"25px\", color: \"black\" }}\r\n                    >\r\n                      {currval.rname}\r\n                    </p>\r\n                    <p\r\n                      className=\"number\"\r\n                      style={{\r\n                        color: \"rgb(156, 156, 156)\",\r\n                      }}\r\n                    >\r\n                      {menu.restaurantInfo.city}, {menu.restaurantInfo.country}\r\n                    </p>\r\n                  </div>\r\n                  <hr className={posts.length == 1 ? \" hide-hr\" : \"\"} />\r\n                  <div style={{ marginBottom: \"1.2rem\" }}>\r\n                    <p className=\"para\">Order Number</p>\r\n                    <p className=\"number\">{currval.order_id}</p>\r\n                  </div>\r\n                  {/* <br /> */}\r\n                  <div style={{ marginBottom: \"1.2rem\" }}>\r\n                    <p className=\"para\">Total Amount</p>\r\n                    <p className=\"number\">\r\n                      {currval.currency} &nbsp; {currval.grand_total}\r\n                    </p>\r\n                  </div>\r\n                  {/* <br /> */}\r\n                  <div style={{ marginBottom: \"1.2rem\" }}>\r\n                    <p className=\"para\">Order On</p>\r\n                    <p className=\"number\">{currval.order_date}</p>\r\n                  </div>\r\n                  <div style={{ marginBottom: \"1.2rem\" }}>\r\n                    <p className=\"para\">Paid</p>\r\n                    <p className=\"number\">\r\n                      {currval.paid == \"1\" ? \"YES\" : \"NO\"}\r\n                    </p>\r\n                  </div>\r\n                  <div\r\n                    className=\"button-parent\"\r\n                    style={{ backgroundColor: \"#000000\" }}\r\n                    onClick={() => props.showModal(currval)}\r\n                  >\r\n                    <button className=\"btn-submit-order-success\">\r\n                      View Detail\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <Pagination\r\n          showPerPage={showPerPage}\r\n          onPaginationChange={onPaginationChange}\r\n          total={posts.length}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationOrderList;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\Pagination.jsx",["948","949","950","951","952"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MyOrders.css\";\r\n\r\nconst Pagination = ({ showPerPage, onPaginationChange, total }) => {\r\n  console.log(\"length is\", total);\r\n  const [counter, setCounter] = useState(1);\r\n  const [numberOfButtons, setNumberOfButoons] = useState(\r\n    Math.ceil(total / showPerPage)\r\n  );\r\n  const [end, setEnd] = useState();\r\n  useEffect(() => {\r\n    const value = showPerPage * counter;\r\n    setEnd(value);\r\n    onPaginationChange(value - showPerPage, value);\r\n    console.log(\"value is\", value);\r\n  }, [counter]);\r\n\r\n  const onButtonClick = (type) => {\r\n    if (type === \"prev\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (numberOfButtons === counter) {\r\n        setCounter(counter);\r\n      } else if (total == end) {\r\n        // var x = document.getElementById(\"next-id\");\r\n        // x.classList.add(\"remove-button\");\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      {total > 9 ? (\r\n        <>\r\n          <nav aria-label=\"Page navigation example\">\r\n            <ul class=\"pagination\" id=\"next-id\">\r\n              <div className=\"pagination-button-container\">\r\n                <li class=\"page-item\" className=\"pagination-button-li\">\r\n                  <a\r\n                    className=\"pagination-button-a\"\r\n                    class=\"page-link\"\r\n                    //   href=\"!#\"\r\n                    onClick={() => onButtonClick(\"prev\")}\r\n                  >\r\n                    Previous\r\n                  </a>\r\n                </li>\r\n                &nbsp; &nbsp;\r\n                {/* {new Array(numberOfButtons).fill(\"\").map((el, index) => (\r\n                  <li\r\n                    class={`page-item ${\r\n                      index + 1 === counter ? \"active\" : null\r\n                    }`}\r\n                  >\r\n                    <a\r\n                      class=\"page-link\"\r\n                      // href=\"!#\"\r\n                      onClick={() => setCounter(index + 1)}\r\n                    >\r\n                      {index + 1}\r\n                    </a>\r\n                  </li>\r\n                ))} */}\r\n                <li class=\"page-item\" className=\"pagination-button-li\">\r\n                  <a\r\n                    className=\"pagination-button-a\"\r\n                    class=\"page-link\"\r\n                    //   href=\"!#\"\r\n                    onClick={() => onButtonClick(\"next\")}\r\n                  >\r\n                    Next\r\n                  </a>\r\n                </li>\r\n              </div>\r\n            </ul>\r\n          </nav>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\ScrollToTop.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\Information\\InfoSlider.jsx",["953","954","955","956","957","958","959","960","961","962"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n} from \"reactstrap\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport DemoSlider1 from \"./demo-slider-2.jpg\";\r\nimport DemoSlider2 from \"./demo-slider-2.jpg\";\r\n\r\nconst InfoSlider = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n  const [imgurl, setimgurl] = useState([]);\r\n  const [tempslider, settempslider] = useState([DemoSlider1, DemoSlider2]);\r\n  const menu = useSelector((state) => state.menu);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://ciboapp.com/api/mobileApi/v2/gallery/getGalleryImages/restId/${menu.restaurantInfo.restaurant_id}`\r\n      )\r\n      .then((res) => {\r\n        console.log(\"response of gallery is\", res);\r\n        setimgurl(res.data.data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"imgurl  is\", imgurl);\r\n  }, [imgurl]);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    if (imgurl) {\r\n      const nextIndex = activeIndex === imgurl.length - 1 ? 0 : activeIndex + 1;\r\n\r\n      setActiveIndex(nextIndex);\r\n    }\r\n    if (!imgurl) {\r\n      const nextIndex =\r\n        activeIndex === tempslider.length - 1 ? 0 : activeIndex + 1;\r\n      setActiveIndex(nextIndex);\r\n    }\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    if (imgurl) {\r\n      const nextIndex = activeIndex === 0 ? imgurl.length - 1 : activeIndex - 1;\r\n      setActiveIndex(nextIndex);\r\n    }\r\n\r\n    if (!imgurl) {\r\n      const nextIndex =\r\n        activeIndex === 0 ? tempslider.length - 1 : activeIndex - 1;\r\n      setActiveIndex(nextIndex);\r\n    }\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  var slides;\r\n  if (imgurl) {\r\n    var slides = imgurl.map((item) => {\r\n      console.log(\"item image is\", item.image);\r\n      return (\r\n        <CarouselItem\r\n          onExiting={() => setAnimating(true)}\r\n          onExited={() => setAnimating(false)}\r\n          key={item.image}\r\n        >\r\n          <section\r\n            className='parallax-window'\r\n            data-parallax='scroll'\r\n            style={{\r\n              background: `url(${item.image}) no-repeat center`,\r\n              backgroundSize: \"cover\",\r\n            }}\r\n            data-natural-width={1400}\r\n            data-natural-height={170}\r\n          >\r\n            <div id='subheader'>\r\n              <div id='sub_content'>\r\n                {/* <h1>{menu.restaurantInfo.rname}</h1> */}\r\n                <div>{/* <em>{menu.restaurantInfo.description}</em> */}</div>\r\n                <div>\r\n                  {/* <LocationOnIcon />{\" \"}\r\n                {`${menu.restaurantInfo.address} - ${menu.restaurantInfo.city} - ${menu.restaurantInfo.country}- ${menu.restaurantInfo.zipcode}`}{\" \"}\r\n                <br />\r\n                {menu.restaurantInfo.cost.free_delivery_eligible_amount > 0 ? (\r\n                  <>\r\n                    <strong>Delivery charge:</strong> free over&nbsp;\r\n                    {menu.restaurantInfo.cost.free_delivery_eligible_amount}\r\n                    &nbsp;\r\n                    {menu.restaurantInfo?.monetary_symbol}\r\n                    <br />\r\n                  </>\r\n                ) : null}\r\n                Delivery Options : &nbsp;\r\n                {menu.restaurantInfo.order_option\r\n                  ?.split(\",\")\r\n                  .map((option, i) => {\r\n                    return (\r\n                      <b style={{ textTransform: \"capitalize\" }}>\r\n                        {option}\r\n                        <CheckCircleOutlineIcon /> &nbsp;\r\n                      </b>\r\n                    );\r\n                  })} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </CarouselItem>\r\n      );\r\n    });\r\n  }\r\n  if (!imgurl) {\r\n    var slides = tempslider.map((item) => {\r\n      //console.log(\"item image is\", item.image);\r\n      return (\r\n        <CarouselItem\r\n          onExiting={() => setAnimating(true)}\r\n          onExited={() => setAnimating(false)}\r\n          key={item}\r\n        >\r\n          <section\r\n            className='parallax-window'\r\n            data-parallax='scroll'\r\n            style={{\r\n              background: `url(${item}) no-repeat center`,\r\n              backgroundSize: \"cover\",\r\n            }}\r\n            data-natural-width={1400}\r\n            data-natural-height={170}\r\n          >\r\n            <div id='subheader'>\r\n              <div id='sub_content'>\r\n                {/* <h1>{menu.restaurantInfo.rname}</h1> */}\r\n                <div>{/* <em>{menu.restaurantInfo.description}</em> */}</div>\r\n                <div>\r\n                  {/* <LocationOnIcon />{\" \"}\r\n                {`${menu.restaurantInfo.address} - ${menu.restaurantInfo.city} - ${menu.restaurantInfo.country}- ${menu.restaurantInfo.zipcode}`}{\" \"}\r\n                <br />\r\n                {menu.restaurantInfo.cost.free_delivery_eligible_amount > 0 ? (\r\n                  <>\r\n                    <strong>Delivery charge:</strong> free over&nbsp;\r\n                    {menu.restaurantInfo.cost.free_delivery_eligible_amount}\r\n                    &nbsp;\r\n                    {menu.restaurantInfo?.monetary_symbol}\r\n                    <br />\r\n                  </>\r\n                ) : null}\r\n                Delivery Options : &nbsp;\r\n                {menu.restaurantInfo.order_option\r\n                  ?.split(\",\")\r\n                  .map((option, i) => {\r\n                    return (\r\n                      <b style={{ textTransform: \"capitalize\" }}>\r\n                        {option}\r\n                        <CheckCircleOutlineIcon /> &nbsp;\r\n                      </b>\r\n                    );\r\n                  })} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </CarouselItem>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Carousel\r\n      style={{ height: \"400px\" }}\r\n      activeIndex={activeIndex}\r\n      next={next}\r\n      previous={previous}\r\n    >\r\n      {/* <CarouselIndicators\r\n        items={imgurl}\r\n        activeIndex={activeIndex}\r\n        onClickHandler={goToIndex}\r\n      /> */}\r\n      {slides}\r\n      <CarouselControl\r\n        direction='prev'\r\n        directionText='Previous'\r\n        onClickHandler={previous}\r\n      />\r\n      <CarouselControl\r\n        direction='next'\r\n        directionText='Next'\r\n        onClickHandler={next}\r\n      />\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default InfoSlider;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\RestrictUser\\RestrictUser.jsx",["963"],"import \"./RestrictUser.css\";\r\nimport Restrict from \"./restrict.png\";\r\nconst RestrictUser = () => {\r\n  return (\r\n    <>\r\n      <div className='restrict-container'>\r\n        <img\r\n          src={Restrict}\r\n          height='150px'\r\n          width='150px'\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            display: \"block\",\r\n          }}\r\n        />\r\n        <br />\r\n        <p className='restrict-user'>\r\n          You don't have permission to view this page\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RestrictUser;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\DeliveryType.jsx",["964","965","966","967","968","969","970","971","972","973","974"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setDeliveryCost,\r\n  setSelectedAddress,\r\n  setIsTakeAway,\r\n  setPickupTime,\r\n  setDeliveryTime,\r\n  setDefaultAddress,\r\n  setDeliveryDistance,\r\n} from \"../../state-management/user/actions\";\r\nimport moment from \"moment\";\r\n\r\nconst DeliveryType = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const [timeinbusinesshour, settimeinbusinesshour] = useState(false);\r\n  const [headingfornoaddress, setheadingfornoaddress] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const DELIVERY_TYPE = {\r\n    DEFAULT: \"Delivery\",\r\n    TAKE_AWAY: \"PickUp\",\r\n    HOME_DELIVERY: \"Delivery\",\r\n    EAT_IN: \"EatIn\",\r\n  };\r\n\r\n  const settime = () => {\r\n    var moment = require(\"moment-timezone\");\r\n\r\n    var local_time = moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n      .add(30, \"minutes\")\r\n\r\n      .format(\"HH:mm\");\r\n\r\n    console.log(\"open\", main.opening);\r\n    console.log(\"close\", main.closing);\r\n    return moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n      .add(30, \"minutes\")\r\n      .format(\"HH:mm\") >= main.opening &&\r\n      moment\r\n        .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n        .add(30, \"minutes\")\r\n        .format(\"HH:mm\") <= main.closing\r\n      ? moment\r\n          .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n          .add(30, \"minutes\")\r\n      : moment(main.opening, \"HH:mm\");\r\n  };\r\n  const [state, setState] = useState({\r\n    showAddress: false,\r\n    deliveryType: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"state of delivery type\", state);\r\n  }, [state]);\r\n\r\n  const [data, setdata] = useState({\r\n    deliveryType: user.isTakeAway ? DELIVERY_TYPE.TAKE_AWAY : \"\",\r\n    // instead of \"\" --> DELIVERY_TYPE.HOME_DELIVERY\r\n\r\n    // I wonder why we need these 3 states - this needs a lot of refactoring\r\n\r\n    hasDeliveryOption: false,\r\n    hasEatInOption: false,\r\n    hasPickupOption: false,\r\n    pickupTime: settime(),\r\n    deliveryTime: settime(),\r\n    checkingChangeAddress: false,\r\n    showChangeAddress: false,\r\n\r\n    address_error: \"\",\r\n  });\r\n  useEffect(() => {\r\n    let a = JSON.parse(window.localStorage.getItem(\"deliveryType\"));\r\n    console.log(\"a in del is\", a);\r\n    if (a == \"Delivery\") {\r\n      deliveryTypeClick(DELIVERY_TYPE.DEFAULT);\r\n    } else if (a == \"PickUp\") {\r\n      deliveryTypePickupClick(DELIVERY_TYPE.TAKE_AWAY);\r\n    }\r\n\r\n    // props.getordertype(\"\");\r\n    const time = moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n      .format(\"HH:mm\");\r\n    const current_time = moment(time, \"hh:mm A\").format(\"HH:mm\");\r\n    if (main.selectedRestaurant.order_option) {\r\n      setdata({\r\n        ...data,\r\n        hasDeliveryOption: main.selectedRestaurant.order_option\r\n          .split(\",\")\r\n          .includes(\"delivery\"),\r\n        hasEatinOption: main.selectedRestaurant.order_option\r\n          .split(\",\")\r\n          .includes(\"eatin\"),\r\n        hasPickupOption: main.selectedRestaurant.order_option\r\n          .split(\",\")\r\n          .includes(\"pickup\"),\r\n      });\r\n    }\r\n    if (current_time > main.opening && current_time < main.closing) {\r\n      settimeinbusinesshour(true);\r\n    }\r\n  }, []);\r\n\r\n  const deliveryTypeClick = (type) => {\r\n    let a = document.getElementById(\"delivery\");\r\n    console.log(\"id of delivery\", a);\r\n    props.showAddress(true);\r\n    props.showPickup(false);\r\n    props.getordertype(type);\r\n    setState({ ...state, showAddress: true, deliveryType: type });\r\n\r\n    setdata({\r\n      ...data,\r\n      deliveryType: type,\r\n      showAddress: true,\r\n      delivery_option: true,\r\n    });\r\n    localStorage.setItem(\"deliveryType\", JSON.stringify(type));\r\n\r\n    dispatch(setIsTakeAway(type === DELIVERY_TYPE.TAKE_AWAY));\r\n    // getDeliveryCharges(user.distance);\r\n    if (headingfornoaddress) {\r\n      //   getDeliveryCharges(user.distance);\r\n      //setdata({ ...data, checkingChangeAddress: true });\r\n    }\r\n  };\r\n  const deliveryTypeEatinClick = (type) => {\r\n    props.showAddress(false);\r\n    props.showPickup(false);\r\n    props.getordertype(type);\r\n\r\n    dispatch(setDeliveryCost(0));\r\n    setState({ ...state, showAddress: false, deliveryType: type });\r\n\r\n    setdata({\r\n      ...data,\r\n      deliveryType: type,\r\n      showAddress: false,\r\n      showChangeAddress: false,\r\n      delivery_option: true,\r\n    });\r\n    localStorage.setItem(\"deliveryType\", JSON.stringify(type));\r\n    dispatch(setIsTakeAway(type === DELIVERY_TYPE.TAKE_AWAY));\r\n  };\r\n  const deliveryTypePickupClick = (type) => {\r\n    props.showAddress(false);\r\n    props.showPickup(true);\r\n    props.getordertype(type);\r\n\r\n    dispatch(setDeliveryCost(0));\r\n    setState({ ...state, showAddress: false, deliveryType: type });\r\n    setdata({\r\n      ...data,\r\n      deliveryType: type,\r\n      showAddress: false,\r\n      showChangeAddress: false,\r\n      delivery_option: true,\r\n    });\r\n    localStorage.setItem(\"deliveryType\", JSON.stringify(type));\r\n\r\n    dispatch(setIsTakeAway(type === DELIVERY_TYPE.TAKE_AWAY));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className='delivery-head-type'>Delivery type</h2>\r\n      <div className='container-for-mobile  margin-for-desktop'>\r\n        {data.hasDeliveryOption ? (\r\n          <>\r\n            <input\r\n              className='check_payment'\r\n              type='radio'\r\n              name='typeofdelivery'\r\n              id='delivery'\r\n              checked={state.deliveryType === \"Delivery\"}\r\n            />\r\n\r\n            <label\r\n              onClick={() => deliveryTypeClick(DELIVERY_TYPE.DEFAULT)}\r\n              for='delivery'\r\n              class='btn_radio'\r\n            >\r\n              Delivery\r\n            </label>\r\n          </>\r\n        ) : null}\r\n\r\n        {data.hasEatInOption && timeinbusinesshour ? (\r\n          <>\r\n            <input\r\n              className='check_payment'\r\n              type='radio'\r\n              name='typeofdelivery'\r\n              id='eatin'\r\n            />\r\n            <label\r\n              onClick={() => deliveryTypeEatinClick(DELIVERY_TYPE.EAT_IN)}\r\n              for='eatin'\r\n              class='btn_radio'\r\n            >\r\n              Eat In\r\n            </label>{\" \"}\r\n          </>\r\n        ) : null}\r\n\r\n        {data.hasPickupOption ? (\r\n          <>\r\n            <input\r\n              className='check_payment'\r\n              type='radio'\r\n              name='typeofdelivery'\r\n              id='PickUp'\r\n              checked={state.deliveryType === \"PickUp\"}\r\n            />\r\n            <label\r\n              onClick={() => deliveryTypePickupClick(DELIVERY_TYPE.TAKE_AWAY)}\r\n              for='PickUp'\r\n              class='btn_radio'\r\n            >\r\n              Pickup\r\n            </label>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default DeliveryType;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\TakeAddress.jsx",["975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../Checkout/Checkout.css\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  setDeliveryCost,\r\n  setSelectedAddress,\r\n  setIsTakeAway,\r\n  setPickupTime,\r\n  setDeliveryTime,\r\n  setDefaultAddress,\r\n  setDeliveryDistance,\r\n} from \"../../state-management/user/actions\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport { NaturePeopleOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Address from \"../ManageAddress/Address\";\r\nimport { fetchAddressesList } from \"../../state-management/user/asyncActions\";\r\nimport GoogleMap from \"../GoogleMap/GoogleMap\";\r\nimport Geocode from \"react-geocode\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport { useTheme } from \"@material-ui/core\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\nimport DeliveryType from \"./DeliveryType\";\r\n\r\nGeocode.setApiKey(\"AIzaSyCMTj6FEwu3Kh0tSdgp6hh4QOKgIJF74rs\");\r\nconst TakeAddress = (props) => {\r\n  const modalNames = {\r\n    ADD_ADDRESS: \"AddAddress\",\r\n    CHOOSE_ADDRESS: \"ChooseAddress\",\r\n    FIND_ADDRESS: \"findAddress\",\r\n  };\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const [api, setapi] = useState();\r\n  const [handleadd, sethandleadd] = useState(false);\r\n  const [AddressFromAdd, setAddressFromAdd] = useState();\r\n  const [heading, setheading] = useState({\r\n    add: \"Add Delivery Address\",\r\n    change: \"Delivery Address\",\r\n\r\n    addBtn: \"Add\",\r\n    changeBtn: \"change\",\r\n  });\r\n  const [changeaddress, setchangeaddress] = useState({\r\n    boolean: false,\r\n    data: \"\",\r\n    listOfAddress: false,\r\n    headingfornoaddress: true,\r\n  });\r\n  const [data, setdata] = useState({\r\n    // deliveryType: user.isTakeAway ? DELIVERY_TYPE.TAKE_AWAY : \"\",\r\n    // instead of \"\" --> DELIVERY_TYPE.HOME_DELIVERY\r\n    selectedAddress: user.selectedAddress,\r\n    delivery_option: false,\r\n    //selectedAddress: \"\",\r\n    //changeaddress: [],\r\n\r\n    isAddressesFetched: false,\r\n    paymentMethod: \"\",\r\n    booleanforpaymentmethod: 0,\r\n    // I wonder why we need these 3 states - this needs a lot of refactoring\r\n    openingBusinesHours: main.opening,\r\n    closingBusinesHours: main.closing,\r\n    businessHours: main.businessHour,\r\n    isTakeAway: user.isTakeAway,\r\n    orderButtonClicked: false,\r\n    addresses: [],\r\n    paymentOptions: [],\r\n    deliveryCharges: \"\",\r\n    // hasDeliveryOption: false,\r\n    // hasEatInOption: false,\r\n    // hasPickupOption: false,\r\n    // pickupTime: settime(),\r\n    // deliveryTime: settime(),\r\n    checkingChangeAddress: false,\r\n    showChangeAddress: false,\r\n\r\n    address_error: \"\",\r\n  });\r\n  const [show, setshow] = useState(false);\r\n  const [add, setadd] = useState({\r\n    addresses: [],\r\n  });\r\n\r\n  const [defaultadd, setdefaultadd] = useState(false);\r\n  useEffect(() => {\r\n    fetchAddresses();\r\n    let x = JSON.parse(window.localStorage.getItem(\"checkoutState\"));\r\n    if (x) {\r\n      setchangeaddress({\r\n        ...changeaddress,\r\n        boolean: x.boolean,\r\n        data: x.data,\r\n        listOfAddress: x.listOfAddress,\r\n        headingfornoaddress: x.headingfornoaddress,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!defaultadd) {\r\n      fetchAddresses();\r\n    }\r\n  }, [handleadd]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"comments in prps\", props.comments);\r\n  }, [props.comments]);\r\n  //   const [headingfornoaddress, setheadingfornoaddress] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    showAddress: false,\r\n    deliveryType: \"\",\r\n  });\r\n\r\n  const showAddressModal = () => {\r\n    setshow(true);\r\n  };\r\n  const onChangeAddressCall = () => {\r\n    // setheadingfornoaddress(false);\r\n    setchangeaddress({\r\n      ...changeaddress,\r\n      listOfAddress: true,\r\n      boolean: false,\r\n      headingfornoaddress: false,\r\n    });\r\n    localStorage.setItem(\"checkoutState\", JSON.stringify(changeaddress));\r\n\r\n    // setdata({ ...data, showChangeAddress: true });\r\n    // setState({ ...state, showAddress: false });\r\n  };\r\n  const handleAddAddressOnPaymentForm = async () => {\r\n    sethandleadd(false);\r\n    dispatch(displayAddressModal(true));\r\n    dispatch(\r\n      openModal(modalNames.FIND_ADDRESS, {\r\n        addAddress: true,\r\n        existingDefaultAddress: state.addresses\r\n          ? state.addresses &&\r\n            state.addresses.find((addr) => addr[\"is_default\"] === \"1\")\r\n          : null,\r\n      })\r\n    );\r\n\r\n    // setdata({\r\n    //   ...data,\r\n    //   changeaddress: user.selectedAddress,\r\n    //   showChangeAddress: false,\r\n    // });\r\n\r\n    // setState({ ...state, showAddress: true });\r\n  };\r\n  const handleMultipleAddress = (address) => {\r\n    props.getAddress(address);\r\n    // dispatch(setDefaultAddress(address));\r\n\r\n    // dispatch(setSelectedAddress(address));\r\n    // setchangeaddress({\r\n    //   ...changeaddress,\r\n    //   boolean: true,\r\n    //   data: address,\r\n    //   showChangeAddress: false,\r\n    // });\r\n\r\n    //setadd({ ...add, addresses: user.selectedAddress });\r\n\r\n    const service = new window.google.maps.DistanceMatrixService();\r\n\r\n    // const originCord = `${origin.lat},${origin.lng}`;\r\n    // const destinationCord = `${destination.lat},${destination.lng}`;\r\n\r\n    const originCord = `${main.selectedRestaurant.address},${main.selectedRestaurant.city}, ${main.selectedRestaurant.zipcode}, ${main.selectedRestaurant.country}`;\r\n    const destinationCord = `${address.address1},${address.city},${address.zipcode},${address.country}`;\r\n\r\n    console.log(\"destination is\", destinationCord, originCord);\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [originCord],\r\n        destinations: [destinationCord],\r\n        travelMode: \"DRIVING\",\r\n        durationInTraffic: true,\r\n        avoidHighways: false,\r\n        // unitSystem: props.google.maps.UnitSystem.METRIC,\r\n        avoidTolls: false,\r\n      },\r\n      (response) => {\r\n        let reason;\r\n\r\n        let distance;\r\n\r\n        let status;\r\n\r\n        console.log(\"response in google payemnt\", response);\r\n\r\n        if (\r\n          response.rows[0].elements[0].distance === undefined &&\r\n          response.destinationAddresses[0] === \"0,0\"\r\n        ) {\r\n          // user has to choose some correct address\r\n          reason = \"Please choose an address\";\r\n          status = \"FAILED\";\r\n        } else if (\r\n          response.rows[0].elements[0].status !== undefined &&\r\n          response.rows[0].elements[0].status === \"ZERO_RESULTS\"\r\n        ) {\r\n          reason = \"Sorry, Chosen address is out of delivery range!\";\r\n          status = \"FAILED\";\r\n        } else {\r\n          status = \"SUCCESS\";\r\n          distance = response.rows[0].elements[0].distance.value;\r\n        }\r\n        console.log(\"distance above range\", distance);\r\n        if (!isDistanceInDeliveryRange(distance / 1000, main.deliveryRange)) {\r\n          notification[\"warning\"]({\r\n            message: \"This Address is out of range now !\",\r\n            style: {\r\n              marginTop: \"50px\",\r\n\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n            placement: \"topRight\",\r\n          });\r\n        } else {\r\n          dispatch(setSelectedAddress(address));\r\n          setchangeaddress({\r\n            ...changeaddress,\r\n            boolean: true,\r\n            data: address,\r\n            listOfAddress: false,\r\n            headingfornoaddress: true,\r\n          });\r\n          localStorage.setItem(\"checkoutState\", JSON.stringify(changeaddress));\r\n          setdata({\r\n            ...data,\r\n            changeaddress: address,\r\n            selectedAddress: address,\r\n            showChangeAddress: false,\r\n            checkingChangeAddress: true,\r\n          });\r\n          setState({ ...state, showAddress: true });\r\n          handleChangeDistanceCalucationCallback({ distance, status, reason });\r\n        }\r\n\r\n        // callback({\r\n        //   distance,\r\n        //   status,\r\n        //   reason,\r\n        // });\r\n      }\r\n    );\r\n\r\n    // handleChangeDefautAddress({distance});\r\n\r\n    // setheadingfornoaddress(true);\r\n\r\n    //  getDeliveryCharges();\r\n\r\n    console.log(\"add is\", address);\r\n  };\r\n  const handleChangeDistanceCalucationCallback = async (result) => {\r\n    // const final_distance =\r\n    //   getDistanceBetweenPoints(\r\n    //     main.selectedRestaurant.lat,\r\n    //     main.selectedRestaurant.lon,\r\n    //     main.destination_coordinates.lat,\r\n    //     main.destination_coordinates.lng\r\n    //   ) * 0.001;\r\n\r\n    // console.log(\"distance in handle\", result, final_distance);\r\n    // return;\r\n    console.log(\"response in google callnack\", result);\r\n    if (result.status === \"SUCCESS\") {\r\n      const distance = parseFloat(result.distance * 0.001);\r\n      console.log(\"response in google float\", distance);\r\n      dispatch(setDeliveryDistance(distance));\r\n      getNewDeliveryCharges(distance);\r\n      // getDeliveryCharges(distance);\r\n    } else {\r\n      console.log(\"error: \", result.reason);\r\n      setdata({ ...data, address_error: result.reason });\r\n    }\r\n  };\r\n  const isDistanceInDeliveryRange = (distance, { range }) => {\r\n    console.log(\"new distance is distnce\", distance);\r\n    let maxDistance = 0;\r\n\r\n    for (const dist in range) {\r\n      const newDistance = parseFloat(range[dist].range_to);\r\n\r\n      if (newDistance > maxDistance) {\r\n        maxDistance = newDistance;\r\n        console.log(\"new distance is\", newDistance);\r\n      }\r\n    }\r\n\r\n    if (distance <= maxDistance) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  const grandTotal = Number(getGrandTotal());\r\n\r\n  const getNewDeliveryCharges = (distance) => {\r\n    const range = main.deliveryRange?.range;\r\n    let cost;\r\n    if (\r\n      grandTotal >=\r\n        Number(main.deliveryRange?.cost[\"free_delivery_eligible_amount\"]) &&\r\n      parseInt(main.deliveryRange?.cost) !== 0\r\n    ) {\r\n      cost = 0;\r\n    } else if (range) {\r\n      for (let i = 0; i < main.deliveryRange.range.length; i++) {\r\n        if (\r\n          distance > main.deliveryRange.range[i].range_from &&\r\n          distance <= main.deliveryRange.range[i].range_to\r\n        ) {\r\n          cost = main.deliveryRange.range[i].delivery_cost;\r\n          break;\r\n        } else {\r\n          cost = main.deliveryRange.cost.std_delivery_cost || 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(setDeliveryCost(cost));\r\n    console.log(\"new selected range\", cost);\r\n  };\r\n  // const getDeliveryCharges = (dist) => {\r\n  //   console.log(\"distance in getdelibery\", dist);\r\n  //   var dc;\r\n  //   if (!main.deliveryRange) return;\r\n  //   const cost = main.deliveryRange.cost;\r\n  //   const range = main.deliveryRange.range;\r\n  //   const isTakeAway = user.isTakeAway;\r\n  //   const distance = dist;\r\n  //   console.log(\"distance range\", range);\r\n\r\n  //   const freeDeliveryRangeAmount = cost[\"free_delivery_eligible_amount\"];\r\n  //   const stdDeliveryCost = cost[\"std_delivery_cost\"] || 0;\r\n\r\n  //   console.log(\r\n  //     \"check delivery\",\r\n  //     parseInt(cost[\"free_delivery_eligible_amount\"]) === 0,\r\n  //     parseInt(cost[\"std_delivery_cost\"]) === 0,\r\n  //     grandTotal\r\n  //   );\r\n\r\n  //   const isFreeDelivery =\r\n  //     grandTotal >= Number(cost[\"free_delivery_eligible_amount\"]) &&\r\n  //     parseInt(freeDeliveryRangeAmount) !== 0;\r\n\r\n  //   console.log(\"details of range is\", isFreeDelivery);\r\n\r\n  //   if (isFreeDelivery || isTakeAway) {\r\n  //     dispatch(setDeliveryCost(0));\r\n  //     props.getdc(0);\r\n  //     return 0;\r\n  //   }\r\n  //   //\r\n  //   else if (distance === -1 || !range) {\r\n  //     console.log(\"std delivery cost\", stdDeliveryCost);\r\n  //     console.log(\"std delivery cost\", Number(stdDeliveryCost));\r\n  //     if (stdDeliveryCost) {\r\n  //       dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n  //     }\r\n  //     props.getdc(stdDeliveryCost);\r\n  //     return Number(stdDeliveryCost);\r\n  //   } else if (range) {\r\n  //     const selectedRange = range.find((rng) => {\r\n  //       const from = Number(rng[\"range_from\"]);\r\n  //       const to = Number(rng[\"range_to\"]);\r\n\r\n  //       return distance >= from && distance <= to;\r\n  //     });\r\n\r\n  //     console.log(\"range details\", selectedRange);\r\n\r\n  //     // selectedRange\r\n  //     //   ?( Number(selectedRange[\"delivery_cost\"]) || 0)\r\n  //     //   : Number(stdDeliveryCost);\r\n\r\n  //     if (selectedRange) {\r\n  //       if (selectedRange[\"delivery_cost\"]) {\r\n  //         dispatch(setDeliveryCost(selectedRange[\"delivery_cost\"]));\r\n  //         props.getdc(selectedRange[\"delivery_cost\"]);\r\n  //       } else {\r\n  //         dispatch(setDeliveryCost(0));\r\n  //         props.getdc(0);\r\n  //       }\r\n  //     } else {\r\n  //       dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n  //       props.getdc(Number(stdDeliveryCost));\r\n  //     }\r\n  //     return selectedRange\r\n  //       ? Number(selectedRange[\"delivery_cost\"] || 0)\r\n  //       : Number(stdDeliveryCost);\r\n  //   }\r\n\r\n  //   return 0;\r\n  // };\r\n  function getGrandTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   fetchAddresses();\r\n  // }, [add]);\r\n  const fetchAddresses = async () => {\r\n    setdata({ ...data, isAddressesFetched: false });\r\n    // const {\r\n    //   payload: { data: addresses },\r\n    // } = await dispatch(fetchAddressesList(user.user.clientId));\r\n\r\n    const { payload } = await dispatch(fetchAddressesList(user.user.clientId));\r\n    console.log(\"payload in fetchadderss\", payload);\r\n    var arr = [];\r\n    arr.push(payload.data);\r\n    setadd({ ...add, addresses: payload.data });\r\n    setdata({ ...data, addresses: payload.data });\r\n    //setdata({ ...data, addresses: payload, isAddressesFetched: true });\r\n    console.log(\"dtdtd\", data);\r\n\r\n    const defaultAddress = payload.data.filter(\r\n      (address) => address.is_default === \"1\",\r\n      [0]\r\n    );\r\n    console.log(\"default ebe\", defaultAddress);\r\n\r\n    console.log(\"length or default address\", user.defaultAddress);\r\n\r\n    console.log(\"defaultAddress from fetchaddress: \", defaultAddress);\r\n    if (payload.success) {\r\n      if (defaultAddress.length > 0) {\r\n        setdefaultadd(true);\r\n        dispatch(setDefaultAddress(defaultAddress));\r\n        dispatch(setSelectedAddress(defaultAddress));\r\n        props.getAddress(defaultAddress[0]);\r\n        handleDefautAddress(defaultAddress[0]);\r\n\r\n        setchangeaddress({\r\n          ...changeaddress,\r\n          data: defaultAddress[0],\r\n          listOfAddress: false,\r\n          boolean: true,\r\n          headingfornoaddress: true,\r\n        });\r\n        localStorage.setItem(\"checkoutState\", JSON.stringify(changeaddress));\r\n\r\n        setdata({ ...data, checkingChangeAddress: true });\r\n      }\r\n    }\r\n\r\n    // if (!data.selectedAddress) {\r\n    //   console.log(\"passed\");\r\n    //   handleDefautAddress(defaultAddress);\r\n    //   //  setdata({ ...data, selectedAddress: defaultAddress }); // ? will run only after refresh and no address is selected\r\n    // }\r\n\r\n    console.log(\"Selecetd Address: \", data.selectedAddress);\r\n    // this.props.setSelectedAddress(defaultAddress)\r\n\r\n    // this.handleMultipleAddress()\r\n  };\r\n  const handleDefautAddress = async (address) => {\r\n    console.log(\"address in default address\", address);\r\n    const lat = main.selectedRestaurant.lat;\r\n    const lon = main.selectedRestaurant.lon;\r\n\r\n    // const response = await Geocode.fromAddress(address[0].address1);\r\n    const response = await Geocode.fromAddress(address.address1);\r\n\r\n    const { lat: customerLat, lng: customerLng } =\r\n      response.results[0].geometry.location;\r\n\r\n    console.log(\"in handleDefaut\", api);\r\n    console.log(\"check cooridnates in first\", lat, lon);\r\n\r\n    const service = new window.google.maps.DistanceMatrixService();\r\n\r\n    // const originCord = `${origin.lat},${origin.lng}`;\r\n    // const destinationCord = `${destination.lat},${destination.lng}`;\r\n\r\n    const originCord = `${main.selectedRestaurant.address},${main.selectedRestaurant.city}, ${main.selectedRestaurant.zipcode}, ${main.selectedRestaurant.country}`;\r\n    const destinationCord = `${address.address1},${address.city},${address.zipcode},${address.country}`;\r\n\r\n    console.log(\"destination is\", destinationCord, originCord);\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [originCord],\r\n        destinations: [destinationCord],\r\n        travelMode: \"DRIVING\",\r\n        durationInTraffic: true,\r\n        avoidHighways: false,\r\n        // unitSystem: props.google.maps.UnitSystem.METRIC,\r\n        avoidTolls: false,\r\n      },\r\n      (response) => {\r\n        let reason;\r\n\r\n        let distance;\r\n\r\n        let status;\r\n\r\n        console.log(\"response in google payemnt\", response);\r\n\r\n        if (\r\n          response.rows[0].elements[0].distance === undefined &&\r\n          response.destinationAddresses[0] === \"0,0\"\r\n        ) {\r\n          // user has to choose some correct address\r\n          reason = \"Please choose an address\";\r\n          status = \"FAILED\";\r\n        } else if (\r\n          response.rows[0].elements[0].status !== undefined &&\r\n          response.rows[0].elements[0].status === \"ZERO_RESULTS\"\r\n        ) {\r\n          reason = \"Sorry, Chosen address is out of delivery range!\";\r\n          status = \"FAILED\";\r\n        } else {\r\n          status = \"SUCCESS\";\r\n          distance = response.rows[0].elements[0].distance.value;\r\n        }\r\n\r\n        handleDistanceCalucationCallback({ distance, status, reason });\r\n\r\n        // callback({\r\n        //   distance,\r\n        //   status,\r\n        //   reason,\r\n        // });\r\n      }\r\n    );\r\n\r\n    // api.calculateDistance(\r\n    //   // {\r\n    //   //   lat,\r\n    //   //   lng: lon,\r\n    //   // },\r\n    //   // {\r\n    //   //   lat: customerLat,\r\n    //   //   lng: customerLng,\r\n    //   // },\r\n    //   address.address1,\r\n    //   address.city,\r\n    //   address.zipcode,\r\n    //   address.country,\r\n    //   handleDistanceCalucationCallback\r\n    // );\r\n  };\r\n  const handleGoogleApi = (google) => {\r\n    //if (!state.googleApi) setState({ ...state, googleApi: google });\r\n\r\n    console.log(\"google in payment form\", google);\r\n    setapi(google);\r\n  };\r\n  const handleDistanceCalucationCallback = async (result) => {\r\n    console.log(\"distance is\", result);\r\n    // return;\r\n    if (result.status === \"SUCCESS\") {\r\n      const distance = parseFloat(result.distance / 1000);\r\n\r\n      dispatch(setDeliveryDistance(distance));\r\n      getNewDeliveryCharges(distance);\r\n    } else {\r\n      console.log(\"error: \", result.reason);\r\n      setdata({ ...data, address_error: result.reason });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (main.deliveryRange) getDeliveryCharges();\r\n    if (api) {\r\n      var formattedpickuptime = moment(data.pickupTime, \"HH:mm\").format(\r\n        \"HH:mm\"\r\n      );\r\n      var formatteddeliverytime = moment(data.deliveryTime, \"HH:mm\").format(\r\n        \"HH:mm\"\r\n      );\r\n      console.log(\"form\");\r\n      console.log(\"xyz2 dek\", formatteddeliverytime);\r\n      dispatch(setPickupTime(formattedpickuptime));\r\n      dispatch(setDeliveryTime(formatteddeliverytime));\r\n      // fetchAddresses();\r\n      //getDeliveryCharges();\r\n      console.log(\"api is\", api);\r\n    }\r\n  }, [api]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"address from and\", AddressFromAdd);\r\n    if (AddressFromAdd) {\r\n      handleMultipleAddress(AddressFromAdd);\r\n    }\r\n  }, [AddressFromAdd]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"state in take address\", changeaddress);\r\n  }, [changeaddress]);\r\n\r\n  return (\r\n    <>\r\n      {changeaddress.headingfornoaddress ? (\r\n        <div\r\n          className='box_style_2'\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={showAddressModal}\r\n        >\r\n          <div>\r\n            <>\r\n              <h2 className='delivery-head'>\r\n                {/* Add Delivery Address{\" \"} */}\r\n                {changeaddress.boolean ? heading.change : heading.add}\r\n              </h2>\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: \"-70px\",\r\n                  backgroundColor: \"white\",\r\n\r\n                  border: \"1px solid black\",\r\n                }}\r\n                className='button-container address-add-change hide-on-mobile'\r\n                onClick={onChangeAddressCall}\r\n              >\r\n                <span className='add-to-cart-button' style={{ color: \"black\" }}>\r\n                  {changeaddress.boolean ? heading.changeBtn : heading.addBtn}\r\n                </span>\r\n              </div>\r\n\r\n              <span\r\n                class='address-add-change hide-on-desktop'\r\n                style={{ marginTop: \"-65px\" }}\r\n                onClick={onChangeAddressCall}\r\n              >\r\n                {changeaddress.boolean ? heading.changeBtn : heading.addBtn}\r\n              </span>\r\n            </>\r\n\r\n            <>\r\n              {changeaddress.boolean ? (\r\n                <>\r\n                  <p\r\n                    style={{\r\n                      textTransform: \"uppercase\",\r\n                      fontWeight: \"700\",\r\n                      fontSize: \"20px\",\r\n                    }}\r\n                  >\r\n                    {changeaddress.data.name}\r\n                  </p>\r\n                  <p style={{ fontSize: \"15px\" }}>\r\n                    {changeaddress.data.address1}, &nbsp;{\" \"}\r\n                    {changeaddress.data.address2} &nbsp;\r\n                    {changeaddress.data.state == \"undefined\"\r\n                      ? \"\"\r\n                      : changeaddress.data.state}\r\n                  </p>\r\n\r\n                  <p style={{ fontSize: \"15px\" }}>\r\n                    {changeaddress.data.city == \"undefined\"\r\n                      ? \"\"\r\n                      : changeaddress.data.city}{\" \"}\r\n                    {changeaddress.data.zipcode} , &nbsp;{\" \"}\r\n                    {changeaddress.data.country}\r\n                  </p>\r\n                  <p style={{ fontSize: \"15px\" }}>\r\n                    phone : +{menu.restaurantInfo.phone_code} &nbsp;\r\n                    {user.user.mobile}\r\n                  </p>\r\n                </>\r\n              ) : null}\r\n            </>\r\n\r\n            {}\r\n\r\n            {/* {show ? (\r\n              <>\r\n                <span class=\"address-change\" onClick={onChangeAddressCall}>\r\n                  Change\r\n                </span>\r\n              </>\r\n            ) : null} */}\r\n          </div>\r\n\r\n          {/* {show ? (\r\n            <>\r\n              {console.log(\"address is\", data.selectedAddress)}\r\n\r\n              <p\r\n                style={{\r\n                  textTransform: \"uppercase\",\r\n                  fontWeight: \"700\",\r\n                  fontSize: \"20px\",\r\n                }}\r\n              >\r\n                {data.selectedAddress[0].name}\r\n              </p>\r\n              <p style={{ fontSize: \"15px\" }}>\r\n                {data.selectedAddress[0].address1}, &nbsp;{\" \"}\r\n                {data.selectedAddress[0].address2} &nbsp;\r\n                {data.selectedAddress[0].state}, &nbsp;\r\n              </p>\r\n\r\n              <p style={{ fontSize: \"15px\" }}>\r\n                {data.selectedAddress[0].city} - &nbsp;\r\n                {data.selectedAddress[0].zipcode} , &nbsp;{\" \"}\r\n                {data.selectedAddress[0].country}\r\n              </p>\r\n            </>\r\n          ) : null} */}\r\n        </div>\r\n      ) : null}\r\n      {changeaddress.listOfAddress ? (\r\n        <>\r\n          <div\r\n            className='box_style_2'\r\n            // style={{ cursor: \"pointer\" }}\r\n            // onClick={showAddressModal}\r\n          >\r\n            <div>\r\n              <h2 className='delivery-head'>Your Addresses </h2>\r\n            </div>\r\n\r\n            {add.addresses.map((address, i) => {\r\n              console.log(\"add\", address);\r\n              return (\r\n                <>\r\n                  <section\r\n                    className='address-section-paymentform'\r\n                    style={{ backgroundColor: \"#eae8ed\" }}\r\n                    // key={i}\r\n                  >\r\n                    <Address address={address} key={i} />\r\n                    <ul className='address-actions'>\r\n                      <li //onClick={() => callAddressModal(true, address)}\r\n                      >\r\n                        <button\r\n                          onClick={() => handleMultipleAddress(address)}\r\n                          style={{\r\n                            height: \"35px\",\r\n\r\n                            backgroundColor: \"#302f31\",\r\n                            color: \"white\",\r\n                            borderRadius: \"5px\",\r\n                          }}\r\n                        >\r\n                          Deliver here\r\n                        </button>\r\n                        {/* <h5\r\n                          className=\"actions\"\r\n                          onClick={() => handleMultipleAddress(address)}\r\n                          style={{\r\n                            height: \"35px\",\r\n                            paddingTop: \"8px\",\r\n                            backgroundColor: \"#302f31\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          Deliver Here\r\n                        </h5> */}\r\n                        {/* </span> */}\r\n                      </li>\r\n                    </ul>\r\n                  </section>{\" \"}\r\n                  &nbsp; &nbsp; &nbsp;\r\n                </>\r\n              );\r\n            })}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: \"0px\",\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n\r\n                border: \"1px solid black\",\r\n              }}\r\n              className='button-container-add-address-mobile'\r\n              onClick={handleAddAddressOnPaymentForm}\r\n            >\r\n              <p\r\n                className='hide-on-desktop'\r\n                style={{ marginTop: \"15px\", fontSize: \"20px\" }}\r\n              >\r\n                ADD\r\n              </p>\r\n              <span className='add-to-cart-button' style={{ color: \"black\" }}>\r\n                Add\r\n              </span>\r\n              {/* <span className=\"add-to-cart-button-plus\">\r\n                <AddIcon />\r\n              </span> */}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      {modal.modal.modalToShow == \"findAddress\" ? (\r\n        <ChooseAddress\r\n          refetchAddresses={sethandleadd}\r\n          bool='yes'\r\n          getAddress={setAddressFromAdd}\r\n          // isItFromCheckout={setfrompayment}\r\n        />\r\n      ) : null}\r\n      <div style={{ display: \"none\" }}>\r\n        <GoogleMap\r\n          address={main.selectedRestaurant.address}\r\n          lat={Number(main.selectedRestaurant.lat)}\r\n          lng={Number(main.selectedRestaurant.lon)}\r\n          googleApi={handleGoogleApi}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default TakeAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\SelectTimingsForPickup.jsx",["1000","1001","1002","1003","1004"],"import moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { setPickupTime } from \"../../state-management/user/actions\";\r\n\r\nconst SelectTimingsForPickup = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const [show, setshow] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [disabletime, setdisabletime] = useState(false);\r\n  const settime = () => {\r\n    var moment = require(\"moment-timezone\");\r\n\r\n    var o = moment(`${main.opening}`, \"HH:mm\");\r\n    var c = moment(main.closing, \"HH:mm\");\r\n    // var local_time = moment\r\n    //   .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n    //   .format(\"HH:mm\");\r\n    var local_time = moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n      .format(\"HH:mm\");\r\n\r\n    var x = moment(local_time, \"HH:mm\");\r\n    var diff = Math.abs(c.diff(x, \"minutes\"));\r\n    console.log(\"diff is\", Math.abs(diff));\r\n    return moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n      .add(30, \"minutes\")\r\n      .format(\"HH:mm\") >= main.opening &&\r\n      moment\r\n        .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n        .add(30, \"minutes\")\r\n        .format(\"HH:mm\") <= main.closing\r\n      ? moment\r\n          .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n          .add(30, \"minutes\")\r\n      : diff > 30\r\n      ? moment(main.opening, \"HH:mm\")\r\n      : moment(main.closing, \"HH:mm\");\r\n    // moment(main.opening, \"HH:mm\");\r\n  };\r\n  let x = JSON.parse(window.localStorage.getItem(\"ptime\"));\r\n  const [data, setdata] = useState({\r\n    openingBusinesHours: main.opening,\r\n    closingBusinesHours: main.closing,\r\n    businessHours: main.businessHour,\r\n\r\n    pickupTime: x ? moment(x, \"HH:mm\") : settime(),\r\n    deliveryTime: settime(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"diabletime is\", disabletime);\r\n  }, [disabletime]);\r\n  const getMinHours = () => {\r\n    const businessHoursFrom = parseInt(\r\n      data.businessHours.split(\"-\")[0].split(\":\")[0]\r\n    );\r\n\r\n    const minHours = [];\r\n    for (let i = 0; i < businessHoursFrom; i++) {\r\n      minHours.push(i);\r\n    }\r\n    // console.log(minHours);\r\n    return minHours;\r\n  };\r\n\r\n  useEffect(() => {\r\n    var formatted = moment(data.pickupTime, \"HH:mm\").format(\"HH:mm\");\r\n    props.getpickuptime(formatted);\r\n    var x1 = settime();\r\n    var fx1 = moment(x1, \"Hh:mm\").format(\"HH:mm\");\r\n    var y1 = main.closing;\r\n    console.log(\"x1y1 are\", fx1, y1);\r\n    if (fx1 == y1) {\r\n      setdisabletime(true);\r\n    }\r\n  }, []);\r\n\r\n  // ? Get the businesss hours end from businessHours props\r\n  const getMaxHours = () => {\r\n    const businessHoursTo = parseInt(\r\n      data.businessHours.split(\"-\")[1].split(\":\")[0]\r\n    );\r\n    const maxHours = [];\r\n    if (Number(data.businessHours.split(\"-\")[1].split(\":\")[1] > 0)) {\r\n      for (let i = businessHoursTo + 1; i < 24; i++) {\r\n        maxHours.push(i);\r\n      }\r\n    } else {\r\n      for (let i = businessHoursTo; i < 24; i++) {\r\n        maxHours.push(i);\r\n      }\r\n      // console.log( Number((this.state.businessHours.split(\"-\")[1].split(\":\")[1]) <0))\r\n    }\r\n\r\n    // console.log(this.state.businessHours.split(\"-\")[1].split(\":\")[1]);\r\n    return maxHours;\r\n  };\r\n  const getDisabledHours = () => {\r\n    let hours = [...getMinHours(), ...getMaxHours()]; //? restricting business hours in timer, so no need for seperate validation for pickup time\r\n    if (moment().minute() > 30) {\r\n      for (\r\n        let i = 0;\r\n        i <\r\n        moment\r\n          .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n          .hour() +\r\n          1;\r\n        i++\r\n      ) {\r\n        hours.push(i);\r\n      }\r\n    }\r\n\r\n    for (\r\n      let i = 0;\r\n      i <\r\n      moment\r\n        .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n        .hour();\r\n      i++\r\n    ) {\r\n      hours.push(i);\r\n    }\r\n    // console.log(hours);\r\n    return hours;\r\n  };\r\n  const onPickupTimeChange = (time, timeString) => {\r\n    // if (!data.businessHours) {\r\n    //   setdata({ ...data, pickupTime: null });\r\n\r\n    //   return false;\r\n    // }\r\n    // we are moving in circles here, we have separate opening and closing object, this is unnecessary code.\r\n    const selectedTime = moment(time, \"HH:mm\").format(\"HH:mm\");\r\n    var businessHoursFrom = moment(data.openingBusinesHours, \"HH:mm\").format(\r\n      \"HH:mm\"\r\n    );\r\n    var businessHoursTo = moment(data.closingBusinesHours, \"HH:mm\").format(\r\n      \"HH:mm\"\r\n    );\r\n\r\n    console.log(\"selected time\", timeString);\r\n    // const businessHoursFromTo = data.businessHours.split(\" - \");\r\n    // const businessHoursFrom = moment(businessHoursFromTo[0], \"HH:mm\");\r\n    // const businessHoursTo = moment(businessHoursFromTo[1], \"HH:mm\");\r\n\r\n    console.log(\"from\", businessHoursFrom);\r\n    console.log(\"To\", businessHoursTo);\r\n    var local_after = moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n      .add(30, \"minutes\")\r\n\r\n      .format(\"HH:mm\");\r\n\r\n    console.log(\"after is\", local_after);\r\n\r\n    if (timeString < local_after) {\r\n      console.log(\"1 level\");\r\n      var formatted = moment(data.pickupTime, \"HH:mm\").format(\"hh:mm A\");\r\n\r\n      notification[\"warning\"]({\r\n        message: `Please select time more than or equal to ${formatted}`,\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    } else if (timeString > main.opening && timeString < main.closing) {\r\n      localStorage.setItem(\"ptime\", JSON.stringify(timeString));\r\n      setdata({ ...data, pickupTime: selectedTime });\r\n      props.getpickuptime(timeString);\r\n      dispatch(setPickupTime(timeString));\r\n      notification[\"success\"]({\r\n        message: \"Time changed Successfully\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    } else {\r\n      setdata({ ...data, pickupTime: null });\r\n      notification[\"warning\"]({\r\n        message: \"Sorry, Please select time between business hours\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    }\r\n  };\r\n  const showAddressModal = () => {\r\n    setshow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='box_style_2'\r\n        style={{ cursor: \"pointer\", marginTop: \"-20px\" }}\r\n        onClick={showAddressModal}\r\n      >\r\n        <h2 className='delivery-head'>Pickup Details</h2>\r\n        <div className='pickup-details'>\r\n          <h3>\r\n            <strong className='delivery-head-business'>\r\n              Business hours : {main.businessHour}\r\n            </strong>\r\n          </h3>\r\n          <br />\r\n          <div\r\n            className='address-details'\r\n            style={{\r\n              color: \"black\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            Selected Pickup Time : &nbsp;\r\n            <div className='timepicker-container'>\r\n              <TimePicker\r\n                defaultValue={data.pickupTime}\r\n                disabledHours={getDisabledHours}\r\n                onChange={onPickupTimeChange}\r\n                format='HH:mm'\r\n                disabled={disabletime}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {disabletime ? (\r\n        <p\r\n          style={{\r\n            color: \"#968ea1\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"13px\",\r\n            marginTop: \"-45px\",\r\n            marginLeft: \"25px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          you cannot change time as we are closing soon!\r\n        </p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default SelectTimingsForPickup;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\SelectTimingsForDelivery.jsx",["1005","1006","1007","1008","1009"],"import moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { setDeliveryTime } from \"../../state-management/user/actions\";\r\nconst SelectTimingsForDelivery = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [show, setshow] = useState(false);\r\n  const [disabletime, setdisabletime] = useState(false);\r\n  const settime = () => {\r\n    var moment = require(\"moment-timezone\");\r\n\r\n    var o = moment(`${main.opening}`, \"HH:mm\");\r\n    var c = moment(main.closing, \"HH:mm\");\r\n    // var local_time = moment\r\n    //   .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n    //   .format(\"HH:mm\");\r\n    var local_time = moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n      .format(\"HH:mm\");\r\n\r\n    var x = moment(local_time, \"HH:mm\");\r\n    var diff = Math.abs(c.diff(x, \"minutes\"));\r\n    console.log(\"diff is\", Math.abs(diff));\r\n    return moment\r\n      .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n      .add(30, \"minutes\")\r\n      .format(\"HH:mm\") >= main.opening &&\r\n      moment\r\n        .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n        .add(30, \"minutes\")\r\n        .format(\"HH:mm\") <= main.closing\r\n      ? moment\r\n          .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n          .add(30, \"minutes\")\r\n      : diff > 30\r\n      ? moment(main.opening, \"HH:mm\")\r\n      : moment(main.closing, \"HH:mm\");\r\n  };\r\n  let x = JSON.parse(window.localStorage.getItem(\"dtime\"));\r\n  const [data, setdata] = useState({\r\n    openingBusinesHours: main.opening,\r\n    closingBusinesHours: main.closing,\r\n    businessHours: main.businessHour,\r\n    deliveryTime: x ? moment(x, \"HH:mm\") : settime(),\r\n  });\r\n\r\n  const getMinHours = () => {\r\n    const businessHoursFrom = parseInt(\r\n      main.businessHour.split(\"-\")[0].split(\":\")[0]\r\n    );\r\n\r\n    const minHours = [];\r\n    for (let i = 0; i < businessHoursFrom; i++) {\r\n      minHours.push(i);\r\n    }\r\n    // console.log(minHours);\r\n    return minHours;\r\n  };\r\n  useEffect(() => {\r\n    var formatted = moment(data.deliveryTime, \"HH:mm\").format(\"HH:mm\");\r\n    props.getdeliverytime(formatted);\r\n    // let x = JSON.parse(window.localStorage.getItem(\"dtime\"));\r\n    // if (x) {\r\n    //   setdata({ ...data, deliveryTime: moment(x, \"HH:mm\") });\r\n    // } else {\r\n    //   setdata({ ...data, deliveryTime: settime()});\r\n    // }\r\n    var x1 = settime();\r\n    var fx1 = moment(x1, \"Hh:mm\").format(\"HH:mm\");\r\n    var y1 = main.closing;\r\n    console.log(\"x1y1 are\", fx1, y1);\r\n    if (fx1 == y1) {\r\n      setdisabletime(true);\r\n    }\r\n  }, []);\r\n  // ? Get the businesss hours end from businessHours props\r\n  const getMaxHours = () => {\r\n    const businessHoursTo = parseInt(\r\n      main.businessHour.split(\"-\")[1].split(\":\")[0]\r\n    );\r\n    const maxHours = [];\r\n    if (Number(data.businessHours.split(\"-\")[1].split(\":\")[1] > 0)) {\r\n      for (let i = businessHoursTo + 1; i < 24; i++) {\r\n        maxHours.push(i);\r\n      }\r\n    } else {\r\n      for (let i = businessHoursTo; i < 24; i++) {\r\n        maxHours.push(i);\r\n      }\r\n      // console.log( Number((this.state.businessHours.split(\"-\")[1].split(\":\")[1]) <0))\r\n    }\r\n\r\n    // console.log(this.state.businessHours.split(\"-\")[1].split(\":\")[1]);\r\n    return maxHours;\r\n  };\r\n  const getDisabledHours = () => {\r\n    let hours = [...getMinHours(), ...getMaxHours()]; //? restricting business hours in timer, so no need for seperate validation for pickup time\r\n    if (moment().minute() > 30) {\r\n      for (\r\n        let i = 0;\r\n        i <\r\n        moment\r\n          .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n          .hour() +\r\n          1;\r\n        i++\r\n      ) {\r\n        hours.push(i);\r\n      }\r\n    }\r\n\r\n    for (\r\n      let i = 0;\r\n      i <\r\n      moment\r\n        .tz(moment(), `${menu.restaurantInfo.timezone}`)\r\n\r\n        .hour();\r\n      i++\r\n    ) {\r\n      hours.push(i);\r\n    }\r\n    // console.log(hours);\r\n    return hours;\r\n  };\r\n  const onDeliveryTimeChange = (time, timeString) => {\r\n    // if (!data.businessHours) {\r\n    //   setdata({ ...data, pickupTime: null });\r\n\r\n    //   return false;\r\n    // }\r\n    // we are moving in circles here, we have separate opening and closing object, this is unnecessary code.\r\n    const selectedTime = moment(time, \"HH:mm\").format(\"HH:mm\");\r\n    var businessHoursFrom = moment(data.openingBusinesHours, \"HH:mm\").format(\r\n      \"HH:mm\"\r\n    );\r\n    var businessHoursTo = moment(data.closingBusinesHours, \"HH:mm\").format(\r\n      \"HH:mm\"\r\n    );\r\n    console.log(\r\n      \"selected time\",\r\n      selectedTime,\r\n      businessHoursTo,\r\n      businessHoursFrom\r\n    );\r\n    // const businessHoursFromTo = main.businessHour.split(\" - \");\r\n    // const businessHoursFrom = moment(businessHoursFromTo[0], \"HH:mm\");\r\n    // const businessHoursTo = moment(businessHoursFromTo[1], \"HH:mm\");\r\n\r\n    console.log(\"To time\", businessHoursTo);\r\n\r\n    if (selectedTime < moment().add(30, \"minute\")) {\r\n      console.log(\"1 level\");\r\n      var formatted = moment(data.deliveryTime, \"HH:mm\").format(\"hh:mm A\");\r\n\r\n      notification[\"warning\"]({\r\n        message: `Please select time more than or equal to ${formatted}`,\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    } else if (\r\n      selectedTime > businessHoursFrom &&\r\n      selectedTime < businessHoursTo\r\n    ) {\r\n      setdata({ ...data, deliveryTime: selectedTime });\r\n      localStorage.setItem(\"dtime\", JSON.stringify(timeString));\r\n      dispatch(setDeliveryTime(timeString));\r\n      props.getdeliverytime(timeString);\r\n      notification[\"success\"]({\r\n        message: \"Time changed Successfully\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    } else {\r\n      setdata({ ...data, pickupTime: null });\r\n      notification[\"warning\"]({\r\n        message: \"Sorry, Please select time between business hours\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    }\r\n  };\r\n  const showAddressModal = () => {\r\n    setshow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"data ind eliveryTime\", data);\r\n  }, [data]);\r\n  return (\r\n    <>\r\n      <div\r\n        className='box_style_2'\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={showAddressModal}\r\n      >\r\n        <div className='pickup-details' style={{ height: \"45px\" }}>\r\n          <div\r\n            className='address-details'\r\n            style={{\r\n              color: \"black\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            Selected Delivery Time : &nbsp;\r\n            <div className='timepicker-container'>\r\n              <TimePicker\r\n                defaultValue={data.deliveryTime}\r\n                disabledHours={getDisabledHours}\r\n                onChange={onDeliveryTimeChange}\r\n                format='HH:mm'\r\n                disabled={disabletime}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {disabletime ? (\r\n        <p\r\n          style={{\r\n            color: \"#968ea1\",\r\n            fontWeight: \"700\",\r\n            fontSize: \"13px\",\r\n            marginTop: \"-25px\",\r\n            marginLeft: \"25px\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          you cannot change time as we are closing soon!\r\n        </p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default SelectTimingsForDelivery;\r\n",{"ruleId":"1010","replacedBy":"1011"},{"ruleId":"1012","replacedBy":"1013"},{"ruleId":"1014","severity":1,"message":"1015","line":3,"column":10,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1018","line":3,"column":20,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1019","line":3,"column":27,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":33},{"ruleId":"1014","severity":1,"message":"1020","line":5,"column":8,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1021","line":6,"column":8,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1022","line":7,"column":8,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1023","line":8,"column":17,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1024","line":8,"column":27,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":36},{"ruleId":"1014","severity":1,"message":"1025","line":10,"column":8,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1026","line":14,"column":10,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1027","line":14,"column":21,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1028","line":33,"column":10,"nodeType":"1016","messageId":"1017","endLine":33,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1029","line":33,"column":17,"nodeType":"1016","messageId":"1017","endLine":33,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1030","line":34,"column":9,"nodeType":"1016","messageId":"1017","endLine":34,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1031","line":8,"column":10,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":22},{"ruleId":"1032","severity":1,"message":"1033","line":117,"column":5,"nodeType":"1034","messageId":"1035","endLine":121,"endColumn":9},{"ruleId":"1014","severity":1,"message":"1036","line":3,"column":10,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1037","line":15,"column":8,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1038","line":19,"column":9,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1039","line":22,"column":10,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1040","line":25,"column":9,"nodeType":"1016","messageId":"1017","endLine":25,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":100,"column":19,"nodeType":"1043","endLine":110,"endColumn":20},{"ruleId":"1044","severity":1,"message":"1045","line":104,"column":23,"nodeType":"1046","messageId":"1035","endLine":104,"endColumn":28},{"ruleId":"1041","severity":1,"message":"1042","line":119,"column":15,"nodeType":"1043","endLine":125,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1047","line":132,"column":15,"nodeType":"1043","endLine":137,"endColumn":16},{"ruleId":"1044","severity":1,"message":"1045","line":149,"column":27,"nodeType":"1046","messageId":"1035","endLine":149,"endColumn":32},{"ruleId":"1041","severity":1,"message":"1042","line":163,"column":19,"nodeType":"1043","endLine":174,"endColumn":20},{"ruleId":"1044","severity":1,"message":"1045","line":167,"column":23,"nodeType":"1046","messageId":"1035","endLine":167,"endColumn":28},{"ruleId":"1041","severity":1,"message":"1042","line":186,"column":23,"nodeType":"1043","endLine":195,"endColumn":24},{"ruleId":"1048","severity":1,"message":"1049","line":204,"column":25,"nodeType":"1043","endLine":204,"endColumn":67},{"ruleId":"1041","severity":1,"message":"1042","line":207,"column":23,"nodeType":"1043","endLine":210,"endColumn":24},{"ruleId":"1041","severity":1,"message":"1042","line":228,"column":25,"nodeType":"1043","endLine":232,"endColumn":26},{"ruleId":"1041","severity":1,"message":"1042","line":260,"column":25,"nodeType":"1043","endLine":263,"endColumn":26},{"ruleId":"1041","severity":1,"message":"1042","line":274,"column":23,"nodeType":"1043","endLine":289,"endColumn":24},{"ruleId":"1041","severity":1,"message":"1042","line":294,"column":23,"nodeType":"1043","endLine":309,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1050","line":3,"column":8,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":12},{"ruleId":"1014","severity":1,"message":"1051","line":8,"column":3,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":19},{"ruleId":"1044","severity":1,"message":"1045","line":49,"column":21,"nodeType":"1046","messageId":"1035","endLine":49,"endColumn":26},{"ruleId":"1041","severity":1,"message":"1042","line":123,"column":17,"nodeType":"1043","endLine":131,"endColumn":18},{"ruleId":"1041","severity":1,"message":"1042","line":137,"column":17,"nodeType":"1043","endLine":145,"endColumn":18},{"ruleId":"1048","severity":1,"message":"1049","line":187,"column":21,"nodeType":"1043","endLine":190,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":196,"column":21,"nodeType":"1043","endLine":199,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":204,"column":21,"nodeType":"1043","endLine":207,"endColumn":23},{"ruleId":"1014","severity":1,"message":"1052","line":23,"column":8,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1053","line":24,"column":8,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1054","line":26,"column":8,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1055","line":51,"column":9,"nodeType":"1016","messageId":"1017","endLine":51,"endColumn":20},{"ruleId":"1056","severity":1,"message":"1057","line":54,"column":21,"nodeType":"1058","messageId":"1059","endLine":54,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":55,"column":18,"nodeType":"1062","messageId":"1035","endLine":55,"endColumn":20},{"ruleId":"1063","severity":1,"message":"1064","line":76,"column":9,"nodeType":"1016","messageId":"1065","endLine":76,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1066","line":78,"column":9,"nodeType":"1016","messageId":"1065","endLine":78,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1067","line":79,"column":9,"nodeType":"1016","messageId":"1065","endLine":79,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1055","line":120,"column":9,"nodeType":"1016","messageId":"1017","endLine":120,"endColumn":20},{"ruleId":"1056","severity":1,"message":"1057","line":123,"column":21,"nodeType":"1058","messageId":"1059","endLine":123,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":124,"column":18,"nodeType":"1062","messageId":"1035","endLine":124,"endColumn":20},{"ruleId":"1060","severity":1,"message":"1061","line":145,"column":18,"nodeType":"1062","messageId":"1035","endLine":145,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1055","line":165,"column":9,"nodeType":"1016","messageId":"1017","endLine":165,"endColumn":20},{"ruleId":"1056","severity":1,"message":"1057","line":168,"column":21,"nodeType":"1058","messageId":"1059","endLine":168,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":169,"column":18,"nodeType":"1062","messageId":"1035","endLine":169,"endColumn":20},{"ruleId":"1060","severity":1,"message":"1061","line":188,"column":18,"nodeType":"1062","messageId":"1035","endLine":188,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1068","line":1,"column":50,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":63},{"ruleId":"1056","severity":1,"message":"1057","line":354,"column":60,"nodeType":"1058","messageId":"1059","endLine":354,"endColumn":62},{"ruleId":"1056","severity":1,"message":"1057","line":358,"column":55,"nodeType":"1058","messageId":"1059","endLine":358,"endColumn":57},{"ruleId":"1060","severity":1,"message":"1061","line":365,"column":46,"nodeType":"1062","messageId":"1035","endLine":365,"endColumn":48},{"ruleId":"1069","severity":1,"message":"1070","line":656,"column":29,"nodeType":"1058","messageId":"1071","endLine":675,"endColumn":6},{"ruleId":"1056","severity":1,"message":"1072","line":656,"column":39,"nodeType":"1058","messageId":"1073","endLine":656,"endColumn":41},{"ruleId":"1014","severity":1,"message":"1074","line":4,"column":21,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1075","line":16,"column":3,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1076","line":19,"column":3,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1077","line":21,"column":3,"nodeType":"1016","messageId":"1017","endLine":21,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1078","line":22,"column":3,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1079","line":23,"column":3,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1080","line":26,"column":3,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1081","line":27,"column":3,"nodeType":"1016","messageId":"1017","endLine":27,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1082","line":31,"column":10,"nodeType":"1016","messageId":"1017","endLine":31,"endColumn":28},{"ruleId":"1014","severity":1,"message":"1083","line":32,"column":10,"nodeType":"1016","messageId":"1017","endLine":32,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1084","line":34,"column":3,"nodeType":"1016","messageId":"1017","endLine":34,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1085","line":35,"column":3,"nodeType":"1016","messageId":"1017","endLine":35,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1086","line":37,"column":10,"nodeType":"1016","messageId":"1017","endLine":37,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1053","line":38,"column":8,"nodeType":"1016","messageId":"1017","endLine":38,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1087","line":50,"column":3,"nodeType":"1016","messageId":"1017","endLine":50,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1088","line":51,"column":3,"nodeType":"1016","messageId":"1017","endLine":51,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1089","line":55,"column":3,"nodeType":"1016","messageId":"1017","endLine":55,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1090","line":66,"column":9,"nodeType":"1016","messageId":"1017","endLine":66,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1092","line":92,"column":6,"nodeType":"1093","endLine":92,"endColumn":26,"suggestions":"1094"},{"ruleId":"1056","severity":1,"message":"1057","line":27,"column":29,"nodeType":"1058","messageId":"1059","endLine":27,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1061","line":61,"column":20,"nodeType":"1062","messageId":"1035","endLine":61,"endColumn":22},{"ruleId":"1063","severity":1,"message":"1095","line":62,"column":11,"nodeType":"1016","messageId":"1065","endLine":62,"endColumn":25},{"ruleId":"1056","severity":1,"message":"1057","line":66,"column":55,"nodeType":"1058","messageId":"1059","endLine":66,"endColumn":57},{"ruleId":"1014","severity":1,"message":"1096","line":102,"column":11,"nodeType":"1016","messageId":"1017","endLine":102,"endColumn":21},{"ruleId":"1060","severity":1,"message":"1061","line":119,"column":32,"nodeType":"1062","messageId":"1035","endLine":119,"endColumn":34},{"ruleId":"1060","severity":1,"message":"1061","line":119,"column":51,"nodeType":"1062","messageId":"1035","endLine":119,"endColumn":53},{"ruleId":"1014","severity":1,"message":"1024","line":1,"column":17,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1097","line":2,"column":10,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1098","line":2,"column":15,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1099","line":3,"column":8,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1100","line":3,"column":10,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1101","line":9,"column":3,"nodeType":"1016","messageId":"1017","endLine":9,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1053","line":11,"column":8,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1102","line":12,"column":8,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1103","line":16,"column":8,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1037","line":17,"column":8,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1104","line":18,"column":8,"nodeType":"1016","messageId":"1017","endLine":18,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1105","line":19,"column":8,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1106","line":24,"column":8,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1107","line":26,"column":8,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1108","line":28,"column":8,"nodeType":"1016","messageId":"1017","endLine":28,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1109","line":29,"column":8,"nodeType":"1016","messageId":"1017","endLine":29,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1088","line":34,"column":3,"nodeType":"1016","messageId":"1017","endLine":34,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1110","line":36,"column":8,"nodeType":"1016","messageId":"1017","endLine":36,"endColumn":23},{"ruleId":"1014","severity":1,"message":"1038","line":44,"column":9,"nodeType":"1016","messageId":"1017","endLine":44,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1111","line":80,"column":10,"nodeType":"1016","messageId":"1017","endLine":80,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1112","line":80,"column":21,"nodeType":"1016","messageId":"1017","endLine":80,"endColumn":33},{"ruleId":"1014","severity":1,"message":"1113","line":82,"column":10,"nodeType":"1016","messageId":"1017","endLine":82,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1114","line":119,"column":6,"nodeType":"1093","endLine":119,"endColumn":8,"suggestions":"1115"},{"ruleId":"1091","severity":1,"message":"1116","line":123,"column":6,"nodeType":"1093","endLine":123,"endColumn":27,"suggestions":"1117"},{"ruleId":"1063","severity":1,"message":"1066","line":140,"column":9,"nodeType":"1016","messageId":"1065","endLine":140,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1118","line":141,"column":9,"nodeType":"1016","messageId":"1065","endLine":141,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1119","line":142,"column":9,"nodeType":"1016","messageId":"1065","endLine":142,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1120","line":143,"column":9,"nodeType":"1016","messageId":"1065","endLine":143,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1066","line":176,"column":9,"nodeType":"1016","messageId":"1065","endLine":176,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1118","line":177,"column":9,"nodeType":"1016","messageId":"1065","endLine":177,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1119","line":178,"column":9,"nodeType":"1016","messageId":"1065","endLine":178,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1120","line":179,"column":9,"nodeType":"1016","messageId":"1065","endLine":179,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1066","line":198,"column":9,"nodeType":"1016","messageId":"1065","endLine":198,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1118","line":199,"column":9,"nodeType":"1016","messageId":"1065","endLine":199,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1119","line":200,"column":9,"nodeType":"1016","messageId":"1065","endLine":200,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1120","line":201,"column":9,"nodeType":"1016","messageId":"1065","endLine":201,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1066","line":226,"column":9,"nodeType":"1016","messageId":"1065","endLine":226,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1118","line":227,"column":9,"nodeType":"1016","messageId":"1065","endLine":227,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1119","line":228,"column":9,"nodeType":"1016","messageId":"1065","endLine":228,"endColumn":10},{"ruleId":"1063","severity":1,"message":"1120","line":229,"column":9,"nodeType":"1016","messageId":"1065","endLine":229,"endColumn":10},{"ruleId":"1060","severity":1,"message":"1061","line":258,"column":39,"nodeType":"1062","messageId":"1035","endLine":258,"endColumn":41},{"ruleId":"1014","severity":1,"message":"1121","line":334,"column":9,"nodeType":"1016","messageId":"1017","endLine":334,"endColumn":15},{"ruleId":"1056","severity":1,"message":"1057","line":388,"column":30,"nodeType":"1058","messageId":"1059","endLine":388,"endColumn":32},{"ruleId":"1056","severity":1,"message":"1057","line":393,"column":29,"nodeType":"1058","messageId":"1059","endLine":393,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1049","line":463,"column":21,"nodeType":"1043","endLine":463,"endColumn":71},{"ruleId":"1048","severity":1,"message":"1049","line":473,"column":21,"nodeType":"1043","endLine":473,"endColumn":67},{"ruleId":"1048","severity":1,"message":"1049","line":483,"column":21,"nodeType":"1043","endLine":483,"endColumn":73},{"ruleId":"1048","severity":1,"message":"1049","line":493,"column":21,"nodeType":"1043","endLine":493,"endColumn":68},{"ruleId":"1060","severity":1,"message":"1061","line":511,"column":45,"nodeType":"1062","messageId":"1035","endLine":511,"endColumn":47},{"ruleId":"1048","severity":1,"message":"1049","line":513,"column":31,"nodeType":"1043","endLine":516,"endColumn":33},{"ruleId":"1056","severity":1,"message":"1122","line":599,"column":64,"nodeType":"1123","messageId":"1059","endLine":599,"endColumn":73},{"ruleId":"1056","severity":1,"message":"1122","line":622,"column":66,"nodeType":"1123","messageId":"1059","endLine":622,"endColumn":75},{"ruleId":"1056","severity":1,"message":"1122","line":634,"column":57,"nodeType":"1123","messageId":"1059","endLine":634,"endColumn":66},{"ruleId":"1014","severity":1,"message":"1124","line":645,"column":39,"nodeType":"1016","messageId":"1017","endLine":645,"endColumn":50},{"ruleId":"1060","severity":1,"message":"1061","line":836,"column":51,"nodeType":"1062","messageId":"1035","endLine":836,"endColumn":53},{"ruleId":"1060","severity":1,"message":"1061","line":848,"column":51,"nodeType":"1062","messageId":"1035","endLine":848,"endColumn":53},{"ruleId":"1014","severity":1,"message":"1125","line":13,"column":8,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1126","line":14,"column":8,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1127","line":15,"column":8,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1106","line":16,"column":8,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1128","line":17,"column":8,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1129","line":21,"column":10,"nodeType":"1016","messageId":"1017","endLine":21,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1130","line":22,"column":8,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1036","line":25,"column":10,"nodeType":"1016","messageId":"1017","endLine":25,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1131","line":26,"column":10,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1132","line":26,"column":15,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1133","line":26,"column":23,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1134","line":27,"column":10,"nodeType":"1016","messageId":"1017","endLine":27,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1135","line":29,"column":10,"nodeType":"1016","messageId":"1017","endLine":29,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1136","line":41,"column":7,"nodeType":"1016","messageId":"1017","endLine":41,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1137","line":64,"column":24,"nodeType":"1016","messageId":"1017","endLine":64,"endColumn":39},{"ruleId":"1014","severity":1,"message":"1138","line":67,"column":10,"nodeType":"1016","messageId":"1017","endLine":67,"endColumn":17},{"ruleId":"1091","severity":1,"message":"1139","line":100,"column":6,"nodeType":"1093","endLine":100,"endColumn":8,"suggestions":"1140"},{"ruleId":"1014","severity":1,"message":"1141","line":106,"column":9,"nodeType":"1016","messageId":"1017","endLine":106,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":305,"column":15,"nodeType":"1043","endLine":313,"endColumn":17},{"ruleId":"1056","severity":1,"message":"1142","line":362,"column":75,"nodeType":"1058","messageId":"1073","endLine":362,"endColumn":77},{"ruleId":"1060","severity":1,"message":"1061","line":363,"column":25,"nodeType":"1062","messageId":"1035","endLine":363,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1061","line":373,"column":32,"nodeType":"1062","messageId":"1035","endLine":373,"endColumn":34},{"ruleId":"1060","severity":1,"message":"1061","line":383,"column":32,"nodeType":"1062","messageId":"1035","endLine":383,"endColumn":34},{"ruleId":"1060","severity":1,"message":"1061","line":409,"column":45,"nodeType":"1062","messageId":"1035","endLine":409,"endColumn":47},{"ruleId":"1014","severity":1,"message":"1143","line":8,"column":3,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1128","line":3,"column":8,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1144","line":4,"column":10,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1145","line":4,"column":23,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1146","line":5,"column":10,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1036","line":5,"column":22,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1015","line":5,"column":28,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":36},{"ruleId":"1014","severity":1,"message":"1018","line":5,"column":38,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":43},{"ruleId":"1014","severity":1,"message":"1147","line":6,"column":10,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1148","line":11,"column":17,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1149","line":12,"column":7,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":10},{"ruleId":"1150","severity":1,"message":"1151","line":14,"column":3,"nodeType":"1152","messageId":"1153","endLine":18,"endColumn":4},{"ruleId":"1056","severity":1,"message":"1057","line":15,"column":58,"nodeType":"1058","messageId":"1059","endLine":15,"endColumn":60},{"ruleId":"1041","severity":1,"message":"1047","line":26,"column":7,"nodeType":"1043","endLine":29,"endColumn":8},{"ruleId":"1048","severity":1,"message":"1154","line":40,"column":17,"nodeType":"1043","endLine":40,"endColumn":50},{"ruleId":"1056","severity":1,"message":"1142","line":53,"column":71,"nodeType":"1058","messageId":"1073","endLine":53,"endColumn":73},{"ruleId":"1060","severity":1,"message":"1061","line":54,"column":30,"nodeType":"1062","messageId":"1035","endLine":54,"endColumn":32},{"ruleId":"1056","severity":1,"message":"1142","line":64,"column":71,"nodeType":"1058","messageId":"1073","endLine":64,"endColumn":73},{"ruleId":"1060","severity":1,"message":"1061","line":65,"column":30,"nodeType":"1062","messageId":"1035","endLine":65,"endColumn":32},{"ruleId":"1056","severity":1,"message":"1142","line":78,"column":71,"nodeType":"1058","messageId":"1073","endLine":78,"endColumn":73},{"ruleId":"1060","severity":1,"message":"1061","line":79,"column":30,"nodeType":"1062","messageId":"1035","endLine":79,"endColumn":32},{"ruleId":"1014","severity":1,"message":"1155","line":8,"column":3,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1156","line":10,"column":18,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":28},{"ruleId":"1014","severity":1,"message":"1157","line":10,"column":47,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":53},{"ruleId":"1014","severity":1,"message":"1158","line":13,"column":10,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1159","line":15,"column":8,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1160","line":16,"column":8,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1161","line":17,"column":8,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1131","line":22,"column":10,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1132","line":22,"column":15,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1133","line":22,"column":23,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1162","line":24,"column":8,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1163","line":25,"column":8,"nodeType":"1016","messageId":"1017","endLine":25,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1164","line":54,"column":10,"nodeType":"1016","messageId":"1017","endLine":54,"endColumn":33},{"ruleId":"1014","severity":1,"message":"1165","line":55,"column":10,"nodeType":"1016","messageId":"1017","endLine":55,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1166","line":79,"column":6,"nodeType":"1093","endLine":79,"endColumn":8,"suggestions":"1167"},{"ruleId":"1014","severity":1,"message":"1168","line":139,"column":12,"nodeType":"1016","messageId":"1017","endLine":139,"endColumn":30},{"ruleId":"1169","severity":1,"message":"1170","line":884,"column":13,"nodeType":"1171","endLine":888,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":892,"column":13,"nodeType":"1043","endLine":908,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1172","line":13,"column":7,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":22},{"ruleId":"1056","severity":1,"message":"1057","line":18,"column":28,"nodeType":"1058","messageId":"1059","endLine":18,"endColumn":30},{"ruleId":"1056","severity":1,"message":"1057","line":23,"column":27,"nodeType":"1058","messageId":"1059","endLine":23,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1173","line":8,"column":10,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1174","line":32,"column":19,"nodeType":"1016","messageId":"1017","endLine":32,"endColumn":27},{"ruleId":"1014","severity":1,"message":"1175","line":38,"column":11,"nodeType":"1016","messageId":"1017","endLine":38,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1176","line":110,"column":7,"nodeType":"1093","endLine":110,"endColumn":27,"suggestions":"1177"},{"ruleId":"1014","severity":1,"message":"1178","line":113,"column":14,"nodeType":"1016","messageId":"1017","endLine":113,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1179","line":138,"column":14,"nodeType":"1016","messageId":"1017","endLine":138,"endColumn":37},{"ruleId":"1014","severity":1,"message":"1180","line":217,"column":9,"nodeType":"1016","messageId":"1017","endLine":217,"endColumn":10},{"ruleId":"1014","severity":1,"message":"1024","line":1,"column":17,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1181","line":1,"column":28,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":36},{"ruleId":"1014","severity":1,"message":"1182","line":2,"column":10,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1074","line":6,"column":21,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1183","line":7,"column":8,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1173","line":8,"column":10,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1184","line":14,"column":8,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1185","line":15,"column":8,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1186","line":20,"column":10,"nodeType":"1016","messageId":"1017","endLine":20,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1187","line":41,"column":9,"nodeType":"1016","messageId":"1017","endLine":41,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1178","line":130,"column":12,"nodeType":"1016","messageId":"1017","endLine":130,"endColumn":32},{"ruleId":"1060","severity":1,"message":"1061","line":293,"column":28,"nodeType":"1062","messageId":"1035","endLine":293,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1188","line":299,"column":21,"nodeType":"1016","messageId":"1017","endLine":299,"endColumn":42},{"ruleId":"1014","severity":1,"message":"1189","line":318,"column":21,"nodeType":"1016","messageId":"1017","endLine":318,"endColumn":27},{"ruleId":"1048","severity":1,"message":"1049","line":329,"column":29,"nodeType":"1043","endLine":334,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1190","line":3,"column":10,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":24},{"ruleId":"1056","severity":1,"message":"1057","line":48,"column":33,"nodeType":"1058","messageId":"1059","endLine":48,"endColumn":35},{"ruleId":"1014","severity":1,"message":"1024","line":1,"column":17,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1088","line":6,"column":3,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1054","line":10,"column":8,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1191","line":14,"column":10,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":37},{"ruleId":"1014","severity":1,"message":"1192","line":212,"column":12,"nodeType":"1016","messageId":"1017","endLine":212,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1193","line":231,"column":9,"nodeType":"1016","messageId":"1017","endLine":231,"endColumn":23},{"ruleId":"1014","severity":1,"message":"1194","line":255,"column":7,"nodeType":"1016","messageId":"1017","endLine":255,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1195","line":278,"column":10,"nodeType":"1016","messageId":"1017","endLine":278,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1196","line":278,"column":19,"nodeType":"1016","messageId":"1017","endLine":278,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1197","line":279,"column":9,"nodeType":"1016","messageId":"1017","endLine":279,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":281,"column":26,"nodeType":"1062","messageId":"1035","endLine":281,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1061","line":346,"column":65,"nodeType":"1062","messageId":"1035","endLine":346,"endColumn":67},{"ruleId":"1060","severity":1,"message":"1061","line":403,"column":31,"nodeType":"1062","messageId":"1035","endLine":403,"endColumn":33},{"ruleId":"1060","severity":1,"message":"1061","line":420,"column":31,"nodeType":"1062","messageId":"1035","endLine":420,"endColumn":33},{"ruleId":"1014","severity":1,"message":"1198","line":13,"column":41,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":52},{"ruleId":"1014","severity":1,"message":"1199","line":79,"column":9,"nodeType":"1016","messageId":"1017","endLine":79,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1200","line":83,"column":9,"nodeType":"1016","messageId":"1017","endLine":83,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1201","line":146,"column":31,"nodeType":"1016","messageId":"1017","endLine":146,"endColumn":38},{"ruleId":"1150","severity":1,"message":"1151","line":179,"column":5,"nodeType":"1152","messageId":"1153","endLine":199,"endColumn":6},{"ruleId":"1060","severity":1,"message":"1061","line":214,"column":13,"nodeType":"1062","messageId":"1035","endLine":214,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1202","line":248,"column":9,"nodeType":"1016","messageId":"1017","endLine":248,"endColumn":28},{"ruleId":"1044","severity":1,"message":"1203","line":320,"column":9,"nodeType":"1046","messageId":"1035","endLine":320,"endColumn":19},{"ruleId":"1044","severity":1,"message":"1204","line":321,"column":9,"nodeType":"1046","messageId":"1035","endLine":321,"endColumn":18},{"ruleId":"1044","severity":1,"message":"1205","line":322,"column":9,"nodeType":"1046","messageId":"1035","endLine":322,"endColumn":17},{"ruleId":"1044","severity":1,"message":"1203","line":447,"column":9,"nodeType":"1046","messageId":"1035","endLine":447,"endColumn":19},{"ruleId":"1044","severity":1,"message":"1203","line":476,"column":11,"nodeType":"1046","messageId":"1035","endLine":476,"endColumn":21},{"ruleId":"1044","severity":1,"message":"1203","line":568,"column":13,"nodeType":"1046","messageId":"1035","endLine":568,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":629,"column":27,"nodeType":"1062","messageId":"1035","endLine":629,"endColumn":29},{"ruleId":"1169","severity":1,"message":"1170","line":636,"column":19,"nodeType":"1171","endLine":636,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1206","line":12,"column":8,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1207","line":19,"column":10,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1030","line":22,"column":9,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1187","line":24,"column":10,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1208","line":24,"column":17,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1049","line":135,"column":17,"nodeType":"1043","endLine":140,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1206","line":12,"column":8,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1209","line":19,"column":10,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1210","line":21,"column":8,"nodeType":"1016","messageId":"1017","endLine":21,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1030","line":24,"column":9,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1211","line":115,"column":9,"nodeType":"1016","messageId":"1017","endLine":115,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":298,"column":17,"nodeType":"1043","endLine":303,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1100","line":1,"column":10,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1212","line":13,"column":8,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1213","line":14,"column":8,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1021","line":15,"column":8,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1214","line":16,"column":8,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1215","line":40,"column":9,"nodeType":"1016","messageId":"1017","endLine":40,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1216","line":80,"column":6,"nodeType":"1093","endLine":80,"endColumn":8,"suggestions":"1217"},{"ruleId":"1091","severity":1,"message":"1218","line":127,"column":6,"nodeType":"1093","endLine":127,"endColumn":8,"suggestions":"1219"},{"ruleId":"1014","severity":1,"message":"1020","line":1,"column":8,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1220","line":4,"column":8,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1221","line":15,"column":3,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1030","line":23,"column":9,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":13},{"ruleId":"1091","severity":1,"message":"1222","line":38,"column":13,"nodeType":"1058","endLine":43,"endColumn":4},{"ruleId":"1091","severity":1,"message":"1223","line":43,"column":6,"nodeType":"1093","endLine":43,"endColumn":17,"suggestions":"1224"},{"ruleId":"1091","severity":1,"message":"1225","line":47,"column":6,"nodeType":"1093","endLine":47,"endColumn":8,"suggestions":"1226"},{"ruleId":"1014","severity":1,"message":"1227","line":49,"column":10,"nodeType":"1016","messageId":"1017","endLine":49,"endColumn":21},{"ruleId":"1060","severity":1,"message":"1061","line":158,"column":32,"nodeType":"1062","messageId":"1035","endLine":158,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":189,"column":15,"nodeType":"1043","endLine":189,"endColumn":75},{"ruleId":"1048","severity":1,"message":"1049","line":222,"column":23,"nodeType":"1043","endLine":229,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1049","line":241,"column":23,"nodeType":"1043","endLine":249,"endColumn":25},{"ruleId":"1060","severity":1,"message":"1061","line":317,"column":32,"nodeType":"1062","messageId":"1035","endLine":317,"endColumn":34},{"ruleId":"1060","severity":1,"message":"1061","line":324,"column":32,"nodeType":"1062","messageId":"1035","endLine":324,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1160","line":2,"column":8,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1079","line":7,"column":10,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1228","line":12,"column":8,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1229","line":13,"column":3,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1230","line":14,"column":3,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":12},{"ruleId":"1014","severity":1,"message":"1231","line":16,"column":10,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1232","line":18,"column":10,"nodeType":"1016","messageId":"1017","endLine":18,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1233","line":21,"column":8,"nodeType":"1016","messageId":"1017","endLine":21,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1234","line":22,"column":10,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1235","line":26,"column":10,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1207","line":27,"column":10,"nodeType":"1016","messageId":"1017","endLine":27,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1236","line":33,"column":9,"nodeType":"1016","messageId":"1017","endLine":33,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1237","line":36,"column":10,"nodeType":"1016","messageId":"1017","endLine":36,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1238","line":37,"column":25,"nodeType":"1016","messageId":"1017","endLine":37,"endColumn":41},{"ruleId":"1014","severity":1,"message":"1239","line":53,"column":10,"nodeType":"1016","messageId":"1017","endLine":53,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1240","line":53,"column":28,"nodeType":"1016","messageId":"1017","endLine":53,"endColumn":47},{"ruleId":"1014","severity":1,"message":"1241","line":88,"column":9,"nodeType":"1016","messageId":"1017","endLine":88,"endColumn":33},{"ruleId":"1014","severity":1,"message":"1242","line":332,"column":9,"nodeType":"1016","messageId":"1017","endLine":332,"endColumn":24},{"ruleId":"1243","severity":1,"message":"1244","line":400,"column":9,"nodeType":"1245","messageId":"1246","endLine":500,"endColumn":10},{"ruleId":"1060","severity":1,"message":"1061","line":417,"column":49,"nodeType":"1062","messageId":"1035","endLine":417,"endColumn":51},{"ruleId":"1243","severity":1,"message":"1244","line":620,"column":7,"nodeType":"1245","messageId":"1246","endLine":651,"endColumn":8},{"ruleId":"1247","severity":1,"message":"1248","line":629,"column":9,"nodeType":"1034","messageId":"1249","endLine":633,"endColumn":10},{"ruleId":"1014","severity":1,"message":"1030","line":14,"column":9,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1250","line":15,"column":9,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":17},{"ruleId":"1091","severity":1,"message":"1251","line":45,"column":6,"nodeType":"1093","endLine":45,"endColumn":8,"suggestions":"1252"},{"ruleId":"1243","severity":1,"message":"1244","line":172,"column":7,"nodeType":"1245","messageId":"1246","endLine":208,"endColumn":8},{"ruleId":"1060","severity":1,"message":"1061","line":212,"column":25,"nodeType":"1062","messageId":"1035","endLine":212,"endColumn":27},{"ruleId":"1091","severity":1,"message":"1253","line":273,"column":6,"nodeType":"1093","endLine":273,"endColumn":8,"suggestions":"1254"},{"ruleId":"1014","severity":1,"message":"1020","line":1,"column":8,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1255","line":6,"column":8,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":32},{"ruleId":"1014","severity":1,"message":"1256","line":7,"column":8,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1257","line":11,"column":3,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1258","line":12,"column":3,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1259","line":23,"column":10,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1260","line":35,"column":10,"nodeType":"1016","messageId":"1017","endLine":35,"endColumn":36},{"ruleId":"1014","severity":1,"message":"1212","line":38,"column":8,"nodeType":"1016","messageId":"1017","endLine":38,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1261","line":43,"column":8,"nodeType":"1016","messageId":"1017","endLine":43,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1074","line":44,"column":10,"nodeType":"1016","messageId":"1017","endLine":44,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1131","line":49,"column":10,"nodeType":"1016","messageId":"1017","endLine":49,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1132","line":49,"column":15,"nodeType":"1016","messageId":"1017","endLine":49,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1133","line":49,"column":23,"nodeType":"1016","messageId":"1017","endLine":49,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1262","line":73,"column":10,"nodeType":"1016","messageId":"1017","endLine":73,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1263","line":80,"column":25,"nodeType":"1016","messageId":"1017","endLine":80,"endColumn":41},{"ruleId":"1014","severity":1,"message":"1264","line":129,"column":10,"nodeType":"1016","messageId":"1017","endLine":129,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1265","line":129,"column":16,"nodeType":"1016","messageId":"1017","endLine":129,"endColumn":23},{"ruleId":"1014","severity":1,"message":"1029","line":131,"column":17,"nodeType":"1016","messageId":"1017","endLine":131,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1266","line":142,"column":10,"nodeType":"1016","messageId":"1017","endLine":142,"endColumn":27},{"ruleId":"1014","severity":1,"message":"1267","line":156,"column":11,"nodeType":"1016","messageId":"1017","endLine":156,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1268","line":181,"column":6,"nodeType":"1093","endLine":181,"endColumn":8,"suggestions":"1269"},{"ruleId":"1014","severity":1,"message":"1193","line":245,"column":9,"nodeType":"1016","messageId":"1017","endLine":245,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1270","line":337,"column":11,"nodeType":"1016","messageId":"1065","endLine":337,"endColumn":22},{"ruleId":"1063","severity":1,"message":"1270","line":341,"column":11,"nodeType":"1016","messageId":"1065","endLine":341,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1194","line":351,"column":7,"nodeType":"1016","messageId":"1017","endLine":351,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1271","line":425,"column":10,"nodeType":"1016","messageId":"1017","endLine":425,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1272","line":425,"column":31,"nodeType":"1016","messageId":"1017","endLine":425,"endColumn":53},{"ruleId":"1014","severity":1,"message":"1273","line":537,"column":9,"nodeType":"1016","messageId":"1017","endLine":537,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1274","line":588,"column":11,"nodeType":"1016","messageId":"1017","endLine":588,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1201","line":590,"column":23,"nodeType":"1016","messageId":"1017","endLine":590,"endColumn":30},{"ruleId":"1060","severity":1,"message":"1061","line":594,"column":16,"nodeType":"1062","messageId":"1035","endLine":594,"endColumn":18},{"ruleId":"1060","severity":1,"message":"1061","line":596,"column":41,"nodeType":"1062","messageId":"1035","endLine":596,"endColumn":43},{"ruleId":"1060","severity":1,"message":"1061","line":598,"column":15,"nodeType":"1062","messageId":"1035","endLine":598,"endColumn":17},{"ruleId":"1060","severity":1,"message":"1061","line":622,"column":48,"nodeType":"1062","messageId":"1035","endLine":622,"endColumn":50},{"ruleId":"1060","severity":1,"message":"1061","line":624,"column":15,"nodeType":"1062","messageId":"1035","endLine":624,"endColumn":17},{"ruleId":"1060","severity":1,"message":"1061","line":706,"column":55,"nodeType":"1062","messageId":"1035","endLine":706,"endColumn":57},{"ruleId":"1091","severity":1,"message":"1275","line":712,"column":6,"nodeType":"1093","endLine":712,"endColumn":23,"suggestions":"1276"},{"ruleId":"1091","severity":1,"message":"1277","line":712,"column":7,"nodeType":"1278","endLine":712,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1279","line":716,"column":6,"nodeType":"1093","endLine":716,"endColumn":25,"suggestions":"1280"},{"ruleId":"1060","severity":1,"message":"1061","line":732,"column":30,"nodeType":"1062","messageId":"1035","endLine":732,"endColumn":32},{"ruleId":"1060","severity":1,"message":"1061","line":733,"column":35,"nodeType":"1062","messageId":"1035","endLine":733,"endColumn":37},{"ruleId":"1060","severity":1,"message":"1061","line":743,"column":42,"nodeType":"1062","messageId":"1035","endLine":743,"endColumn":44},{"ruleId":"1060","severity":1,"message":"1061","line":759,"column":55,"nodeType":"1062","messageId":"1035","endLine":759,"endColumn":57},{"ruleId":"1060","severity":1,"message":"1061","line":773,"column":37,"nodeType":"1062","messageId":"1035","endLine":773,"endColumn":39},{"ruleId":"1060","severity":1,"message":"1061","line":888,"column":54,"nodeType":"1062","messageId":"1035","endLine":888,"endColumn":56},{"ruleId":"1060","severity":1,"message":"1061","line":1252,"column":54,"nodeType":"1062","messageId":"1035","endLine":1252,"endColumn":56},{"ruleId":"1014","severity":1,"message":"1106","line":1,"column":8,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1181","line":2,"column":10,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1145","line":3,"column":10,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1144","line":3,"column":23,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1281","line":4,"column":10,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":23},{"ruleId":"1282","severity":1,"message":"1283","line":23,"column":7,"nodeType":"1284","messageId":"1285","endLine":23,"endColumn":27,"fix":"1286"},{"ruleId":"1056","severity":1,"message":"1057","line":37,"column":20,"nodeType":"1058","messageId":"1059","endLine":37,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1287","line":133,"column":7,"nodeType":"1016","messageId":"1017","endLine":133,"endColumn":17},{"ruleId":"1044","severity":1,"message":"1288","line":169,"column":5,"nodeType":"1046","messageId":"1035","endLine":169,"endColumn":13},{"ruleId":"1060","severity":1,"message":"1061","line":183,"column":29,"nodeType":"1062","messageId":"1035","endLine":183,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1255","line":5,"column":8,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":32},{"ruleId":"1014","severity":1,"message":"1220","line":7,"column":8,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1085","line":10,"column":3,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1257","line":11,"column":3,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1258","line":12,"column":3,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1289","line":13,"column":3,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1290","line":14,"column":3,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1291","line":15,"column":3,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1259","line":17,"column":10,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1292","line":19,"column":10,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1158","line":19,"column":32,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":44},{"ruleId":"1014","severity":1,"message":"1293","line":20,"column":8,"nodeType":"1016","messageId":"1017","endLine":20,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1082","line":21,"column":10,"nodeType":"1016","messageId":"1017","endLine":21,"endColumn":28},{"ruleId":"1014","severity":1,"message":"1294","line":22,"column":8,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1109","line":24,"column":8,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1295","line":25,"column":10,"nodeType":"1016","messageId":"1017","endLine":25,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1088","line":29,"column":3,"nodeType":"1016","messageId":"1017","endLine":29,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1108","line":31,"column":8,"nodeType":"1016","messageId":"1017","endLine":31,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1234","line":32,"column":10,"nodeType":"1016","messageId":"1017","endLine":32,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1074","line":32,"column":21,"nodeType":"1016","messageId":"1017","endLine":32,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1079","line":33,"column":10,"nodeType":"1016","messageId":"1017","endLine":33,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1296","line":34,"column":8,"nodeType":"1016","messageId":"1017","endLine":34,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1297","line":35,"column":8,"nodeType":"1016","messageId":"1017","endLine":35,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1236","line":45,"column":9,"nodeType":"1016","messageId":"1017","endLine":45,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1187","line":46,"column":9,"nodeType":"1016","messageId":"1017","endLine":46,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1298","line":53,"column":10,"nodeType":"1016","messageId":"1017","endLine":53,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1299","line":54,"column":10,"nodeType":"1016","messageId":"1017","endLine":54,"endColumn":28},{"ruleId":"1014","severity":1,"message":"1300","line":54,"column":30,"nodeType":"1016","messageId":"1017","endLine":54,"endColumn":51},{"ruleId":"1014","severity":1,"message":"1301","line":55,"column":10,"nodeType":"1016","messageId":"1017","endLine":55,"endColumn":27},{"ruleId":"1014","severity":1,"message":"1302","line":55,"column":29,"nodeType":"1016","messageId":"1017","endLine":55,"endColumn":49},{"ruleId":"1014","severity":1,"message":"1227","line":59,"column":10,"nodeType":"1016","messageId":"1017","endLine":59,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1303","line":59,"column":23,"nodeType":"1016","messageId":"1017","endLine":59,"endColumn":37},{"ruleId":"1014","severity":1,"message":"1267","line":122,"column":11,"nodeType":"1016","messageId":"1017","endLine":122,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1304","line":142,"column":6,"nodeType":"1093","endLine":142,"endColumn":8,"suggestions":"1305"},{"ruleId":"1060","severity":1,"message":"1061","line":169,"column":29,"nodeType":"1062","messageId":"1035","endLine":169,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1061","line":202,"column":20,"nodeType":"1062","messageId":"1035","endLine":202,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1306","line":220,"column":9,"nodeType":"1016","messageId":"1017","endLine":220,"endColumn":27},{"ruleId":"1014","severity":1,"message":"1111","line":293,"column":10,"nodeType":"1016","messageId":"1017","endLine":293,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1112","line":293,"column":21,"nodeType":"1016","messageId":"1017","endLine":293,"endColumn":33},{"ruleId":"1056","severity":1,"message":"1142","line":339,"column":36,"nodeType":"1058","messageId":"1073","endLine":339,"endColumn":38},{"ruleId":"1060","severity":1,"message":"1061","line":340,"column":21,"nodeType":"1062","messageId":"1035","endLine":340,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":364,"column":47,"nodeType":"1062","messageId":"1035","endLine":364,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1061","line":379,"column":28,"nodeType":"1062","messageId":"1035","endLine":379,"endColumn":30},{"ruleId":"1060","severity":1,"message":"1061","line":402,"column":47,"nodeType":"1062","messageId":"1035","endLine":402,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1061","line":416,"column":28,"nodeType":"1062","messageId":"1035","endLine":416,"endColumn":30},{"ruleId":"1060","severity":1,"message":"1061","line":439,"column":47,"nodeType":"1062","messageId":"1035","endLine":439,"endColumn":49},{"ruleId":"1014","severity":1,"message":"1021","line":8,"column":8,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1212","line":9,"column":8,"nodeType":"1016","messageId":"1017","endLine":9,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1106","line":10,"column":8,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1126","line":12,"column":8,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1307","line":23,"column":10,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1308","line":23,"column":24,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":39},{"ruleId":"1060","severity":1,"message":"1061","line":48,"column":24,"nodeType":"1062","messageId":"1035","endLine":48,"endColumn":26},{"ruleId":"1056","severity":1,"message":"1057","line":62,"column":25,"nodeType":"1058","messageId":"1059","endLine":62,"endColumn":27},{"ruleId":"1014","severity":1,"message":"1309","line":73,"column":7,"nodeType":"1016","messageId":"1017","endLine":73,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1310","line":88,"column":13,"nodeType":"1016","messageId":"1017","endLine":88,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1311","line":92,"column":9,"nodeType":"1016","messageId":"1017","endLine":92,"endColumn":10},{"ruleId":"1060","severity":1,"message":"1061","line":94,"column":35,"nodeType":"1062","messageId":"1035","endLine":94,"endColumn":37},{"ruleId":"1060","severity":1,"message":"1061","line":101,"column":42,"nodeType":"1062","messageId":"1035","endLine":101,"endColumn":44},{"ruleId":"1063","severity":1,"message":"1312","line":115,"column":13,"nodeType":"1016","messageId":"1065","endLine":115,"endColumn":35},{"ruleId":"1063","severity":1,"message":"1313","line":119,"column":9,"nodeType":"1016","messageId":"1065","endLine":119,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1314","line":134,"column":6,"nodeType":"1093","endLine":134,"endColumn":8,"suggestions":"1315"},{"ruleId":"1048","severity":1,"message":"1049","line":181,"column":23,"nodeType":"1043","endLine":181,"endColumn":69},{"ruleId":"1060","severity":1,"message":"1061","line":266,"column":66,"nodeType":"1062","messageId":"1035","endLine":266,"endColumn":68},{"ruleId":"1060","severity":1,"message":"1061","line":276,"column":66,"nodeType":"1062","messageId":"1035","endLine":276,"endColumn":68},{"ruleId":"1060","severity":1,"message":"1061","line":284,"column":66,"nodeType":"1062","messageId":"1035","endLine":284,"endColumn":68},{"ruleId":"1014","severity":1,"message":"1024","line":1,"column":17,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1145","line":7,"column":10,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1316","line":11,"column":8,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":24},{"ruleId":"1014","severity":1,"message":"1187","line":22,"column":9,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1028","line":26,"column":10,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1029","line":26,"column":17,"nodeType":"1016","messageId":"1017","endLine":26,"endColumn":25},{"ruleId":"1063","severity":1,"message":"1317","line":40,"column":12,"nodeType":"1016","messageId":"1065","endLine":40,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1318","line":47,"column":12,"nodeType":"1016","messageId":"1017","endLine":47,"endColumn":33},{"ruleId":"1014","severity":1,"message":"1319","line":179,"column":12,"nodeType":"1016","messageId":"1017","endLine":179,"endColumn":28},{"ruleId":"1056","severity":1,"message":"1057","line":184,"column":45,"nodeType":"1058","messageId":"1059","endLine":184,"endColumn":47},{"ruleId":"1014","severity":1,"message":"1320","line":204,"column":12,"nodeType":"1016","messageId":"1017","endLine":204,"endColumn":29},{"ruleId":"1063","severity":1,"message":"1321","line":228,"column":12,"nodeType":"1016","messageId":"1065","endLine":228,"endColumn":30},{"ruleId":"1060","severity":1,"message":"1061","line":375,"column":39,"nodeType":"1062","messageId":"1035","endLine":375,"endColumn":41},{"ruleId":"1014","severity":1,"message":"1036","line":1,"column":10,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1040","line":6,"column":9,"nodeType":"1016","messageId":"1017","endLine":6,"endColumn":16},{"ruleId":"1048","severity":1,"message":"1049","line":11,"column":9,"nodeType":"1043","endLine":14,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1322","line":3,"column":17,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1323","line":3,"column":34,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":45},{"ruleId":"1014","severity":1,"message":"1160","line":7,"column":8,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1105","line":8,"column":8,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1079","line":10,"column":10,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1082","line":13,"column":3,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1234","line":16,"column":10,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1324","line":17,"column":10,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1198","line":18,"column":49,"nodeType":"1016","messageId":"1017","endLine":18,"endColumn":60},{"ruleId":"1014","severity":1,"message":"1212","line":19,"column":8,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1038","line":23,"column":9,"nodeType":"1016","messageId":"1017","endLine":23,"endColumn":13},{"ruleId":"1060","severity":1,"message":"1061","line":44,"column":29,"nodeType":"1062","messageId":"1035","endLine":44,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1061","line":52,"column":28,"nodeType":"1062","messageId":"1035","endLine":52,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1325","line":4,"column":10,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1326","line":5,"column":19,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1161","line":12,"column":8,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1182","line":15,"column":10,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1198","line":15,"column":49,"nodeType":"1016","messageId":"1017","endLine":15,"endColumn":60},{"ruleId":"1014","severity":1,"message":"1234","line":16,"column":10,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1186","line":17,"column":10,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1327","line":57,"column":10,"nodeType":"1016","messageId":"1017","endLine":57,"endColumn":18},{"ruleId":"1091","severity":1,"message":"1328","line":59,"column":3,"nodeType":"1016","endLine":59,"endColumn":12,"suggestions":"1329"},{"ruleId":"1330","severity":1,"message":"1331","line":253,"column":3,"nodeType":"1332","messageId":"1333","endLine":290,"endColumn":5},{"ruleId":"1010","replacedBy":"1334"},{"ruleId":"1012","replacedBy":"1335"},{"ruleId":"1014","severity":1,"message":"1145","line":2,"column":19,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1074","line":4,"column":21,"nodeType":"1016","messageId":"1017","endLine":4,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1336","line":7,"column":10,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1337","line":7,"column":19,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1338","line":7,"column":33,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":45},{"ruleId":"1056","severity":1,"message":"1339","line":15,"column":61,"nodeType":"1058","messageId":"1073","endLine":15,"endColumn":63},{"ruleId":"1014","severity":1,"message":"1340","line":46,"column":14,"nodeType":"1016","messageId":"1017","endLine":46,"endColumn":27},{"ruleId":"1010","replacedBy":"1341"},{"ruleId":"1012","replacedBy":"1342"},{"ruleId":"1014","severity":1,"message":"1024","line":1,"column":17,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1181","line":1,"column":28,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":36},{"ruleId":"1014","severity":1,"message":"1144","line":2,"column":10,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1145","line":2,"column":23,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1182","line":10,"column":10,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1198","line":10,"column":49,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":60},{"ruleId":"1014","severity":1,"message":"1234","line":11,"column":10,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":19},{"ruleId":"1014","severity":1,"message":"1074","line":11,"column":21,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1161","line":13,"column":8,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1212","line":19,"column":8,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":22},{"ruleId":"1056","severity":1,"message":"1339","line":270,"column":76,"nodeType":"1058","messageId":"1073","endLine":270,"endColumn":78},{"ruleId":"1056","severity":1,"message":"1339","line":287,"column":15,"nodeType":"1058","messageId":"1073","endLine":287,"endColumn":17},{"ruleId":"1048","severity":1,"message":"1049","line":388,"column":13,"nodeType":"1043","endLine":394,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1181","line":1,"column":17,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1182","line":2,"column":10,"nodeType":"1016","messageId":"1017","endLine":2,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1144","line":5,"column":10,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1145","line":5,"column":23,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1183","line":8,"column":8,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1173","line":9,"column":10,"nodeType":"1016","messageId":"1017","endLine":9,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1326","line":9,"column":19,"nodeType":"1016","messageId":"1017","endLine":9,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1184","line":14,"column":8,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":17},{"ruleId":"1014","severity":1,"message":"1343","line":16,"column":10,"nodeType":"1016","messageId":"1017","endLine":16,"endColumn":25},{"ruleId":"1014","severity":1,"message":"1344","line":167,"column":9,"nodeType":"1016","messageId":"1017","endLine":167,"endColumn":13},{"ruleId":"1056","severity":1,"message":"1142","line":187,"column":39,"nodeType":"1058","messageId":"1073","endLine":187,"endColumn":41},{"ruleId":"1014","severity":1,"message":"1189","line":207,"column":19,"nodeType":"1016","messageId":"1017","endLine":207,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1049","line":223,"column":29,"nodeType":"1043","endLine":227,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1182","line":1,"column":10,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1198","line":1,"column":49,"nodeType":"1016","messageId":"1017","endLine":1,"endColumn":60},{"ruleId":"1091","severity":1,"message":"1345","line":9,"column":6,"nodeType":"1093","endLine":9,"endColumn":8,"suggestions":"1346"},{"ruleId":"1014","severity":1,"message":"1347","line":11,"column":23,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":37},{"ruleId":"1060","severity":1,"message":"1061","line":37,"column":34,"nodeType":"1062","messageId":"1035","endLine":37,"endColumn":36},{"ruleId":"1060","severity":1,"message":"1061","line":58,"column":47,"nodeType":"1062","messageId":"1035","endLine":58,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1061","line":78,"column":37,"nodeType":"1062","messageId":"1035","endLine":78,"endColumn":39},{"ruleId":"1014","severity":1,"message":"1348","line":7,"column":27,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":45},{"ruleId":"1091","severity":1,"message":"1349","line":16,"column":6,"nodeType":"1093","endLine":16,"endColumn":15,"suggestions":"1350"},{"ruleId":"1060","severity":1,"message":"1061","line":28,"column":24,"nodeType":"1062","messageId":"1035","endLine":28,"endColumn":26},{"ruleId":"1041","severity":1,"message":"1042","line":44,"column":19,"nodeType":"1043","endLine":49,"endColumn":20},{"ruleId":"1041","severity":1,"message":"1042","line":70,"column":19,"nodeType":"1043","endLine":75,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1351","line":7,"column":3,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1143","line":8,"column":3,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1145","line":11,"column":23,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1128","line":13,"column":8,"nodeType":"1016","messageId":"1017","endLine":13,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1352","line":14,"column":8,"nodeType":"1016","messageId":"1017","endLine":14,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1353","line":22,"column":22,"nodeType":"1016","messageId":"1017","endLine":22,"endColumn":35},{"ruleId":"1091","severity":1,"message":"1354","line":34,"column":6,"nodeType":"1093","endLine":34,"endColumn":8,"suggestions":"1355"},{"ruleId":"1014","severity":1,"message":"1356","line":68,"column":9,"nodeType":"1016","messageId":"1017","endLine":68,"endColumn":18},{"ruleId":"1063","severity":1,"message":"1357","line":75,"column":9,"nodeType":"1016","messageId":"1065","endLine":75,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1357","line":130,"column":9,"nodeType":"1016","messageId":"1065","endLine":130,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1049","line":7,"column":9,"nodeType":"1043","endLine":16,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1085","line":5,"column":3,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":21},{"ruleId":"1014","severity":1,"message":"1258","line":7,"column":3,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1289","line":8,"column":3,"nodeType":"1016","messageId":"1017","endLine":8,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1290","line":9,"column":3,"nodeType":"1016","messageId":"1017","endLine":9,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1291","line":10,"column":3,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1187","line":18,"column":9,"nodeType":"1016","messageId":"1017","endLine":18,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1358","line":20,"column":31,"nodeType":"1016","messageId":"1017","endLine":20,"endColumn":53},{"ruleId":"1014","severity":1,"message":"1287","line":33,"column":9,"nodeType":"1016","messageId":"1017","endLine":33,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":82,"column":11,"nodeType":"1062","messageId":"1035","endLine":82,"endColumn":13},{"ruleId":"1060","severity":1,"message":"1061","line":84,"column":18,"nodeType":"1062","messageId":"1035","endLine":84,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1359","line":111,"column":6,"nodeType":"1093","endLine":111,"endColumn":8,"suggestions":"1360"},{"ruleId":"1014","severity":1,"message":"1182","line":3,"column":8,"nodeType":"1016","messageId":"1017","endLine":3,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1255","line":5,"column":8,"nodeType":"1016","messageId":"1017","endLine":5,"endColumn":32},{"ruleId":"1014","severity":1,"message":"1220","line":7,"column":8,"nodeType":"1016","messageId":"1017","endLine":7,"endColumn":15},{"ruleId":"1014","severity":1,"message":"1257","line":11,"column":3,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":16},{"ruleId":"1014","severity":1,"message":"1259","line":17,"column":10,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1292","line":19,"column":10,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":30},{"ruleId":"1014","severity":1,"message":"1158","line":19,"column":32,"nodeType":"1016","messageId":"1017","endLine":19,"endColumn":44},{"ruleId":"1014","severity":1,"message":"1109","line":24,"column":8,"nodeType":"1016","messageId":"1017","endLine":24,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1295","line":25,"column":10,"nodeType":"1016","messageId":"1017","endLine":25,"endColumn":18},{"ruleId":"1014","severity":1,"message":"1088","line":29,"column":3,"nodeType":"1016","messageId":"1017","endLine":29,"endColumn":11},{"ruleId":"1014","severity":1,"message":"1074","line":32,"column":21,"nodeType":"1016","messageId":"1017","endLine":32,"endColumn":31},{"ruleId":"1014","severity":1,"message":"1296","line":34,"column":8,"nodeType":"1016","messageId":"1017","endLine":34,"endColumn":26},{"ruleId":"1014","severity":1,"message":"1297","line":35,"column":8,"nodeType":"1016","messageId":"1017","endLine":35,"endColumn":22},{"ruleId":"1014","severity":1,"message":"1361","line":36,"column":8,"nodeType":"1016","messageId":"1017","endLine":36,"endColumn":20},{"ruleId":"1014","severity":1,"message":"1362","line":52,"column":19,"nodeType":"1016","messageId":"1017","endLine":52,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1264","line":95,"column":10,"nodeType":"1016","messageId":"1017","endLine":95,"endColumn":14},{"ruleId":"1091","severity":1,"message":"1363","line":113,"column":6,"nodeType":"1093","endLine":113,"endColumn":8,"suggestions":"1364"},{"ruleId":"1091","severity":1,"message":"1365","line":119,"column":6,"nodeType":"1093","endLine":119,"endColumn":17,"suggestions":"1366"},{"ruleId":"1014","severity":1,"message":"1367","line":513,"column":18,"nodeType":"1016","messageId":"1017","endLine":513,"endColumn":29},{"ruleId":"1014","severity":1,"message":"1368","line":513,"column":36,"nodeType":"1016","messageId":"1017","endLine":513,"endColumn":47},{"ruleId":"1091","severity":1,"message":"1369","line":629,"column":6,"nodeType":"1093","endLine":629,"endColumn":11,"suggestions":"1370"},{"ruleId":"1091","severity":1,"message":"1371","line":636,"column":6,"nodeType":"1093","endLine":636,"endColumn":22,"suggestions":"1372"},{"ruleId":"1060","severity":1,"message":"1061","line":696,"column":47,"nodeType":"1062","messageId":"1035","endLine":696,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1061","line":702,"column":46,"nodeType":"1062","messageId":"1035","endLine":702,"endColumn":48},{"ruleId":"1060","severity":1,"message":"1061","line":840,"column":32,"nodeType":"1062","messageId":"1035","endLine":840,"endColumn":34},{"ruleId":"1014","severity":1,"message":"1236","line":11,"column":9,"nodeType":"1016","messageId":"1017","endLine":11,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1264","line":12,"column":10,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1373","line":18,"column":9,"nodeType":"1016","messageId":"1017","endLine":18,"endColumn":10},{"ruleId":"1060","severity":1,"message":"1061","line":81,"column":13,"nodeType":"1062","messageId":"1035","endLine":81,"endColumn":15},{"ruleId":"1091","severity":1,"message":"1374","line":84,"column":6,"nodeType":"1093","endLine":84,"endColumn":8,"suggestions":"1375"},{"ruleId":"1014","severity":1,"message":"1236","line":10,"column":9,"nodeType":"1016","messageId":"1017","endLine":10,"endColumn":13},{"ruleId":"1014","severity":1,"message":"1264","line":12,"column":10,"nodeType":"1016","messageId":"1017","endLine":12,"endColumn":14},{"ruleId":"1014","severity":1,"message":"1373","line":17,"column":9,"nodeType":"1016","messageId":"1017","endLine":17,"endColumn":10},{"ruleId":"1060","severity":1,"message":"1061","line":79,"column":13,"nodeType":"1062","messageId":"1035","endLine":79,"endColumn":15},{"ruleId":"1091","severity":1,"message":"1376","line":82,"column":6,"nodeType":"1093","endLine":82,"endColumn":8,"suggestions":"1377"},"no-native-reassign",["1378"],"no-negated-in-lhs",["1379"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Appheader' is defined but never used.","'Footer' is defined but never used.","'Checkout' is defined but never used.","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'ReactPlaceholder' is defined but never used.","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'menu' is assigned a value but never used.","'createLogger' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Link' is defined but never used.","'PersonIcon' is defined but never used.","'main' is assigned a value but never used.","'navbar' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Logo' is defined but never used.","'setUserLoggedOut' is defined but never used.","'PageNotFound' is defined but never used.","'LoadingBar' is defined but never used.","'Login' is defined but never used.","'current_day' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-redeclare","'moment' is already defined.","redeclared","'x' is already defined.","'current_time' is already defined.","'getDetoursIds' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'countDownTime', 'countDownDateTime', 'countDownTime'.","unsafeRefs","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","'closeModal' is defined but never used.","'setLoadingDisplay' is defined but never used.","'setSearchQuery' is defined but never used.","'clearState' is defined but never used.","'clearMenuState' is defined but never used.","'displayAddressModal' is defined but never used.","'fetchRestuarantInformation' is defined but never used.","'fetchRestuarantList' is defined but never used.","'fetchAddressesList' is defined but never used.","'setSelectedRestaurant' is defined but never used.","'showLoginFormMethod' is defined but never used.","'setSelectedAddress' is defined but never used.","'getFilterredList' is defined but never used.","'isHappyHourStillActive' is defined but never used.","'setTimer' is defined but never used.","'postProfile' is defined but never used.","'dataforcoupon' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.","ArrayExpression",["1380"],"'current_string' is already defined.","'isDetourId' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Slider' is defined but never used.","'Table' is defined but never used.","'updatePassword' is defined but never used.","'MyOrderDetails' is defined but never used.","'HomeIcon' is defined but never used.","'FastfoodIcon' is defined but never used.","'IconButton' is defined but never used.","'moment' is defined but never used.","'axios' is defined but never used.","'ChooseAddress' is defined but never used.","'AddAddress' is defined but never used.","'RenderModifiers' is defined but never used.","'handleadd' is assigned a value but never used.","'sethandleadd' is assigned a value but never used.","'currentorderData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchdata', 'state', and 'user.user.isUserLoggedIn'. Either include them or remove the dependency array. You can also do a functional update 'setstate(s => ...)' if you only need 'state' in the 'setstate' call.",["1381"],"React Hook useEffect has an unnecessary dependency: 'window.screen.width'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.width' aren't valid dependencies because mutating them doesn't re-render the component.",["1382"],"'y' is already defined.","'z' is already defined.","'a' is already defined.","'status' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","'sizeAndBase' is assigned a value but never used.","'AppModal' is defined but never used.","'HelpIcon' is defined but never used.","'HomeSlider' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'Divider' is defined but never used.","'LocalMallIcon' is defined but never used.","'Box' is defined but never used.","'Drawer' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'ListItemText' is defined but never used.","'buttonStyle' is assigned a value but never used.","'setfreeEligible' is assigned a value but never used.","'timings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'main.businessHour' and 'main.isClosed'. Either include them or remove the dependency array.",["1383"],"'handleAddItem' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'CarouselCaption' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'useHistory' is defined but never used.","'NavigateBeforeSharp' is defined but never used.","'setorder' is assigned a value but never used.","'arr' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Invalid alt value for img. Use alt=\"\" for presentational images.","'changechoosencategory' is defined but never used.","'ScrollLink' is defined but never used.","'scroll' is defined but never used.","'PinDropSharp' is defined but never used.","'MenuIcon' is defined but never used.","'CloseIcon' is defined but never used.","'SimpleBarReact' is defined but never used.","'Sticky' is defined but never used.","'Scrollspy' is defined but never used.","'displayCategoryInMobile' is assigned a value but never used.","'displayHideCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onDishClick' and 'onDrinksClick'. Either include them or remove the dependency array.",["1384"],"'hideCategoryMobile' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isFmHaveDetours' is assigned a value but never used.","'addItem' is defined but never used.","'sethhour' is assigned a value but never used.","'allforcedModifiers' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'findCategory'. Either include it or remove the dependency array.",["1385"],"'getDishesDescription' is defined but never used.","'getSelectedCategoryName' is defined but never used.","'a' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'MenuModal' is defined but never used.","'DishModal' is defined but never used.","'AccessTimeIcon' is defined but never used.","'modalNames' is defined but never used.","'modal' is assigned a value but never used.","'sizeAndBaseCollection' is assigned a value but never used.","'minQty' is assigned a value but never used.","'defaultMemoize' is defined but never used.","'suppressDeprecationWarnings' is defined but never used.","'getDiscountedPrice' is defined but never used.","'getActualPrice' is assigned a value but never used.","'isDecimalAmount' is assigned a value but never used.","'warning' is assigned a value but never used.","'setwarning' is assigned a value but never used.","'grandTotal' is assigned a value but never used.","'ModalFooter' is defined but never used.","'onPasswordChange' is assigned a value but never used.","'toggle' is assigned a value but never used.","'message' is assigned a value but never used.","'getPhoneNumberFinal' is assigned a value but never used.","Duplicate key 'showLoader'.","Duplicate key 'firstName'.","Duplicate key 'lastName'.","'PhoneAndroidIcon' is defined but never used.","'notification' is defined but never used.","'setModal' is assigned a value but never used.","'setSelectedCategoryId' is defined but never used.","'Loader' is defined but never used.","'goBackToLogin' is assigned a value but never used.","'WaitingOverlay' is defined but never used.","'AppHeader' is defined but never used.","'PhoneInput' is defined but never used.","'handleEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postProfileChange'. Either include it or remove the dependency array.",["1386"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["1387"],"'AddIcon' is defined but never used.","'fetchMyOrderList' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'dispatch', 'state', and 'user.user.clientId'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1388"],"React Hook useEffect has missing dependencies: 'dispatch' and 'fetchAddressList'. Either include them or remove the dependency array.",["1389"],"'frompayment' is assigned a value but never used.","'PlacesAutocomplete' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'setPhoneCode' is defined but never used.","'Menu' is defined but never used.","'TextField' is defined but never used.","'openModal' is defined but never used.","'declareTypeAlias' is defined but never used.","'user' is assigned a value but never used.","'latlng' is assigned a value but never used.","'setaddressdetail' is assigned a value but never used.","'customeraddress1' is assigned a value but never used.","'setcustomeraddress1' is assigned a value but never used.","'phonecodetoCountryMaping' is assigned a value but never used.","'closeLoginModal' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","case","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'setMarkerPosition'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1390"],"React Hook useEffect has missing dependencies: 'calculateDistance', 'props', and 'setMarkerPosition'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1391"],"'AccountBalanceWalletIcon' is defined but never used.","'MoneyIcon' is defined but never used.","'setIsTakeAway' is defined but never used.","'setPickupTime' is defined but never used.","'TimePicker' is defined but never used.","'CompassCalibrationOutlined' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'amountaftercouponapplied' is assigned a value but never used.","'setpaymentfailed' is assigned a value but never used.","'show' is assigned a value but never used.","'setshow' is assigned a value but never used.","'billPercentAmount' is assigned a value but never used.","'deliveryOptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'getBillAmount', 'main.deliveryRange', 'main.selectedRestaurant.order_option', 'main.selectedRestaurant.payment_option_ids', and 'user.user.isUserLoggedIn'. Either include them or remove the dependency array. You can also do a functional update 'setdata(d => ...)' if you only need 'data' in the 'setdata' call.",["1392"],"'finalAmount' is already defined.","'updatedcouponamount' is assigned a value but never used.","'setupdatedcouponamount' is assigned a value but never used.","'savedAmount' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coupontypeisdiscount', 'discountnumber', 'getGrandTotal', 'maxdiscountnumber', and 'user.delivery_cost'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setcouponamount' needs the current value of 'maxdiscountnumber'.",["1393"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'discountnumber'. Either include it or remove the dependency array.",["1394"],"'useRouteMatch' is defined but never used.","no-useless-rename","Destructuring assignment modifiers unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"1395","text":"1396"},"'local_time' is assigned a value but never used.","Duplicate key 'comments'.","'setDeliveryTime' is defined but never used.","'setDefaultAddress' is defined but never used.","'setDeliveryDistance' is defined but never used.","'NaturePeopleOutlined' is defined but never used.","'Address' is defined but never used.","'GoogleMap' is defined but never used.","'useTheme' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'CreditCardIcon' is defined but never used.","'deliveryCharges' is assigned a value but never used.","'renderDeliveryType' is assigned a value but never used.","'setrenderDeliveryType' is assigned a value but never used.","'renderTakeAddress' is assigned a value but never used.","'setrenderTakeAddress' is assigned a value but never used.","'setfrompayment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'main.selectedRestaurant.order_option', and 'main.selectedRestaurant.payment_option_ids'. Either include them or remove the dependency array.",["1397"],"'getDisabledMinutes' is assigned a value but never used.","'ordersession' is assigned a value but never used.","'setordersession' is assigned a value but never used.","'ordersData' is assigned a value but never used.","'payload_again' is assigned a value but never used.","'i' is assigned a value but never used.","'order_session_for_card' is already defined.","'order_session' is already defined.","React Hook useEffect has missing dependencies: 'fetchdata' and 'user.user.isUserLoggedIn'. Either include them or remove the dependency array.",["1398"],"'ChevronRightIcon' is defined but never used.","'isPriceWithoutTax' is already defined.","'renderHappyHourOffers' is defined but never used.","'getModifierPrice' is defined but never used.","'getPizzaItemPrice' is defined but never used.","'renderPizzaDetails' is already defined.","'Radio' is defined but never used.","'InputNumber' is defined but never used.","'ContactsOutlined' is defined but never used.","'connect' is defined but never used.","'removeItem' is defined but never used.","'detourid' is assigned a value but never used.","React Hook useEffect contains a call to 'setdetourid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["1399"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["1378"],["1379"],"'ADD_NEW' is defined but never used.","'REPEATE_LAST' is defined but never used.","'HEADER_TITLE' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'getTotalPrice' is defined but never used.",["1378"],["1379"],"'truncateDecimal' is defined but never used.","'dots' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.orderList'. Either include it or remove the dependency array. If 'setPosts' needs the current value of 'props.orderList', you can also switch to useReducer instead of useState and read 'props.orderList' in the reducer.",["1400"],"'setShowPerPage' is assigned a value but never used.","'setNumberOfButoons' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onPaginationChange' and 'showPerPage'. Either include them or remove the dependency array. If 'onPaginationChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1401"],"'CarouselIndicators' is defined but never used.","'LocationOnIcon' is defined but never used.","'settempslider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'menu.restaurantInfo.restaurant_id'. Either include it or remove the dependency array.",["1402"],"'goToIndex' is assigned a value but never used.","'slides' is already defined.","'setheadingfornoaddress' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'DELIVERY_TYPE.DEFAULT', 'DELIVERY_TYPE.TAKE_AWAY', 'data', 'deliveryTypeClick', 'deliveryTypePickupClick', 'main.closing', 'main.opening', 'main.selectedRestaurant.order_option', and 'menu.restaurantInfo.timezone'. Either include them or remove the dependency array. You can also do a functional update 'setdata(d => ...)' if you only need 'data' in the 'setdata' call.",["1403"],"'DeliveryType' is defined but never used.","'setheading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'changeaddress' and 'fetchAddresses'. Either include them or remove the dependency array. You can also do a functional update 'setchangeaddress(c => ...)' if you only need 'changeaddress' in the 'setchangeaddress' call.",["1404"],"React Hook useEffect has missing dependencies: 'defaultadd' and 'fetchAddresses'. Either include them or remove the dependency array.",["1405"],"'customerLat' is assigned a value but never used.","'customerLng' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.deliveryTime', 'data.pickupTime', and 'dispatch'. Either include them or remove the dependency array.",["1406"],"React Hook useEffect has a missing dependency: 'handleMultipleAddress'. Either include it or remove the dependency array.",["1407"],"'o' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.pickupTime', 'main.closing', 'props', and 'settime'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1408"],"React Hook useEffect has missing dependencies: 'data.deliveryTime', 'main.closing', 'props', and 'settime'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1409"],"no-global-assign","no-unsafe-negation",{"desc":"1410","fix":"1411"},{"desc":"1412","fix":"1413"},{"desc":"1414","fix":"1415"},{"desc":"1416","fix":"1417"},{"desc":"1418","fix":"1419"},{"desc":"1420","fix":"1421"},{"desc":"1422","fix":"1423"},{"desc":"1424","fix":"1425"},{"desc":"1426","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1434","fix":"1435"},{"desc":"1436","fix":"1437"},{"desc":"1438","fix":"1439"},[598,618],"modifiers",{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1446","fix":"1447"},{"desc":"1448","fix":"1449"},{"desc":"1450","fix":"1451"},{"desc":"1452","fix":"1453"},{"desc":"1454","fix":"1455"},{"desc":"1456","fix":"1457"},{"desc":"1458","fix":"1459"},{"desc":"1460","fix":"1461"},{"desc":"1462","fix":"1463"},{"desc":"1464","fix":"1465"},"Update the dependencies array to be: [initialize, props.restaurantId]",{"range":"1466","text":"1467"},"Update the dependencies array to be: [fetchdata, state, user.user.isUserLoggedIn]",{"range":"1468","text":"1469"},"Update the dependencies array to be: []",{"range":"1470","text":"1471"},"Update the dependencies array to be: [main.businessHour, main.isClosed]",{"range":"1472","text":"1473"},"Update the dependencies array to be: [onDishClick, onDrinksClick]",{"range":"1474","text":"1475"},"Update the dependencies array to be: [findCategory, selectedCategoryId]",{"range":"1476","text":"1477"},"Update the dependencies array to be: [postProfileChange]",{"range":"1478","text":"1479"},"Update the dependencies array to be: [state]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [dispatch, handleadd, state, user.user.clientId]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [dispatch, fetchAddressList]",{"range":"1484","text":"1485"},"Update the dependencies array to be: [props, setMarkerPosition]",{"range":"1486","text":"1487"},"Update the dependencies array to be: [calculateDistance, props, setMarkerPosition]",{"range":"1488","text":"1489"},"Update the dependencies array to be: [data, getBillAmount, main.deliveryRange, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids, user.user.isUserLoggedIn]",{"range":"1490","text":"1491"},"Update the dependencies array to be: [coupontypeisdiscount, discountnumber, getGrandTotal, maxdiscountnumber, user.delivery_cost]",{"range":"1492","text":"1493"},"Update the dependencies array to be: [discountnumber, maxdiscountnumber]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [dispatch, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids]",{"range":"1496","text":"1497"},"Update the dependencies array to be: [fetchdata, user.user.isUserLoggedIn]",{"range":"1498","text":"1499"},"Add dependencies array: []",{"range":"1500","text":"1501"},"Update the dependencies array to be: [props.orderList]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [counter, onPaginationChange, showPerPage]",{"range":"1504","text":"1505"},"Update the dependencies array to be: [menu.restaurantInfo.restaurant_id]",{"range":"1506","text":"1507"},"Update the dependencies array to be: [DELIVERY_TYPE.DEFAULT, DELIVERY_TYPE.TAKE_AWAY, data, deliveryTypeClick, deliveryTypePickupClick, main.closing, main.opening, main.selectedRestaurant.order_option, menu.restaurantInfo.timezone]",{"range":"1508","text":"1509"},"Update the dependencies array to be: [changeaddress, fetchAddresses]",{"range":"1510","text":"1511"},"Update the dependencies array to be: [defaultadd, fetchAddresses, handleadd]",{"range":"1512","text":"1513"},"Update the dependencies array to be: [api, data.deliveryTime, data.pickupTime, dispatch]",{"range":"1514","text":"1515"},"Update the dependencies array to be: [AddressFromAdd, handleMultipleAddress]",{"range":"1516","text":"1517"},"Update the dependencies array to be: [data.pickupTime, main.closing, props, settime]",{"range":"1518","text":"1519"},"Update the dependencies array to be: [data.deliveryTime, main.closing, props, settime]",{"range":"1520","text":"1521"},[3513,3533],"[initialize, props.restaurantId]",[4222,4224],"[fetchdata, state, user.user.isUserLoggedIn]",[4312,4333],"[]",[3613,3615],"[main.businessHour, main.isClosed]",[2777,2779],"[onDishClick, onDrinksClick]",[3693,3713],"[findCategory, selectedCategoryId]",[2249,2251],"[postProfileChange]",[3302,3304],"[state]",[1514,1525],"[dispatch, handleadd, state, user.user.clientId]",[1623,1625],"[dispatch, fetchAddressList]",[1321,1323],"[props, setMarkerPosition]",[7615,7617],"[calculateDistance, props, setMarkerPosition]",[6291,6293],"[data, getBillAmount, main.deliveryRange, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids, user.user.isUserLoggedIn]",[22590,22607],"[coupontypeisdiscount, discountnumber, getGrandTotal, maxdiscountnumber, user.delivery_cost]",[22701,22720],"[discountnumber, maxdiscountnumber]",[5391,5393],"[dispatch, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids]",[5006,5008],"[fetchdata, user.user.isUserLoggedIn]",[2147,2147],", []",[312,314],"[props.orderList]",[549,558],"[counter, onPaginationChange, showPerPage]",[1119,1121],"[menu.restaurantInfo.restaurant_id]",[3404,3406],"[DELIVERY_TYPE.DEFAULT, DELIVERY_TYPE.TAKE_AWAY, data, deliveryTypeClick, deliveryTypePickupClick, main.closing, main.opening, main.selectedRestaurant.order_option, menu.restaurantInfo.timezone]",[3975,3977],"[changeaddress, fetchAddresses]",[4065,4076],"[defaultadd, fetchAddresses, handleadd]",[20636,20641],"[api, data.deliveryTime, data.pickupTime, dispatch]",[20807,20823],"[AddressFromAdd, handleMultipleAddress]",[2738,2740],"[data.pickupTime, main.closing, props, settime]",[2813,2815],"[data.deliveryTime, main.closing, props, settime]"]