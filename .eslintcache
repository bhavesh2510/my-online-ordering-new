[{"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\index.js":"1","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\reportWebVitals.js":"2","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\App.js":"3","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\store.js":"4","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\reducer.js":"5","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\reducer.js":"6","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\reducer.js":"7","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\reducer.js":"8","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppHeader\\AppHeader.jsx":"9","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Footer\\Footer.jsx":"10","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\RestaurantList.jsx":"11","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actionTypes.js":"12","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actionTypes.js":"13","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\operations.js":"14","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\operations.js":"15","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actionTypes.js":"16","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actionTypes.js":"17","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\operations.js":"18","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\utils\\localStorage.js":"19","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actions.js":"20","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\asyncActions.js":"21","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actions.js":"22","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\index.js":"23","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\LoadingBar\\LoadingBar.jsx":"24","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\PageNotFound\\PageNotFound.jsx":"25","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\RestaurantInformation.jsx":"26","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\utils.js":"27","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\asyncActions.js":"28","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\asyncActions.js":"29","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\selectors.js":"30","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actions.js":"31","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\Restaurants.jsx":"32","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\MyOrders.jsx":"33","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\Information\\Information.jsx":"34","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Slider\\Slider.jsx":"35","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\RestaurantCard\\RestaurantCard.jsx":"36","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuCategories\\MenuCategories.jsx":"37","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrderDetails\\MyOrderDetails.jsx":"38","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\MenuItems\\MenuItems.jsx":"39","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuTable\\MenuTable.jsx":"40","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\MenuModal.jsx":"41","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ForcedModifiers.jsx":"42","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\OptionalModifiers\\OptionalModifiers.jsx":"43","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ModifiersCategory\\ModifierCategory.jsx":"44","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\Cart.jsx":"45","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Login\\Login.jsx":"46","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\CreateAccount\\CreateAccount.js":"47","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ForgotPassword\\ForgotPassword.js":"48","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actions.js":"49","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyProfile\\MyProfile.jsx":"50","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\ManageAddress.jsx":"51","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\ChooseAddress.jsx":"52","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\GoogleMap\\GoogleMap.jsx":"53","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Loader\\Loader.jsx":"54","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\Checkout.jsx":"55","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\WaitingOverlay\\WaitingOverlay.jsx":"56","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\utils.js":"57","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentForm.jsx":"58","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\OrderSuccess\\OrderSuccess.jsx":"59","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\ItemList.jsx":"60","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentFailed.jsx":"61","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ModifierOption.jsx":"62","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\AddAddress.jsx":"63","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\Address.jsx":"64","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppModal\\AppModal.jsx":"65"},{"size":778,"mtime":1622095889839,"results":"66","hashOfConfig":"67"},{"size":375,"mtime":1619596618133,"results":"68","hashOfConfig":"67"},{"size":792,"mtime":1622096360696,"results":"69","hashOfConfig":"67"},{"size":976,"mtime":1619973364808,"results":"70","hashOfConfig":"67"},{"size":7155,"mtime":1620155293746,"results":"71","hashOfConfig":"67"},{"size":906,"mtime":1619596618164,"results":"72","hashOfConfig":"67"},{"size":2635,"mtime":1619596618149,"results":"73","hashOfConfig":"67"},{"size":8154,"mtime":1619596618149,"results":"74","hashOfConfig":"67"},{"size":7208,"mtime":1622093929102,"results":"75","hashOfConfig":"67"},{"size":3763,"mtime":1619596618074,"results":"76","hashOfConfig":"67"},{"size":4381,"mtime":1622033984859,"results":"77","hashOfConfig":"67"},{"size":82,"mtime":1619596618164,"results":"78","hashOfConfig":"67"},{"size":4977,"mtime":1621608218672,"results":"79","hashOfConfig":"67"},{"size":996,"mtime":1619596618164,"results":"80","hashOfConfig":"67"},{"size":865,"mtime":1619596618149,"results":"81","hashOfConfig":"67"},{"size":1132,"mtime":1619596618133,"results":"82","hashOfConfig":"67"},{"size":2909,"mtime":1619596618149,"results":"83","hashOfConfig":"67"},{"size":17687,"mtime":1619596618149,"results":"84","hashOfConfig":"67"},{"size":568,"mtime":1619596618180,"results":"85","hashOfConfig":"67"},{"size":5092,"mtime":1619596618149,"results":"86","hashOfConfig":"67"},{"size":1914,"mtime":1620906885207,"results":"87","hashOfConfig":"67"},{"size":1825,"mtime":1619596618149,"results":"88","hashOfConfig":"67"},{"size":37,"mtime":1619596618133,"results":"89","hashOfConfig":"67"},{"size":431,"mtime":1619596618074,"results":"90","hashOfConfig":"67"},{"size":275,"mtime":1619596618096,"results":"91","hashOfConfig":"67"},{"size":5100,"mtime":1622441635787,"results":"92","hashOfConfig":"67"},{"size":3749,"mtime":1621677651714,"results":"93","hashOfConfig":"67"},{"size":5243,"mtime":1619596618149,"results":"94","hashOfConfig":"67"},{"size":10188,"mtime":1621609088240,"results":"95","hashOfConfig":"67"},{"size":1042,"mtime":1619596618149,"results":"96","hashOfConfig":"67"},{"size":8686,"mtime":1621608054233,"results":"97","hashOfConfig":"67"},{"size":1655,"mtime":1619596618133,"results":"98","hashOfConfig":"67"},{"size":23147,"mtime":1622277038235,"results":"99","hashOfConfig":"67"},{"size":6462,"mtime":1621409498738,"results":"100","hashOfConfig":"67"},{"size":2522,"mtime":1619596618096,"results":"101","hashOfConfig":"67"},{"size":1417,"mtime":1621594130308,"results":"102","hashOfConfig":"67"},{"size":4670,"mtime":1620031878793,"results":"103","hashOfConfig":"67"},{"size":6389,"mtime":1619798971041,"results":"104","hashOfConfig":"67"},{"size":6557,"mtime":1620026340837,"results":"105","hashOfConfig":"67"},{"size":5136,"mtime":1621763920905,"results":"106","hashOfConfig":"67"},{"size":8487,"mtime":1621768957095,"results":"107","hashOfConfig":"67"},{"size":2720,"mtime":1621767262871,"results":"108","hashOfConfig":"67"},{"size":1750,"mtime":1619596618115,"results":"109","hashOfConfig":"67"},{"size":1798,"mtime":1621766579653,"results":"110","hashOfConfig":"67"},{"size":12469,"mtime":1621583048093,"results":"111","hashOfConfig":"67"},{"size":14678,"mtime":1620742562264,"results":"112","hashOfConfig":"67"},{"size":9886,"mtime":1620742520215,"results":"113","hashOfConfig":"67"},{"size":11424,"mtime":1620740749899,"results":"114","hashOfConfig":"67"},{"size":364,"mtime":1619596618164,"results":"115","hashOfConfig":"67"},{"size":7629,"mtime":1621497526761,"results":"116","hashOfConfig":"67"},{"size":5972,"mtime":1622030910541,"results":"117","hashOfConfig":"67"},{"size":20279,"mtime":1622463310001,"results":"118","hashOfConfig":"67"},{"size":7358,"mtime":1621935331537,"results":"119","hashOfConfig":"67"},{"size":261,"mtime":1620740149847,"results":"120","hashOfConfig":"67"},{"size":22091,"mtime":1622466734446,"results":"121","hashOfConfig":"67"},{"size":313,"mtime":1620740802319,"results":"122","hashOfConfig":"67"},{"size":6023,"mtime":1622276436657,"results":"123","hashOfConfig":"67"},{"size":31017,"mtime":1622464842844,"results":"124","hashOfConfig":"67"},{"size":8017,"mtime":1622032296662,"results":"125","hashOfConfig":"67"},{"size":4908,"mtime":1621366043520,"results":"126","hashOfConfig":"67"},{"size":786,"mtime":1621409950295,"results":"127","hashOfConfig":"67"},{"size":1684,"mtime":1621767829007,"results":"128","hashOfConfig":"67"},{"size":13399,"mtime":1622463123967,"results":"129","hashOfConfig":"67"},{"size":1427,"mtime":1622023510117,"results":"130","hashOfConfig":"67"},{"size":4025,"mtime":1622013096538,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1sz4uph",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"134"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"134"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"134"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"134"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"134"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"134"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"134"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"134"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"276","usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"134"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"134"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"134"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"134"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"134"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"298","messages":"299","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\index.js",[],["300","301"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\reportWebVitals.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\App.js",["302","303","304","305","306","307","308","309","310"],"import RestaurantList from \"./containers/RestaurantList/RestaurantList\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Appheader from \"./components/AppHeader/AppHeader\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Checkout from \"./components/Checkout/Checkout\";\r\nimport { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction App() {\r\n  const [state, setState] = useState(true);\r\n  const menu = useSelector((state) => state.menu);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* <Appheader /> */}\r\n        <RestaurantList />\r\n\r\n        {/* <Footer /> */}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\store.js",["311"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport menuReducer from \"./menu/reducer\";\r\nimport mainReducer from \"./main/reducer\";\r\nimport userReducer from \"./user/reducer\";\r\nimport modalReducer from \"./modal/reducer\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      /* Options like actionSanitizer, stateSanitizer */\r\n    })\r\n  : compose;\r\nconst middlewareCandidates = [thunk];\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   middlewareCandidates.push(createLogger());\r\n// }\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewareCandidates));\r\nconst rootReducer = combineReducers({\r\n  menu: menuReducer,\r\n  main: mainReducer,\r\n  user: userReducer,\r\n  modal: modalReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\reducer.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppHeader\\AppHeader.jsx",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Logo from \"../../assets/img/zottoLogo.png\";\r\nimport {\r\n  setUserLoggedOut,\r\n  showLoginFormMethod,\r\n  showRegisterFormMethod,\r\n} from \"../../state-management/user/actions\";\r\n// import \"./AppHeader.scss\";\r\n\r\nconst Appheader = () => {\r\n  const History = useHistory();\r\n  const menu = useSelector((state) => state.menu);\r\n\r\n  const [navbar, setNavbar] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 60) {\r\n      setNavbar(true);\r\n    } else {\r\n      setNavbar(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackground);\r\n\r\n  const callLogout = () => {\r\n    dispatch(setUserLoggedOut());\r\n    window.location.replace(\r\n      `${process.env.REACT_APP_PUBLIC_URL}restId=${menu.restaurantInfo.restaurant_id}/menu`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className=\"main-header\"\r\n      style={{\r\n        background: `${navbar ? \"#242B2E\" : \"black\"}`,\r\n        boxShadow: \"1px 6px 18px -4px #000000\",\r\n      }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-4 col-sm-4 col-4\"\r\n            style={{ fontSize: \"1.2rem\", color: \"black\" }}\r\n          >\r\n            {/* paste logo here */}\r\n            <img width=\"100px\" height=\"30px\" src={Logo} alt=\"zotto\" />\r\n          </div>\r\n          <nav className=\"col-md-8 col-sm-8 col-8\">\r\n            <a\r\n              className=\"cmn-toggle-switch cmn-toggle-switch__htx open_close\"\r\n              href=\"javascript:void(0);\"\r\n            >\r\n              <span>Menu mobile</span>\r\n            </a>\r\n            <div className=\"main-menu\">\r\n              <div id=\"header_menu\">\r\n                <img src=\"img/logo.png\" width={190} height={23} alt />\r\n              </div>\r\n              <a href=\"#\" className=\"open_close\" id=\"close_in\">\r\n                <i className=\"icon_close\" />\r\n              </a>\r\n              <ul>\r\n                {Number(menu.restaurantInfo[\"chain_owner_id\"]) ? (\r\n                  <li key={11} className=\"navigation-buttons\">\r\n                    {/* Should figure out why Link is not working as expected, page getting redirected */}\r\n                    <a\r\n                      // onClick={() =>\r\n                      //   history.push(\r\n                      //     `${process.env.REACT_APP_PUBLIC_URL}chainId=${menu.restaurantInfo.chain_owner_id}`\r\n                      //   )\r\n                      // }\r\n                      href={`?/chainId=${menu.restaurantInfo.chain_owner_id}`}\r\n                    >\r\n                      Home\r\n                    </a>\r\n                  </li>\r\n                ) : null}\r\n                <li\r\n                  style={{ color: \"white\", cursor: \"pointer\" }}\r\n                  onClick={() => History.push(\"menu\")}\r\n                >\r\n                  <a\r\n                  // href={`?/restId=${menu.restaurantInfo.restaurant_id}/menu`}\r\n                  >\r\n                    Menu\r\n                  </a>\r\n                </li>\r\n\r\n                {user.user.isUserLoggedIn ? (\r\n                  <li\r\n                    className=\"submenu\"\r\n                    style={{ color: \"white\", cursor: \"pointer\" }}\r\n                    onClick={() => History.push(\"myOrders\")}\r\n                  >\r\n                    {user.user.isUserLoggedIn ? (\r\n                      <a className=\"show-submenu\">\r\n                        {user.user.firstName}\r\n                        <i className=\"icon-down-open-mini\" />\r\n                      </a>\r\n                    ) : (\r\n                      <a className=\"show-submenu\">\r\n                        user\r\n                        <i className=\"icon-down-open-mini\" />\r\n                      </a>\r\n                    )}\r\n                    {/* <a href=\"javascript:void(0);\" className=\"show-submenu\">\r\n                    user\r\n                    <i className=\"icon-down-open-mini\" />\r\n                  </a> */}\r\n\r\n                    <ul>\r\n                      <li\r\n                        style={{ color: \"white\", cursor: \"pointer\" }}\r\n                        onClick={() => History.push(\"myOrders\")}\r\n                      >\r\n                        <a\r\n                          style={{ color: \"black\", cursor: \"pointer\" }}\r\n                          //href={`?/restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\r\n                          //onClick={()=>History.push(`/restId=${menu.restaurantInfo.restaurant_id}/myProfile`)}\r\n                        >\r\n                          Edit Profile\r\n                        </a>\r\n                      </li>\r\n                      <li\r\n                        style={{ color: \"black\", cursor: \"pointer\" }}\r\n                        onClick={() => History.push(\"myOrders\")}\r\n                      >\r\n                        <a\r\n                          style={{ color: \"black\" }}\r\n                          style={{ color: \"black\" }}\r\n                          //href={`?/restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\r\n                        >\r\n                          Manage Addresses\r\n                        </a>\r\n                      </li>\r\n                      <li\r\n                        style={{ color: \"white\", cursor: \"pointer\" }}\r\n                        onClick={() => History.push(\"myOrders\")}\r\n                      >\r\n                        <a\r\n                          style={{ color: \"black\" }}\r\n                          //href={`?/restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\r\n                        >\r\n                          My Orders\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          onClick={callLogout}\r\n                          style={{ color: \"black\", cursor: \"pointer\" }}\r\n                        >\r\n                          Logout\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                ) : null}\r\n\r\n                <li>\r\n                  <a\r\n                    style={{ color: \"white\", cursor: \"pointer\" }}\r\n                    onClick={() => dispatch(showLoginFormMethod())}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#login_2\"\r\n                  >\r\n                    Login\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    style={{ color: \"white\", cursor: \"pointer\" }}\r\n                    onClick={() => dispatch(showRegisterFormMethod())}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#login_2\"\r\n                  >\r\n                    Register\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {/* End main-menu */}\r\n          </nav>\r\n        </div>\r\n        {/* End row */}\r\n      </div>\r\n      {/* End container */}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Appheader;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Footer\\Footer.jsx",["328"],"import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <footer>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <h3>Secure payments with</h3>\r\n              <p>\r\n                <img src=\"img/cards.png\" className=\"img-fluid\" />\r\n              </p>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <h3>About</h3>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"about.html\">About us</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"faq.html\">Faq</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"contacts.html\">Contacts</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#0\" data-toggle=\"modal\" data-target=\"#login_2\">\r\n                    Login\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#0\" data-toggle=\"modal\" data-target=\"#register\">\r\n                    Register\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#0\">Terms and conditions</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <h3>Settings</h3>\r\n              <div className=\"styled-select\">\r\n                <select name=\"lang\" id=\"lang\">\r\n                  <option value=\"English\" selected>\r\n                    English\r\n                  </option>\r\n                  <option value=\"French\">Norweigien</option>\r\n                  <option value=\"Spanish\">Spanish</option>\r\n                  <option value=\"Russian\">German</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"styled-select\">\r\n                <select name=\"currency\" id=\"currency\">\r\n                  <option value=\"USD\" selected>\r\n                    USD\r\n                  </option>\r\n                  <option value=\"EUR\">EUR</option>\r\n                  <option value=\"GBP\">GBP</option>\r\n                  <option value=\"RUB\">KR</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* End row */}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div id=\"social_footer\">\r\n                <ul>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-facebook\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-twitter\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-google\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-instagram\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-pinterest\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-vimeo\" />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#0\">\r\n                      <i className=\"icon-youtube-play\" />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <p>© Quick Food 2020</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* End row */}\r\n        </div>\r\n        {/* End container */}\r\n      </footer>\r\n    );\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\RestaurantList.jsx",["329","330"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n// import RestaurantInformation from \"../RestaurantInformation\";\r\nimport { setSelectedRestaurant } from \"../../state-management/main/actions\";\r\nimport {\r\n  setLoadingDisplay,\r\n  clearMenuState,\r\n  clearState,\r\n  showHideOverlay,\r\n} from \"../../state-management/menu/actions\";\r\nimport {\r\n  fetchRestuarantInformation,\r\n  fetchRestuarantList,\r\n} from \"../../state-management/main/asyncActions\";\r\n// import \"./RestaurantList.scss\";\r\nimport Restaurants from \"./Restaurants/\";\r\nimport PageNotFound from \"../../components/PageNotFound/PageNotFound\";\r\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\nimport RestaurantInformation from \"../RestaurantInformation/RestaurantInformation\";\r\nimport Login from \"../../components/Login/Login\";\r\n// import { LoadingBar } from \"../../components/LoadingBar\";\r\n\r\nclass RestaurantList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { showLoading: true };\r\n    this.initialize();\r\n  }\r\n\r\n  async initialize() {\r\n    const param = window.location.href.split(\"feedmii/?/\")[1];\r\n\r\n    if (param) {\r\n      const restOrChainId = param.split(\"=\")[0];\r\n      const chainText = param.split(\"=\")[1];\r\n\r\n      if (!chainText) {\r\n        this.setState({ showLoading: false });\r\n        this.props.setLoadingDisplay(true);\r\n\r\n        return;\r\n      }\r\n      const value = chainText.split(\"/\")[0];\r\n\r\n      if (restOrChainId === \"chainId\") {\r\n        this.fetchRestaurantList(value);\r\n      } else {\r\n        const { payload } = await this.props.fetchRestuarantInformation(value);\r\n\r\n        if (payload) {\r\n          this.props.setSelectedRestaurant(payload[0], value);\r\n        }\r\n        this.props.setLoadingDisplay(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchRestaurantList(chainId) {\r\n    await this.props.fetchRestuarantList(chainId);\r\n    this.setState({ showLoading: false });\r\n    this.props.setLoadingDisplay(true);\r\n  }\r\n\r\n  handleHomeClick = (chainId) => {\r\n    this.setState({ showLoading: true });\r\n    this.props.setLoadingDisplay(false);\r\n    this.props.clearMenuState();\r\n    this.fetchRestaurantList(chainId);\r\n    window.location.replace(\r\n      `${process.env.REACT_APP_PUBLIC_URL}chainId=${chainId}`\r\n    );\r\n  };\r\n\r\n  renderRestaurantList() {\r\n    return <Restaurants restaurants={this.props.restaurants} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.REACT_APP_PUBLIC_URL}>\r\n        {this.props.canShow ? (\r\n          <div className={\"restaurant-list-container\"}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                {this.props.restId ? (\r\n                  <Redirect to={`/restId=${this.props.restId}`} />\r\n                ) : (\r\n                  this.renderRestaurantList()\r\n                )}\r\n              </Route>\r\n              <Route\r\n                exact\r\n                path={`/chainId=${this.props.chainId}`}\r\n                children={this.renderRestaurantList()}\r\n              />\r\n              {/* <Route path=\"*\">\r\n                <PageNotFound />\r\n              </Route> */}\r\n              {/* Should fimd a way to redirect 404 */}\r\n            </Switch>\r\n\r\n            {console.log(\"selectedRestaurant\", this.props.selectedRestaurant)}\r\n            {this.props.selectedRestaurant ? (\r\n              <RestaurantInformation\r\n                restaurantId={this.props.restId}\r\n                onHomeClick={this.handleHomeClick}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          <LoadingBar />\r\n        )}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ main, menu }) {\r\n  return {\r\n    restaurants: main.restaurants,\r\n    chainId: main.chainId,\r\n    restId: main.restId,\r\n    canShow: menu.canShow,\r\n    displayAddressModal: menu.displayAddressModal,\r\n    selectedRestaurant: main.selectedRestaurant,\r\n    showHideOverlay: menu.showHideOverlay,\r\n    previousSelectedRestaurantId: menu.restaurantId,\r\n  };\r\n}\r\n\r\nexport const mapDispatchToProps = {\r\n  setSelectedRestaurant,\r\n  fetchRestuarantInformation,\r\n  setLoadingDisplay,\r\n  fetchRestuarantList,\r\n  clearMenuState,\r\n  showHideOverlay,\r\n  clearState,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\operations.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\operations.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actionTypes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\operations.js",["331","332","333","334"],"import { getModifierIds, getDetours, isSameItem } from './utils';\r\nimport { truncateDecimal } from './utils';\r\n\r\nexport function updateMenuItemsWithCart(menuList, cart) {\r\n  const updatedItems = menuList.map((item) => {\r\n    const cartItems = cart.filter(({ id }) => item.id === id);\r\n    const totalQty = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n    const totalHappyHourQty = cartItems.reduce((acc, item) => acc + (item.happyHourItem ? item.happyHourItem.qty : 0), 0);\r\n    const cartItemsWithNonZeroQty = cartItems.filter((item) => item.qty > 0);\r\n\r\n    if (cartItems.length) {\r\n      return {\r\n        ...item,\r\n        ...cartItems[0],\r\n        subTotal: cartItems.reduce((acc, item) => acc + item.subTotal, 0) || Number(item.price),\r\n        qty: cartItems.length > 1 ? totalQty : cartItems[cartItems.length - 1].qty,\r\n        similarItems: cartItemsWithNonZeroQty.length ? cartItemsWithNonZeroQty : [],\r\n        happyHourItem: cartItems[cartItems.length - 1].happyHourItem && totalHappyHourQty !== 0\r\n          ? {\r\n            ...cartItems[cartItems.length - 1].happyHourItem,\r\n            qty: cartItems.length > 1 ? totalHappyHourQty : cartItems[cartItems.length - 1].happyHourItem.qty,\r\n          }\r\n          : null,\r\n      };\r\n    }\r\n\r\n    return getInitialMenuItem(item);\r\n  });\r\n\r\n  return updatedItems;\r\n}\r\n\r\nexport function updatePizzaItemsWithCart(pizzaList, cart) {\r\n  const updatedItems = pizzaList.map((item) => {\r\n    const cartItems = cart.filter(({ id }) => item.pizza_id === id);\r\n    const totalQty = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n    const totalHappyHourQty = cartItems.reduce((acc, item) => acc + (item.happyHourItem ? item.happyHourItem.qty : 0), 0);\r\n    const cartItemsWithNonZeroQty = cartItems.filter((item) => item.qty > 0);\r\n\r\n    if (cartItems.length) {\r\n      return {\r\n        ...item,\r\n        ...cartItems[0],\r\n        subTotal: cartItems.reduce((acc, item) => acc + item.subTotal, 0) || Number(item.price),\r\n        qty: cartItems.length > 1 ? totalQty : cartItems[cartItems.length - 1].qty,\r\n        similarItems: cartItemsWithNonZeroQty.length ? cartItemsWithNonZeroQty : [],\r\n        happyHourItem: cartItems[cartItems.length - 1].happyHourItem && totalHappyHourQty !== 0\r\n          ? {\r\n            ...cartItems[cartItems.length - 1].happyHourItem,\r\n            qty: cartItems.length > 1 ? totalHappyHourQty : cartItems[cartItems.length - 1].happyHourItem.qty,\r\n          }\r\n          : null,\r\n      };\r\n    }\r\n\r\n    return getInitialPizzaItem(item);\r\n  });\r\n\r\n  return updatedItems;\r\n}\r\n\r\nfunction getInitialMenuItem(item) {\r\n  return {\r\n    ...item,\r\n    similarItems: [],\r\n    modifiers: null,\r\n    subTotal: 0,\r\n    grandTotal: 0,\r\n    fmId: '',\r\n    omId: '',\r\n    detours: '',\r\n    qty: 0,\r\n    vat: 0,\r\n    tax: 0,\r\n    happyHourItem: null,\r\n    'service_tax': 0,\r\n    'local_tax': 0,\r\n    'other_tax': 0,\r\n  };\r\n}\r\n\r\nfunction getInitialPizzaItem(item) {\r\n  return {\r\n    ...item,\r\n    similarItems: [],\r\n    modifiers: null,\r\n    subTotal: 0,\r\n    grandTotal: 0,\r\n    toppingIdx1: [],\r\n    baseId: null,\r\n    sizeId: null,\r\n    selectedBase: null,\r\n    defaultToppings: [],\r\n    optionalToppings: [],\r\n    firstHalf: null,\r\n    secondHalf: null,\r\n    qty: 0,\r\n    vat: 0,\r\n    tax: 0,\r\n    happyHourItem: null,\r\n    'service_tax': 0,\r\n    'local_tax': 0,\r\n    'other_tax': 0,\r\n  };\r\n}\r\n\r\nexport function revertMenuItemsToInitialState(menuItems) {\r\n  return menuItems.map((menuItem) => getInitialMenuItem(menuItem));\r\n}\r\n\r\nexport function revertCartItemsToInitialState(pizzaItems) {\r\n  return pizzaItems.map((pizzaItem) => getInitialPizzaItem(pizzaItem));\r\n}\r\n\r\nfunction getNewQuantity(itemExisted, qty, buyQty, getQty) {\r\n  if (itemExisted.happyHourItem && itemExisted.happyHourItem.qty) {\r\n    if (buyQty > getQty) {\r\n      return ((qty % (buyQty + getQty)) === 0) ? (qty / (buyQty + getQty) * getQty) : itemExisted.happyHourItem.freeQty;\r\n    } else if (buyQty === getQty) {\r\n      const reminder = qty % (buyQty + getQty);\r\n\r\n      return reminder > buyQty || reminder === 0 ? (itemExisted.happyHourItem.freeQty || 0) + 1 : itemExisted.happyHourItem.freeQty || 0;\r\n    } else {\r\n      const val = qty % (buyQty + getQty);\r\n\r\n      if (val && val % getQty === 0) {\r\n        return (itemExisted.happyHourItem.freeQty || 0) + ((qty % (buyQty + getQty)) / getQty);\r\n      } else if (qty % (buyQty + getQty) === 0) {\r\n        return (qty / (buyQty + getQty)) * getQty;\r\n      }\r\n\r\n      return itemExisted.happyHourItem.freeQty;\r\n    }\r\n  }\r\n\r\n  return itemExisted.happyHourItem ? itemExisted.happyHourItem.freeQty : 0;\r\n}\r\n\r\nfunction getHappyHoursSubTotalAndQuantity(item) {\r\n  switch (item.happyHourDetail.type) {\r\n    case 'Discount': {\r\n      const newTotal = ((item.grandTotal / item.qty) || Number(item.price));\r\n      const grandTotal = item.grandTotal - (item.qty * (newTotal * (Number(item.happyHourDetail.discount) / 100)));\r\n\r\n      return {\r\n        subTotal: grandTotal - item.tax,\r\n        grandTotal,\r\n        qty: item.qty,\r\n      };\r\n    }\r\n    case 'Amount': {\r\n      const grandTotal = item.grandTotal - (Number(item.qty) * Number(item.happyHourDetail.amount));\r\n\r\n      return {\r\n        subTotal: grandTotal - item.tax,\r\n        grandTotal,\r\n        qty: item.qty,\r\n      };\r\n    }\r\n    default: {\r\n      const buyQty = Number(item.happyHourDetail['buy_qty']);\r\n      const getQty = Number(item.happyHourDetail['get_qty']);\r\n\r\n      if (item.qty >= buyQty) {\r\n        const freeQty = getNewQuantity(item, item.qty, buyQty, getQty);\r\n        const freeSubTotal = freeQty ? item.subTotal - (freeQty * (item.subTotal / item.qty)) : item.subTotal;\r\n        const freeGrandTotal = freeQty ? item.grandTotal - (freeQty * (item.grandTotal / item.qty)) : item.grandTotal;\r\n\r\n        return {\r\n          qty: item.qty,\r\n          subTotal: freeSubTotal,\r\n          grandTotal: freeGrandTotal,\r\n          freeQty,\r\n        };\r\n      }\r\n\r\n      return {\r\n        subTotal: item.subTotal,\r\n        grandTotal: item.grandTotal,\r\n        qty: item.qty,\r\n        freeQty: 0,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function addItem(item, modifiers, subTotal, menuList, cart, restaurantInfo, pizzas) {\r\n  const itemFmId = modifiers ? getModifierIds(modifiers.forcedModifier) || item.fmId : '';\r\n  const itemOmId = modifiers ? getModifierIds(modifiers.optionalModifier) || item.omId : '';\r\n  const itemDetours = modifiers ? getDetours(modifiers.forcedModifier) || item.detours : '';\r\n  const itemExisted = cart.find((cartItem) => isSameItem(item, modifiers, cartItem));\r\n  const { isHappyHourActive } = item;\r\n\r\n  const minQty = Number(item.min_qty) === 0 ? 1 : Number(item.min_qty);\r\n\r\n  let newItem = itemExisted\r\n    ? {\r\n      ...itemExisted,\r\n      qty: itemExisted.qty + 1,\r\n      subTotal: itemExisted.subTotal + ((item.subTotal / itemExisted.qty) || Number(item.price)),\r\n    }\r\n    : {\r\n      ...item,\r\n      qty: minQty,\r\n      fmId: itemFmId,\r\n      omId: itemOmId,\r\n      detours: itemDetours,\r\n      modifiers,\r\n      subTotal: (subTotal * minQty) || (Number(item.price) * minQty),\r\n      happyHourItem: null,\r\n    };\r\n  const taxes = getTaxes(item, newItem.subTotal, restaurantInfo);\r\n\r\n  newItem = {\r\n    ...newItem,\r\n    grandTotal: newItem.subTotal + taxes.tax,\r\n    ...taxes,\r\n  };\r\n\r\n  newItem = {\r\n    ...newItem,\r\n    happyHourItem: isHappyHourActive\r\n      ? {\r\n        ...getHappyHoursSubTotalAndQuantity(newItem),\r\n        ...taxes,\r\n      }\r\n      : null,\r\n  };\r\n\r\n  const updatedCart = itemExisted\r\n    ? cart.map((item) => {\r\n      if (isSameItem(newItem, modifiers, item)) {\r\n        return newItem;\r\n      } else if (!itemExisted && (newItem.id === item.id)) {\r\n        return {\r\n          ...item,\r\n          grandTotal: subTotal + taxes.taxSubtotal,\r\n          ...taxes,\r\n        };\r\n      }\r\n\r\n      return item;\r\n    })\r\n    : [\r\n      ...cart,\r\n      newItem,\r\n    ];\r\n\r\n  return {\r\n    cart: updatedCart,\r\n    menuItems: updateMenuItemsWithCart(menuList, updatedCart),\r\n    pizzas: updatePizzaItemsWithCart(pizzas, updatedCart),\r\n  };\r\n}\r\n\r\nfunction getHappyHourDetailsForRemovedItem(item, qty) {\r\n  switch (item.happyHourDetail.type) {\r\n    case 'Amount':\r\n    case 'Discount': {\r\n      const subTotal = item.happyHourItem.subTotal - (item.happyHourItem.subTotal / item.qty);\r\n      const grandTotal = item.happyHourItem.grandTotal - (item.happyHourItem.grandTotal / item.qty);\r\n\r\n      return {\r\n        subTotal,\r\n        grandTotal,\r\n        qty,\r\n      };\r\n    }\r\n    default: {\r\n      const happyQty = item.happyHourItem.qty - item.happyHourItem.freeQty;\r\n      const happySubTotal = item.happyHourItem.subTotal - (item.happyHourItem.subTotal / happyQty);\r\n      const happyGrandTotal = item.happyHourItem.grandTotal - (item.happyHourItem.grandTotal / happyQty);\r\n      const buyQty = Number(item.happyHourDetail['buy_qty']);\r\n      const getQty = Number(item.happyHourDetail['get_qty']);\r\n      const reminder = item.happyHourItem.qty % (buyQty + getQty);\r\n\r\n      if (\r\n        item.happyHourItem.freeQty &&\r\n        (\r\n          (buyQty > getQty && item.happyHourItem.qty % (buyQty + getQty) === 0) ||\r\n          (buyQty < getQty && (item.happyHourItem.qty % (buyQty + getQty)) % getQty === 0)) ||\r\n          (buyQty === getQty && (reminder === 0 || reminder > buyQty))\r\n      ) {\r\n        return {\r\n          qty,\r\n          freeQty: item.happyHourItem.freeQty - 1,\r\n          subTotal: item.happyHourItem.subTotal,\r\n          grandTotal: item.happyHourItem.grandTotal,\r\n        };\r\n      }\r\n\r\n      return {\r\n        qty,\r\n        freeQty: item.happyHourItem.freeQty,\r\n        subTotal: happySubTotal,\r\n        grandTotal: happyGrandTotal,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeItem(item, menuList, cart, restaurantInfo, pizzas) {\r\n  const updatedCart = cart.map((cartItem) => {\r\n    if (isSameItem(item, item.modifiers, cartItem)) {\r\n      const minQty = Number(item.min_qty) === 0 ? 1 : Number(item.min_qty);\r\n\r\n      let subtractQty = 1;\r\n\r\n      if (minQty > 0 && cartItem.qty === minQty) {\r\n        subtractQty = minQty;\r\n      }\r\n      const qty = cartItem.qty - subtractQty;\r\n      const subTotal = cartItem.subTotal - (cartItem.subTotal / cartItem.qty);\r\n      const { isHappyHourActive } = cartItem;\r\n      const taxes = getTaxes(item, subTotal, restaurantInfo);\r\n      const happyHrDetails = cartItem.happyHourItem && isHappyHourActive ? getHappyHourDetailsForRemovedItem(cartItem, qty, subTotal, taxes.tax) : null;\r\n\r\n      return {\r\n        ...cartItem,\r\n        qty,\r\n        subTotal: qty > 0 ? subTotal : 0,\r\n        grandTotal: qty > 0 ? subTotal + taxes.tax : 0,\r\n        fmId: qty > 0 ? cartItem.fmId : '',\r\n        omId: qty > 0 ? cartItem.omId : '',\r\n        detours: qty > 0 ? cartItem.detours : '',\r\n        modifiers: qty > 0 ? item.modifiers : null,\r\n        ...taxes,\r\n        happyHourItem: qty && isHappyHourActive && happyHrDetails && happyHrDetails.qty\r\n          ? {\r\n            ...happyHrDetails,\r\n            ...taxes,\r\n          }\r\n          : null,\r\n      };\r\n    }\r\n\r\n    return cartItem;\r\n  });\r\n\r\n  return {\r\n    cart: updatedCart.filter((item) => item.qty > 0),\r\n    menuItems: updateMenuItemsWithCart(menuList, updatedCart),\r\n    pizzas: updatePizzaItemsWithCart(pizzas, updatedCart),\r\n  };\r\n}\r\n\r\nexport function removeCartItem(item, menuList, pizzas, cart) {\r\n  const updatedCart = cart.filter((_, i) => i !== item.index);\r\n  const updatedMenuItems = menuList.map((menuItem) => {\r\n    if (menuItem.id === item.id) {\r\n      return getInitialMenuItem(menuItem);\r\n    }\r\n\r\n    return menuItem;\r\n  });\r\n\r\n  const updatedPizzaItems = pizzas.map((pizza) => {\r\n    if (pizza.pizza_id === item.id) {\r\n      return getInitialPizzaItem(pizza);\r\n    }\r\n\r\n    return pizza;\r\n  });\r\n\r\n  return {\r\n    cart: updatedCart,\r\n    menuItems: item.qty > 0 ? updateMenuItemsWithCart(menuList, updatedCart) : updatedMenuItems,\r\n    pizzas: (item.qty > 0 && item.isPizza) ? updatePizzaItemsWithCart(pizzas, updatedCart) : updatedPizzaItems,\r\n  };\r\n}\r\n\r\nexport function getTaxes(item, subTotal, restaurantInfo) {\r\n  const { 'is_localtax': isLocal, 'is_othertax': isOther, 'is_vat': isVat, 'is_servicetax': isService } = item;\r\n  const { 'local_tax': localTax, vat: vatAmt, 'service_tax': serviceTax, 'other_tax': otherTax } = restaurantInfo;\r\n  const service = Number(isService) ? subTotal * (Number(serviceTax) / 100) : 0;\r\n  const vat = Number(isVat) ? subTotal * (Number(vatAmt) / 100) : 0;\r\n  const local = Number(isLocal) ? subTotal * (Number(localTax) / 100) : 0;\r\n  const other = Number(isOther) ? subTotal * (Number(otherTax) / 100) : 0;\r\n  const tax = service + vat + local + other;\r\n\r\n  return {\r\n    'vatAmt': vat,\r\n    tax,\r\n    'serviceTax': service,\r\n    'localTax': local,\r\n    'otherTax': other,\r\n  };\r\n}\r\n\r\nexport function getPizzaActualPrice(pizza, price, restaurantInfo) {\r\n  const isPriceWithoutTax = Number(restaurantInfo['price_without_tax_flag']);\r\n\r\n  return isPriceWithoutTax ? Number(price) : truncateDecimal(Number(price) + Number(getTaxes(pizza, Number(price), restaurantInfo).tax));\r\n}\r\n\r\nexport function getSelectedCategoryId(categoryList) {\r\n  if (categoryList.length) {\r\n    const subCategory = categoryList[0]['sub_category'] ? categoryList[0]['sub_category'][0] : null;\r\n\r\n    return subCategory ? subCategory['category_id'] : '';\r\n  }\r\n}\r\n\r\n// happy hours related.\r\nexport function updateHappyHourInfoToMenuItems(menuList, restInfo, happyHours) {\r\n  // check for each Item if happy hour is avaliable\r\n  // If available then add happy hour related info in item object\r\n  // like happy hour data(type, discount) , time left for availing offer\r\n\r\n  const menuItems = menuList.map(function(item) {\r\n    const result = isAvailableInHappyHours(item, restInfo, happyHours);\r\n    // if item don't have offer Id return as it is\r\n\r\n    if (!result.isHappyHourActive) {\r\n      item.isHappyHourActive = false;\r\n    } else {\r\n      // update happy hours details Item object and return\r\n      item.isHappyHourActive = true;\r\n      item.happyHourDetail = result.happyHourDetail;\r\n    }\r\n\r\n    return item;\r\n  });\r\n\r\n  return menuItems;\r\n}\r\n\r\nexport function isAvailableInHappyHours(item, restInfo, happyHours) {\r\n  // check if this item is available in happy hours or not\r\n  const result = {\r\n    isHappyHourActive: false,\r\n    happyHourDetail: {},\r\n    timeoutIndex: 0,\r\n  };\r\n\r\n  const options = {\r\n    timeZone: restInfo.timezone,\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n    hour12: false,\r\n  };\r\n\r\n  const getRestaurantTimeNDay = new Date().toLocaleString('en-SG', options);\r\n\r\n  const currentDay = getRestaurantTimeNDay.split(',')[0].trim();\r\n\r\n  const currentTime = getRestaurantTimeNDay.split(',')[2].trim();\r\n\r\n  const currentMonthDay = `${getRestaurantTimeNDay.split(',')[1].trim().split(' ')[0].trim()} ${getRestaurantTimeNDay.split(',')[1].trim().split(' ')[1].trim()}`;\r\n\r\n  const currentYear = getRestaurantTimeNDay.split(',')[1].trim().split(' ')[2].trim();\r\n\r\n  const happyHourIds = item.happy_hours_id.split(',');\r\n\r\n  let countDownTime;\r\n\r\n  let countDownDateTime;\r\n\r\n  let timeoutIndex = 0;\r\n\r\n  let found;\r\n\r\n  for (let i = 0; i < happyHourIds.length; i++) {\r\n    found = happyHours.find(element => {\r\n      if (element.happy_hours_id === happyHourIds[i]\r\n          && isDayAvailable(currentDay, element) && isAvailableInTimeLimit(element, currentTime)\r\n      ) {\r\n        // if length is 1 then straight away return element\r\n        countDownTime = `${element.time_to}:00`;\r\n        countDownDateTime = `${currentDay}, ${currentMonthDay} ${currentYear}, ${countDownTime}`;\r\n\r\n        if (happyHourIds.length === 1) {\r\n          return element;\r\n        } else if (element.type === 'Buy_n_Get') { //\r\n          return element;\r\n        } else if (i === happyHourIds.length - 1) {\r\n          return element;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (found !== undefined) {\r\n    result.isHappyHourActive = true;\r\n    result.happyHourDetail = found;\r\n    result.happyHourDetail.countDownDate = countDownDateTime;\r\n    //setTimer(getRestaurantTimeNDay, countDownDateTime);\r\n    result.happyHourDetail.happyHourTimeOutIndex = timeoutIndex;\r\n    timeoutIndex++;\r\n\r\n    if (found.type === 'Buy_n_Get') {\r\n      result.happyHourDetail.happyHourDisplayText = `Pay for ${Number(found.buy_qty)} get upto ${Number(found.get_qty) + Number(found.buy_qty)}`;\r\n    } else if (found.type === 'Amount') {\r\n      result.happyHourDetail.happyHourDisplayText = `Get ${restInfo.monetary_symbol} ${found.amount} Off`;\r\n    } else {\r\n      result.happyHourDetail.happyHourDisplayText = `Get ${found.discount}% Off`;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function isDayAvailable(day, happyHour) {\r\n  let result = false;\r\n  const found = happyHour.day.split(',').find(element => element.toLowerCase() === day.toLowerCase());\r\n\r\n  if (found !== undefined) {\r\n    result = true;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function isAvailableInTimeLimit(item, time) {\r\n  const currentHour = parseInt(time.split(':')[0]);\r\n\r\n  const currentMinute = parseInt(time.split(':')[1]);\r\n\r\n  const timeFromHour = parseInt(item.time_from.split(':')[0]);\r\n\r\n  const timeFromMinute = parseInt(item.time_from.split(':')[1]);\r\n\r\n  const timeToHour = parseInt(item.time_to.split(':')[0]);\r\n\r\n  const timeToMinute = parseInt(item.time_to.split(':')[1]);\r\n\r\n  if ((currentHour > timeFromHour || (currentHour === timeFromHour && currentMinute >= timeFromMinute))\r\n      && (currentHour < timeToHour || (currentHour === timeToHour && currentMinute <= timeToMinute))\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\utils\\localStorage.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\asyncActions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\main\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\index.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\LoadingBar\\LoadingBar.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\PageNotFound\\PageNotFound.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\RestaurantInformation.jsx",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchCategories,\r\n  fetchMenuItems,\r\n  fetchPizzas,\r\n  fetchAllForcedModifiers,\r\n  fetchAllOptionalModifiers,\r\n  fetchHappyHours,\r\n} from \"../../state-management/menu/asyncActions\";\r\nimport {\r\n  setLoadingDisplay,\r\n  addItem,\r\n  removeItem,\r\n  setSearchQuery,\r\n  initializeStoreState,\r\n  clearState,\r\n  clearMenuState,\r\n  displayAddressModal,\r\n} from \"../../state-management/menu/actions\";\r\nimport {\r\n  fetchRestuarantInformation,\r\n  fetchRestuarantList,\r\n  fetchRestuarantDeliveryRange,\r\n} from \"../../state-management/main/asyncActions\";\r\nimport { fetchAddressesList } from \"../../state-management/user/asyncActions\";\r\nimport { setSelectedRestaurant } from \"../../state-management/main/actions\";\r\nimport {\r\n  showLoginFormMethod,\r\n  setSelectedAddress,\r\n} from \"../../state-management/user/actions\";\r\nimport { getFilterredList } from \"../../state-management/menu/selectors\";\r\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\nimport Information from \"./Information/Information\";\r\nimport MyOrders from \"../../components/MyOrders/MyOrders\";\r\nimport MyProfile from \"../../components/MyProfile/MyProfile\";\r\nimport ManageAddress from \"../../components/ManageAddress/ManageAddress\";\r\nimport Checkout from \"../../components/Checkout/Checkout\";\r\nimport OrderSuccess from \"../../components/OrderSuccess/OrderSuccess\";\r\nimport PaymentFailed from \"../../components/Checkout/PaymentFailed\";\r\n// import { AppModal } from \"../../components/AppModal/AppModal\";\r\nconst RestaurantInformation = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const [loading, setLoading] = useState(true);\r\n  const initialize = async () => {\r\n    await dispatch(initializeStoreState(props.restaurantId));\r\n    await dispatch(fetchHappyHours(props.restaurantId));\r\n    await dispatch(fetchMenuItems(props.restaurantId));\r\n    await dispatch(fetchPizzas(props.restaurantId));\r\n    await dispatch(fetchRestuarantDeliveryRange(props.restaurantId));\r\n    await dispatch(fetchCategories(props.restaurantId));\r\n    await dispatch(fetchAllForcedModifiers(props.restaurantId));\r\n    await dispatch(fetchAllOptionalModifiers(props.restaurantId));\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"===================================\");\r\n    if (props.restaurantId) initialize();\r\n  }, [props.restaurantId]);\r\n\r\n  // console.log(\"user\",user, \"menu\",menu, \"main\", main);\r\n  const handleAddItem = (item) => {};\r\n  const handleRemoveItem = () => {};\r\n  const renderMenuItems = () => {\r\n    return (\r\n      <Information\r\n        searchQuery={menu.searchQuery}\r\n        categories={menu.categoriesList}\r\n        selectedCategoryId={menu.selectedCategoryId}\r\n        menuItems={menu.menuItems}\r\n        pizzas={menu.pizzas}\r\n        categoriesList={menu.categoriesList}\r\n        restaurantInfo={menu.restaurantInfo}\r\n        happyHours={menu.happyHours}\r\n        onAddItem={handleAddItem}\r\n        onRemoveItem={handleRemoveItem}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* {console.log(\"ResInfo-props\", props)} */}\r\n      {/* {console.log(\"user\", user, \"menu\", menu, \"main\", main)} */}\r\n      {loading && <LoadingBar />}\r\n      {/* <AppModal /> */}\r\n      <Switch>\r\n        <Route exact path={`/restId=${props.restaurantId}`}>\r\n          <Redirect to={`/restId=${props.restaurantId}/menu`} />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path={`/restId=${props.restaurantId}/menu`}\r\n          children={renderMenuItems()}\r\n        />\r\n        <Route exact path={`/restId=${props.restaurantId}/myProfile`}>\r\n          {user.user.isUserLoggedIn ? <MyProfile /> : null}\r\n          {/* <MyProfile /> */}\r\n        </Route>\r\n        <Route exact path={`/restId=${props.restaurantId}/manageAddress`}>\r\n          {user.user.isUserLoggedIn ? <ManageAddress /> : null}\r\n        </Route>\r\n        <Route exact path={`/restId=${props.restaurantId}/myOrders`}>\r\n          <MyOrders restaurantId={props.restaurantId} />\r\n        </Route>\r\n        <Route exact path={`/restId=${props.restaurantId}/checkout`}>\r\n          <Checkout\r\n            //orderId={generateOrderId()}\r\n            restaurantInfo={menu.restaurantInfo}\r\n            deliveryRange={main.deliveryRange}\r\n            //onAddItem={this.handleAddItem}\r\n            //onRemoveItem={this.handleRemoveItem}\r\n            //displayLogin={this.props.showLoginFormMethod}\r\n            //displayAddressModal={displayAddressModal}\r\n          />\r\n        </Route>{\" \"}\r\n        <Route exact path={`/restId=${props.restaurantId}/ordersuccess`}>\r\n          <OrderSuccess />\r\n        </Route>{\" \"}\r\n        <Route exact path={`/restId=${props.restaurantId}/paymentfailed`}>\r\n          <PaymentFailed />\r\n        </Route>{\" \"}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantInformation;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\utils.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\asyncActions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\asyncActions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\menu\\selectors.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\user\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\Restaurants.jsx",["350"],"import React, {useEffect} from 'react'\r\nimport {Row, Col } from 'reactstrap';\r\nimport Slider from '../../../components/Slider/Slider';\r\n\r\nimport RestaurantCard from './RestaurantCard/RestaurantCard';\r\n// import './Restaurants.scss'\r\n\r\nconst Restaurants = ({restaurants}) => {\r\n\r\n  // useEffect(() => {\r\n  //   let slider = document.getElementById(\"layerslider\");\r\n  //   slider.layerSlider({\r\n  //     autoStart: true,\r\n  //     responsive: true,\r\n  //     responsiveUnder: 1280,\r\n  //     layersContainer: 1170,\r\n  //     navButtons:false,\r\n  //     showCircleTimer:false,\r\n  //     navStartStop:false,\r\n  //     // skinsPath: require('../../../assets/layerslider/skins')\r\n  //     // Please make sure that you didn't forget to add a comma to the line endings\r\n  //     // except the last line!\r\n  // });\r\n  // }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Slider/>\r\n      <div className=\"white_bg\">\r\n        <div className=\"container margin_60\">\r\n          <div className=\"main_title\">\r\n            <h2 className=\"nomargin_top\">Choose from Most Popular</h2>\r\n            <p>Your Favourite Restaurants</p>\r\n          </div>\r\n          <Row className=\"row\">\r\n            \r\n              {restaurants.map((restaurant)=>{\r\n                return (\r\n                  <Col key={restaurant.restaurant_id} className=\"col-lg-6\">\r\n                    <RestaurantCard restaurant={restaurant} />\r\n                  </Col>\r\n                );\r\n              })}\r\n              {/* End strip_list*/}\r\n            \r\n          </Row>\r\n          {/* End row */}\r\n        </div>\r\n        {/* End container */}\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default Restaurants\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrders\\MyOrders.jsx",["351","352","353","354","355","356","357","358","359","360","361","362","363"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  fetchMyOrderList,\r\n  fetchMyOrderDetails,\r\n  updatePassword,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport LoadingBar from \"../LoadingBar/LoadingBar\";\r\nimport MyOrderDetails from \"../MyOrderDetails/MyOrderDetails\";\r\nimport \"./MyOrders.scss\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport MyProfile from \"../MyProfile/MyProfile\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport { notification } from \"antd\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport moment from \"moment\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport axios from \"axios\";\r\nimport ManageAddress from \"../ManageAddress/ManageAddress\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst MyOrders = React.memo(({ restaurantId }) => {\r\n  const main = useSelector((state) => state.main);\r\n  //const modal = useSelector((state) => state.modal);\r\n  const user = useSelector((state) => state.user);\r\n  const menu = useSelector((state) => state.menu);\r\n  const dispatch = useDispatch();\r\n  const [passworddata, setpassworddata] = useState({\r\n    oldpass: \"\",\r\n    newpass: \"\",\r\n    //confirmnewpass: \"\",\r\n    token: user.user.token,\r\n  });\r\n  const [state, setstate] = useState({\r\n    showaddress: false,\r\n    showorder: false,\r\n    showprofile: false,\r\n    showOrderDetails: false,\r\n    showpassword: false,\r\n    showloader: false,\r\n    showpasswordoverlay: false,\r\n    // loadingData: false,\r\n    // showOverlay: false,\r\n    // errorMessage: false,\r\n    // requestSuccess: null,\r\n  });\r\n\r\n  const [currentdata, setcurrentdata] = useState({\r\n    orderid: \"\",\r\n    date: \"\",\r\n    paymentmethod: \"\",\r\n    type: \"\",\r\n    stotal: \"\",\r\n    tax: \"\",\r\n    gtotal: \"\",\r\n  });\r\n  const [orderList, setorderList] = useState([]);\r\n  const [currentorderData, setcurrentorderData] = useState([]);\r\n  const [product, setproduct] = useState([]);\r\n  const [subtotal, setsubtotal] = useState([]);\r\n  const [modal, setmodal] = useState(false);\r\n  const fetchdata = async () => {\r\n    const response = await dispatch(fetchMyOrderList(user.user.clientId));\r\n\r\n    setorderList(response.payload.data);\r\n\r\n    console.log(\"o list\", orderList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchdata();\r\n\r\n    setstate({\r\n      ...state,\r\n      showorder: true,\r\n      showprofile: false,\r\n      showpassword: false,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"o list\", orderList);\r\n  }, [orderList]);\r\n\r\n  const onProfileClick = () => {\r\n    setstate({\r\n      ...state,\r\n      showprofile: true,\r\n      showorder: false,\r\n      showaddress: false,\r\n      showpassword: false,\r\n    });\r\n  };\r\n  const onOrderClick = () => {\r\n    setstate({\r\n      ...state,\r\n      showprofile: false,\r\n      showorder: true,\r\n      showpassword: false,\r\n      showaddress: false,\r\n    });\r\n  };\r\n\r\n  const onAddressClick = () => {\r\n    setstate({\r\n      ...state,\r\n      showprofile: false,\r\n      showorder: false,\r\n      showpassword: false,\r\n      showaddress: true,\r\n    });\r\n  };\r\n  const onChangePasswordClick = () => {\r\n    setstate({\r\n      ...state,\r\n      showprofile: false,\r\n      showorder: false,\r\n      showpassword: true,\r\n      showaddress: false,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setmodal(false);\r\n  };\r\n\r\n  const showModal = async (currentitem) => {\r\n    setstate({ ...state, showloader: true });\r\n    //console.log(\"orderid of modal\", orderid);\r\n    setcurrentdata({\r\n      ...currentdata,\r\n      orderid: currentitem.order_id,\r\n      date: currentitem.order_date,\r\n      paymentmethod: currentitem.pay_method,\r\n      type: currentitem.delivery_option,\r\n      tax: currentitem.tax,\r\n      gtotal: currentitem.grand_total,\r\n    });\r\n\r\n    const response = await dispatch(fetchMyOrderDetails(currentitem.order_id));\r\n    setcurrentorderData(response.payload.data);\r\n    setsubtotal(response.payload.data[0].subtotal);\r\n    setproduct(response.payload.data[0].products);\r\n    setmodal(true);\r\n    setstate({ ...state, showloader: false });\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"current subtotal is\", subtotal);\r\n  }, [subtotal]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current order data is\", product);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current order  is\", currentdata);\r\n  }, [currentdata]);\r\n\r\n  const handleOldPassword = (e) => {\r\n    setpassworddata({ ...passworddata, oldpass: e });\r\n  };\r\n\r\n  const handleNewPassword = (e) => {\r\n    setpassworddata({ ...passworddata, newpass: e });\r\n  };\r\n\r\n  const handleConfirmNewPassword = (e) => {\r\n    setpassworddata({ ...passworddata, confirmnewpass: e });\r\n  };\r\n\r\n  const changePasswordFormSubmit = async () => {\r\n    setstate({ ...state, showpasswordoverlay: true });\r\n    var axios = require(\"axios\");\r\n\r\n    const data = {\r\n      current_password: passworddata.oldpass,\r\n      new_password: passworddata.newpass,\r\n    };\r\n    console.log(\"data is\", data);\r\n\r\n    const token = user.user.token;\r\n\r\n    var status;\r\n\r\n    const api = \"https://ciboapp.com/api/clients/v2/client/changePassword/\";\r\n    axios\r\n      .post(api, data, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        //setmsg(res.data.message);\r\n        status = res.data.success;\r\n        notification.open({\r\n          message: res.data.message,\r\n          style: {\r\n            marginTop: \"50px\",\r\n            color: \"rgba(0, 0, 0, 0.65)\",\r\n            border: \"1px solid #b7eb8f\",\r\n            backgroundColor: \"#f6ffed\",\r\n          },\r\n        });\r\n      });\r\n    //console.log(\"msg is\", msg);\r\n    setstate({ ...state, showpasswordoverlay: false });\r\n\r\n    // notification.open({\r\n    //   message: msg,\r\n    //   style: {\r\n    //     marginTop: \"50px\",\r\n    //     color: \"rgba(0, 0, 0, 0.65)\",\r\n    //     border: \"1px solid #b7eb8f\",\r\n    //     backgroundColor: \"#f6ffed\",\r\n    //   },\r\n    // });\r\n  };\r\n  return (\r\n    <>\r\n      {state.showloader ? <WaitingOverlay /> : null}\r\n      {state.showpasswordoverlay ? <WaitingOverlay /> : null}\r\n\r\n      <AppHeader />\r\n\r\n      <section\r\n        className=\"parallax-window_myprofile \"\r\n        data-parallax=\"scroll\"\r\n        // data-image-src=\"https://cutt.ly/Kkb7BY9\"\r\n        style={{\r\n          background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n        data-natural-width={1400}\r\n        data-natural-height={470}\r\n      >\r\n        <div id=\"subheader_myprofile\">\r\n          <div id=\"sub_content\">\r\n            <h1>Profile</h1>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"container margin_60\">\r\n        <nav className=\"nav-parent\">\r\n          <ul className=\"ul-parent\">\r\n            <li className=\"tab-current\">\r\n              <p\r\n                onClick={onOrderClick}\r\n                className=\"icon-profile anchor-parent\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <span>\r\n                  Orders &nbsp;\r\n                  <FastfoodIcon />\r\n                </span>\r\n              </p>\r\n            </li>\r\n            <li className=\"tab-current\">\r\n              <p\r\n                onClick={onAddressClick}\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon-menut-items anchor-parent\"\r\n              >\r\n                <span>\r\n                  Address &nbsp;\r\n                  <HomeIcon />\r\n                </span>\r\n              </p>\r\n            </li>\r\n            <li className=\"tab-current\">\r\n              <p\r\n                onClick={onProfileClick}\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon-settings anchor-parent\"\r\n              >\r\n                <span>\r\n                  Profile &nbsp;\r\n                  <PersonIcon />\r\n                </span>\r\n              </p>\r\n            </li>\r\n            <li className=\"tab-current\">\r\n              <p\r\n                onClick={onChangePasswordClick}\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon-settings anchor-parent\"\r\n              >\r\n                <span>\r\n                  Change Password\r\n                  <PersonIcon />\r\n                </span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n\r\n            marginTop: \"-13px\",\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            {state.showorder ? (\r\n              <>\r\n                {orderList.map((currval) => {\r\n                  return (\r\n                    <>\r\n                      <div\r\n                        className=\"col-md-4 wow fadeIn animated\"\r\n                        // data-wow-delay=\"0.1s\"\r\n                        style={{\r\n                          visibility: \"visible\",\r\n                          animationDelay: \"0.1s\",\r\n                          animationName: \"fadeIn\",\r\n                          marginTop: \"10px\",\r\n                          // marginLeft: \"10px\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className=\"feature_2\"\r\n                          style={{\r\n                            height: \"350px\",\r\n                            padding: \"20px\",\r\n                            marginLeft: \"10px\",\r\n                            marginRight: \"10px\",\r\n                            borderRadius: \"10px\",\r\n                            border: \"1px dotted black\",\r\n                          }}\r\n                        >\r\n                          <div style={{ marginBottom: \"-0.5rem\" }}>\r\n                            <p\r\n                              className=\"para\"\r\n                              style={{ fontSize: \"25px\", color: \"black\" }}\r\n                            >\r\n                              {currval.rname}\r\n                            </p>\r\n                            <p\r\n                              className=\"number\"\r\n                              style={{\r\n                                color: \"rgb(156, 156, 156)\",\r\n                              }}\r\n                            >\r\n                              {menu.restaurantInfo.city},{\" \"}\r\n                              {menu.restaurantInfo.country}\r\n                            </p>\r\n                          </div>\r\n                          {/* <img\r\n                      src=\"https://b.zmtcdn.com/data/pictures/3/19621183/7aa88b8e8c19157eb1b01319a72ab569_featured_v2.jpg\"\r\n                      style={{ float: \"right\" }}\r\n                      height=\"60px\"\r\n                      width=\"60px\"\r\n                    /> */}\r\n                          <hr />\r\n                          <div style={{ marginBottom: \"1rem\" }}>\r\n                            <p className=\"para\">Order Number</p>\r\n                            <p className=\"number\">{currval.order_id}</p>\r\n                          </div>\r\n                          <br />\r\n                          <div style={{ marginBottom: \"1rem\" }}>\r\n                            <p className=\"para\">Total Amount</p>\r\n                            <p className=\"number\">\r\n                              {currval.currency} &nbsp; {currval.grand_total}\r\n                            </p>\r\n                          </div>\r\n                          <br />\r\n                          <div style={{ marginBottom: \"1rem\" }}>\r\n                            <p className=\"para\">Order On</p>\r\n                            <p className=\"number\">{currval.order_date}</p>\r\n                          </div>\r\n                          <div\r\n                            className=\"button-parent\"\r\n                            onClick={() => showModal(currval)}\r\n                          >\r\n                            <button\r\n                              className=\"btn-submit\"\r\n                              style={{ color: \"white\" }}\r\n                            >\r\n                              View Detail\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </>\r\n            ) : null}\r\n\r\n            {/* popup */}\r\n            {/* <div> */}\r\n            {modal ? (\r\n              <>\r\n                <div className=\"modal-wrapper\">\r\n                  <div className=\"modal-overlay\"></div>\r\n                  <div className=\"modal-content\" style={{ marginTop: \"50px\" }}>\r\n                    <section className=\"section-header\">\r\n                      <h2\r\n                        className=\"heading-modal\"\r\n                        style={{ textAlign: \"center\" }}\r\n                      >\r\n                        <b>Order # {currentdata.orderid}</b>\r\n                      </h2>\r\n                      <span className=\"close-modal\">\r\n                        <CloseIcon\r\n                          onClick={closeModal}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </section>\r\n                    <section className=\"order-contents\">\r\n                      <div className=\"restroname\">\r\n                        <div className=\"namerestroflex\">\r\n                          <div className=\"exactrestroname\">\r\n                            <h4 className=\"headrestro\">\r\n                              {menu.restaurantInfo.rname}\r\n                            </h4>\r\n                            <div className=\"restrolocation\">\r\n                              {menu.restaurantInfo.city},{\" \"}\r\n                              {menu.restaurantInfo.country}\r\n                            </div>{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <hr style={{ width: \"90%\", backgroundColor: \"black\" }} />\r\n                      <div className=\"item-list\">\r\n                        <h5 className=\"heading-list\">Order List</h5>\r\n                        {product &&\r\n                          product.map((currval) => {\r\n                            return (\r\n                              <div className=\"dish-item\">\r\n                                <div className=\"dish-name\">\r\n                                  <div className=\"dish-name-child\">\r\n                                    <div className=\"para-tax\">\r\n                                      {currval.quantity} x{\" \"}\r\n                                      {currval.product_name}\r\n                                    </div>\r\n                                    <div className=\"para-tax\">\r\n                                      {truncateDecimal(\r\n                                        Number(currval.subtotal) +\r\n                                          Number(currval.tax)\r\n                                      )}\r\n                                      {/* Number(currval.tax)} */}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        {/* <div className=\"dish-item\">\r\n                          <div className=\"dish-name\">\r\n                            <div className=\"dish-name-child\">\r\n                              <div className=\"para-tax\">1 x dish1</div>\r\n                              <div className=\"para-tax\">EUR 200</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"dish-item\">\r\n                          <div className=\"dish-name\">\r\n                            <div className=\"dish-name-child\">\r\n                              <div className=\"para-tax\">1 x dish1</div>\r\n                              <div className=\"para-tax\">EUR 200</div>\r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n                      <hr style={{ width: \"90%\", backgroundColor: \"black\" }} />\r\n                      <div className=\"tax-area\">\r\n                        <div className=\"subtotal\">\r\n                          <p className=\"para-tax\">Subtotal</p>\r\n                          <p className=\"para-tax\">\r\n                            {truncateDecimal(subtotal)}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"subtotal\">\r\n                          <p className=\"para-tax\">Taxes</p>\r\n                          <p className=\"para-tax\">\r\n                            {truncateDecimal(currentdata.tax)}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"subtotal\">\r\n                          <p className=\"para-tax\">Delivery Charge</p>\r\n                          <p className=\"para-tax\">{user.delivery_cost}.00</p>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"savings\">\r\n                        <p className=\"para-savings\">YOU SAVED</p>\r\n                        <p className=\"para-savings\">EUR 10</p>\r\n                      </div>\r\n                      <hr style={{ width: \"90%\", backgroundColor: \"black\" }} />\r\n                      <div\r\n                        className=\"subtotal\"\r\n                        style={{ marginLeft: \"20px\", marginRight: \"20px\" }}\r\n                      >\r\n                        <p className=\"para-tax\">\r\n                          <b>GRAND TOTAL</b>\r\n                        </p>\r\n                        <p className=\"para-tax\">\r\n                          <b>{truncateDecimal(currentdata.gtotal)}</b>\r\n                        </p>\r\n                      </div>\r\n                      <hr />\r\n                      <br />\r\n                      <div className=\"order-details\">\r\n                        <h5\r\n                          className=\"order-detail-header\"\r\n                          style={{ marginLeft: \"20px\" }}\r\n                        >\r\n                          <b>Order Details</b>\r\n                        </h5>\r\n                        <div className=\"payment-opted\">\r\n                          <div className=\"pay-opt\">Payment</div>\r\n                          <div className=\"pay-name\">\r\n                            <div className=\"pay-method\">\r\n                              {currentdata.paymentmethod}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"pay-opt\">Ordered ON</div>\r\n                        <div className=\"pay-name\">\r\n                          <div className=\"pay-method\">{currentdata.date}</div>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"pay-opt\">Delivery type</div>\r\n                        <div className=\"pay-name\">\r\n                          <div className=\"pay-method\">{currentdata.type}</div>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                      </div>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            {/* popup */}\r\n\r\n            {state.showprofile ? (\r\n              <>\r\n                <MyProfile />\r\n              </>\r\n            ) : null}\r\n\r\n            {state.showaddress ? (\r\n              <>\r\n                {\" \"}\r\n                <ManageAddress />{\" \"}\r\n              </>\r\n            ) : null}\r\n\r\n            {state.showpassword ? (\r\n              <>\r\n                <div\r\n                  className=\"col-lg-6\"\r\n                  style={{ marginTop: \"20px\", marginLeft: \"25%\" }}\r\n                >\r\n                  <div className=\"box_style_2\" id=\"main_menu\">\r\n                    <div\r\n                      style={{\r\n                        height: \"auto\",\r\n                        width: \"400px\",\r\n                      }}\r\n                    >\r\n                      <div style={{ marginLeft: \"20%\" }}>\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{ width: \"120%\" }}\r\n                          label=\"Old Password\"\r\n                          variant=\"outlined\"\r\n                          value={passworddata.oldpass}\r\n                          onChange={(e) => handleOldPassword(e.target.value)}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{ width: \"120%\" }}\r\n                          label=\"New Password\"\r\n                          variant=\"outlined\"\r\n                          value={passworddata.newpass}\r\n                          onChange={(e) => handleNewPassword(e.target.value)}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <TextField\r\n                          size=\"small\"\r\n                          style={{ width: \"120%\" }}\r\n                          label=\"New Password\"\r\n                          variant=\"outlined\"\r\n                          value={passworddata.confirmnewpass}\r\n                          onChange={(e) =>\r\n                            handleConfirmNewPassword(e.target.value)\r\n                          }\r\n                        />\r\n                        <br />\r\n                        <br />\r\n\r\n                        <Button\r\n                          onClick={changePasswordFormSubmit}\r\n                          style={{\r\n                            backgroundColor: \"#6244da\",\r\n                            width: \"120%\",\r\n                            color: \"white\",\r\n                            padding: \"15px\",\r\n                            marginBottom: \"20px\",\r\n                          }}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* End box_style_1 */}\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* {modal.modal.modalToShow == \"findAddress\" ? <ChooseAddress /> : null}\r\n      {modal.modal.modalToShow == \"AddAddress\" ? <AddAddress /> : null} */}\r\n      <Footer />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MyOrders;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantInformation\\Information\\Information.jsx",["364","365"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport MenuCategories from \"../../../components/MenuCategories/MenuCategories\";\r\nimport MenuItems from \"../../MenuItems/MenuItems\";\r\nimport Cart from \"../../../components/Cart/Cart\";\r\nimport Login from \"../../../components/Login/Login\";\r\nimport CreateAccount from \"../../../components/CreateAccount/CreateAccount\";\r\nimport ForgotPassword from \"../../../components/ForgotPassword/ForgotPassword\";\r\nimport AppHeader from \"../../../components/AppHeader/AppHeader\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\n\r\nconst buttonStyle = {\r\n  position: \"fixed\",\r\n  bottom: \"5%\",\r\n  right: \"10%\",\r\n  border: \"none\",\r\n  outline: \"none\",\r\n  backgroundColor: \"#5B53CD\",\r\n  borderRadius: \"20px\",\r\n  height: \"50px\",\r\n  color: \"white\",\r\n  fontSize: \"0.8rem\",\r\n  fontWeight: \"600\",\r\n};\r\n\r\nconst Information = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"menu in selector is\", menu);\r\n  const scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  const handleAddItem = (item, isHappyHoursActive) => {\r\n    console.log(\"items in cart is\", item);\r\n    // if (item.optional_modifier !== '0' || item.forced_modifier !== '0') {\r\n    //   if (item.qty) {\r\n    //     this.props.openModal(\r\n    //       modalNames.INTERMEDIATE_ADD_MODAL,\r\n    //       {\r\n    //         item: {\r\n    //           ...item,\r\n    //           isHappyHoursActive,\r\n    //         },\r\n    //       },\r\n    //     );\r\n    //   } else {\r\n    //     this.props.openModal(\r\n    //       modalNames.DISH_MODAL,\r\n    //       {\r\n    //         item: {\r\n    //           ...item,\r\n    //           isHappyHoursActive,\r\n    //         },\r\n    //       },\r\n    //     );\r\n    //   }\r\n\r\n    //   return;\r\n    // }\r\n\r\n    // this.props.addItem(item, null, 0, this.props.restaurantInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      {console.log(\"informations\", props)}\r\n      <section\r\n        className=\"parallax-window\"\r\n        data-parallax=\"scroll\"\r\n        // data-image-src=\"https://cutt.ly/Kkb7BY9\"\r\n        style={{\r\n          background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n        data-natural-width={1400}\r\n        data-natural-height={470}\r\n      >\r\n        <button\r\n          style={{ zIndex: \"1000\" }}\r\n          onClick={scrollToTop}\r\n          style={buttonStyle}\r\n        >\r\n          Scroll to Top\r\n        </button>\r\n        <div id=\"subheader\">\r\n          <div id=\"sub_content\">\r\n            <div id=\"thumb\">\r\n              <img src={props.restaurantInfo.logo} alt />\r\n            </div>\r\n            {/* <div className=\"rating\">\r\n              <i className=\"icon_star voted\" />\r\n              <i className=\"icon_star voted\" />\r\n              <i className=\"icon_star voted\" />\r\n              <i className=\"icon_star voted\" />\r\n              <i className=\"icon_star\" /> (\r\n              <small>\r\n                <a href=\"detail_page_2.html\">Read 98 reviews</a>\r\n              </small>\r\n              )\r\n            </div> */}\r\n            <h1>{props.restaurantInfo.rname}</h1>\r\n            <div>\r\n              <em>{props.restaurantInfo.description}</em>\r\n            </div>\r\n            <div>\r\n              <i className=\"icon_pin\" />{\" \"}\r\n              {`${props.restaurantInfo.address} - ${props.restaurantInfo.city} - ${props.restaurantInfo.country}`}{\" \"}\r\n              <strong>Delivery charge:</strong> free over{\" \"}\r\n              {props.restaurantInfo?.monetary_symbol}-\r\n              {/* {props.restaurantInfo.cost.free_delivery_eligible_amount}. */}\r\n            </div>\r\n          </div>\r\n          {/* End sub_content */}\r\n        </div>\r\n        {/* End subheader */}\r\n      </section>\r\n      {/* End section */}\r\n      {/* content */}\r\n      <div className=\"container margin_60_35\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <p>\r\n              <a\r\n                href=\"list_page.html\"\r\n                className=\"btn_side\"\r\n                style={{ backgroundColor: \"#5B53CD\" }}\r\n              >\r\n                Back to search\r\n              </a>\r\n            </p>\r\n            <MenuCategories categories={menu.categoriesList} />\r\n\r\n            {/* End box_style_1 */}\r\n            <div className=\"box_style_2 d-none d-sm-block\" id=\"help\">\r\n              <i className=\"icon_lifesaver\" />\r\n              <h4>\r\n                Need <span>Help?</span>\r\n              </h4>\r\n              <a\r\n                href=\"tel://004542344599\"\r\n                className=\"phone\"\r\n                style={{ color: \"#5B53CD\" }}\r\n              >\r\n                {props.restaurantInfo.phone}\r\n              </a>\r\n              <small>Monday to Friday 9.00am - 7.30pm</small>\r\n            </div>\r\n          </div>\r\n          {/* End col */}\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"box_style_2\" id=\"main_menu\">\r\n              <h2 className=\"inner\" style={{ backgroundColor: \"#5B53CD\" }}>\r\n                Menu\r\n              </h2>\r\n              <MenuItems\r\n                pizzas={menu.pizzas}\r\n                selectedCategoryId={menu.selectedCategoryId}\r\n                menuItems={menu.menuItems}\r\n                restaurantInfo={menu.restaurantInfo}\r\n                searchQuery={menu.searchQuery}\r\n                categories={menu.categoriesList}\r\n                happyhours={menu.happyHours}\r\n              />\r\n            </div>\r\n            {/* End box_style_1 */}\r\n          </div>\r\n          {/* End col */}\r\n          <div className=\"col-lg-3\" id=\"sidebar\">\r\n            <div\r\n              className=\"theiaStickySidebar\"\r\n              style={{ position: \"sticky\", top: \"65px\" }}\r\n            >\r\n              <Cart\r\n                addItem={handleAddItem}\r\n                restinfo={menu.restaurantInfo}\r\n                cartlist={menu.cart}\r\n              />\r\n\r\n              {/* End cart_box */}\r\n            </div>\r\n            {/* End theiaStickySidebar */}\r\n          </div>\r\n\r\n          {/* End col */}\r\n        </div>\r\n\r\n        {/* End row */}\r\n      </div>\r\n\r\n      {user.showLoginForm ? <Login /> : null}\r\n      {user.showRegisterForm ? <CreateAccount /> : null}\r\n      {user.showForgotPasswordForm ? <ForgotPassword /> : null}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Slider\\Slider.jsx",["366"],"import React, {useState} from \"react\";\r\n\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst items = [\r\n  {\r\n    src:\r\n      \"https://images.unsplash.com/photo-1604382354936-07c5d9983bd3?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80\",\r\n    altText: \"Slide 1\",\r\n    caption: \"Slide 1\",\r\n  },\r\n  {\r\n    src:\r\n      \"https://images.unsplash.com/photo-1598514982901-ae62764ae75e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80\",\r\n    altText: \"Slide 2\",\r\n    caption: \"Slide 2\",\r\n  },\r\n  {\r\n    src:\r\n      \"https://images.unsplash.com/photo-1548943487-a2e4e43b4853?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjB8fHNvdXBzfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\r\n    altText: \"Slide 3\",\r\n    caption: \"Slide 3\",\r\n  },\r\n];\r\n\r\n\r\nconst Slider = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img style={{width:\"100%\", height:\"600px\"}} src={item.src} alt={item.altText} />\r\n        {/* <CarouselCaption\r\n          captionText={item.caption}\r\n          captionHeader={item.caption}\r\n        /> */}\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel style={{height:\"400px\"}} activeIndex={activeIndex} next={next} previous={previous}>\r\n      <CarouselIndicators\r\n        items={items}\r\n        activeIndex={activeIndex}\r\n        onClickHandler={goToIndex}\r\n      />\r\n      {slides}\r\n      <CarouselControl\r\n        direction=\"prev\"\r\n        directionText=\"Previous\"\r\n        onClickHandler={previous}\r\n      />\r\n      <CarouselControl\r\n        direction=\"next\"\r\n        directionText=\"Next\"\r\n        onClickHandler={next}\r\n      />\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Slider;","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\RestaurantList\\Restaurants\\RestaurantCard\\RestaurantCard.jsx",["367","368"],"import React from \"react\";\r\n// import \"./RestaurantCard.scss\";\r\n\r\nconst RestaurantCard = ({ restaurant }) => {\r\n  return (\r\n    <a\r\n      href={`${`?/restId=${restaurant.restaurant_id}/menu`}`}\r\n      className=\"strip_list\"\r\n    >\r\n      <div className=\"ribbon_1\">Popular</div>\r\n      <div className=\"desc\">\r\n        <div className=\"thumb_strip\">\r\n          <img src={restaurant.logo} alt />\r\n        </div>\r\n        {console.log(restaurant)}\r\n        <div className=\"rating\">\r\n          <i className=\"icon_star voted\" />\r\n          <i className=\"icon_star voted\" />\r\n          <i className=\"icon_star voted\" />\r\n          <i className=\"icon_star voted\" />\r\n          <i className=\"icon_star\" />\r\n        </div>\r\n        <h3>{restaurant.rname}</h3>\r\n        <div className=\"type\">{restaurant.description}</div>\r\n        <div className=\"location\">\r\n          {restaurant.address} {restaurant.city}\r\n          {restaurant.zipcode}\r\n          <span className=\"opening\">Opens at 17:00</span>\r\n        </div>\r\n        <ul>\r\n          {restaurant?.order_option?.split(\",\").map((option, i) => {\r\n            return (\r\n              <li key={i} style={{ textTransform: \"capitalize\" }}>\r\n                {option}\r\n                <i className=\"icon_check_alt2 ok\" />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* End desc*/}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default RestaurantCard;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuCategories\\MenuCategories.jsx",["369","370"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setSelectedCategoryId,\r\n  displayHappyHours,\r\n  displayPizzas,\r\n} from \"../../state-management/menu/actions\";\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\nconst MenuCategories = React.memo(({ categories }) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const dispatch = useDispatch();\r\n  const [dishes, showDishes] = useState(false);\r\n  const [drinks, showDrinks] = useState(false);\r\n  const isPizzaAvailable = menu.pizzas.length;\r\n  const isHappyHoursActive = isHappyHoursActiveInMenu();\r\n\r\n  const onDishClick = () => {\r\n    showDishes(!dishes);\r\n  };\r\n  const onDrinksClick = () => {\r\n    showDrinks(!drinks);\r\n  };\r\n  function isHappyHoursActiveInMenu() {\r\n    return menu.menuItems.some(({ isHappyHourActive }) => isHappyHourActive);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box_style_1\">\r\n        <ul id=\"cat_nav\">\r\n          {console.log(\"categories\", categories)}\r\n          {console.log(\"menu items\", menu.menuItems)}\r\n          {menu.isHappyHoursApplicable && isHappyHoursActive ? (\r\n            <li key=\"happyHours\" style={{ cursor: \"pointer\" }}>\r\n              <ScrollLink\r\n                activeClass=\"active\"\r\n                smooth={true}\r\n                spy={true}\r\n                to=\"Happy Hours\"\r\n                offset={-70}\r\n                onClick={() => {\r\n                  dispatch(displayHappyHours());\r\n                }}\r\n              >\r\n                Happy hours <span> ({menu?.happyHours?.length}) </span>\r\n              </ScrollLink>\r\n            </li>\r\n          ) : null}\r\n          <li style={{ cursor: \"pointer\" }}>\r\n            <ScrollLink\r\n              activeClass=\"active\"\r\n              smooth={true}\r\n              spy={true}\r\n              to={dishes ? \"\" : categories[0]?.cname}\r\n              offset={-70}\r\n              onClick={onDishClick}\r\n            >\r\n              Dishes <span>({categories[0]?.sub_category.length})</span>{\" \"}\r\n            </ScrollLink>\r\n          </li>\r\n          {categories.map((category, i) => {\r\n            return category.cname === \"Dishes\" && dishes ? (\r\n              <MenuSubCategory\r\n                list={category.sub_category}\r\n                searchQuery={menu.searchQuery}\r\n                selectedCategoryId={menu.selectedCategoryId}\r\n                setSelectedCategoryId={setSelectedCategoryId}\r\n              />\r\n            ) : null;\r\n          })}\r\n          <li style={{ cursor: \"pointer\" }}>\r\n            <ScrollLink\r\n              activeClass=\"active\"\r\n              smooth={true}\r\n              spy={true}\r\n              to={drinks ? \"\" : categories[1]?.cname}\r\n              offset={-70}\r\n              onClick={onDrinksClick}\r\n            >\r\n              Drinks<span>({categories[1]?.sub_category.length})</span>\r\n            </ScrollLink>\r\n          </li>\r\n          {categories.map((category, i) => {\r\n            return category.cname === \"Drinks\" && drinks ? (\r\n              <MenuSubCategory\r\n                list={category.sub_category}\r\n                searchQuery={menu.searchQuery}\r\n                selectedCategoryId={menu.selectedCategoryId}\r\n                setSelectedCategoryId={setSelectedCategoryId}\r\n                // hideCategoryList={() => hideCategory()}\r\n              />\r\n            ) : null;\r\n          })}\r\n          {isPizzaAvailable ? (\r\n            <li key=\"pizza\" style={{ cursor: \"pointer\" }}>\r\n              <ScrollLink\r\n                activeClass=\"active\"\r\n                smooth={true}\r\n                spy={true}\r\n                to=\"Pizza\"\r\n                offset={-70}\r\n                onClick={() => dispatch(displayPizzas())}\r\n              >\r\n                Pizza's <span> ({isPizzaAvailable}) </span>\r\n              </ScrollLink>\r\n            </li>\r\n          ) : null}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nconst MenuSubCategory = React.memo(\r\n  ({ list, searchQuery, selectedCategoryId, setSelectedCategoryId }) => {\r\n    console.log(\"list in menucategories is\", list);\r\n    const dispatch = useDispatch();\r\n    const handleClick = (e, item) => {\r\n      // e.stopPropagation();\r\n      dispatch(setSelectedCategoryId(item.category_id));\r\n      console.log(\"items is\", item);\r\n    };\r\n    return list.map((s_category) => {\r\n      return (\r\n        <li\r\n          key={s_category.category_id}\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={(e) => handleClick(e, s_category)}\r\n        >\r\n          <a style={{ color: \"#5B53CD\" }}>{s_category?.cname}</a>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n);\r\n\r\nexport default MenuCategories;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyOrderDetails\\MyOrderDetails.jsx",["371","372","373","374"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { fetchMyOrderDetails } from \"../../state-management/user/asyncActions\";\r\n\r\nconst isFmHaveDetours = (fmId, detoursList) => {\r\n  let data = \"\";\r\n\r\n  let result = false;\r\n\r\n  detoursList.map((detour) => {\r\n    if (detour.fm_item_id === fmId) {\r\n      // detour availabe\r\n      result = true;\r\n      // now loop through items\r\n      detour.dom.map((op) => {\r\n        data += ` , ${op.om_item_name}`;\r\n      });\r\n    }\r\n  });\r\n\r\n  return {\r\n    result,\r\n    data,\r\n  };\r\n};\r\n\r\nconst MyOrderDetails = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [details, setDetails] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const fetchAndShowOrderDetails = async (orderId) => {\r\n    props.loading(true);\r\n    const { payload } = await dispatch(fetchMyOrderDetails(orderId));\r\n    console.log(payload.data);\r\n    if (payload.status === \"200\") {\r\n      setDetails(payload.data[0]);\r\n    }\r\n    props.loading(false);\r\n  };\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const openModal = () => {\r\n    setModal(!modal);\r\n    fetchAndShowOrderDetails(props.orderId);\r\n  };\r\n  //   const itemList = details?.products?.map((item, i) => {\r\n  //     let forcedModifier = \"\";\r\n\r\n  //     let optionalModifier = \"\";\r\n\r\n  //     let toppings = \"\";\r\n\r\n  //     let sizeAndBase = \"\";\r\n\r\n  //     let halfNhalf = \"\";\r\n\r\n  //     if (\r\n  //       item.forced_modifier === undefined ||\r\n  //       item.forced_modifier.length !== 0\r\n  //     ) {\r\n  //       item.forced_modifier.map(function (fm) {\r\n  //         // check if there is detour availabe\r\n  //         const detours = isFmHaveDetours(fm.fmid, item.detours);\r\n\r\n  //         forcedModifier += `, ${fm.name}`;\r\n  //         forcedModifier = forcedModifier.replace(/[\\s,]+/, \" \").trim();\r\n  //         if (detours.result) {\r\n  //           detours.data = detours.data.replace(/[\\s,]+/, \" \").trim();\r\n  //           forcedModifier += `(${detours.data})`;\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //     if (\r\n  //       item.optional_modifier === undefined ||\r\n  //       item.optional_modifier.length !== 0\r\n  //     ) {\r\n  //       item.optional_modifier.map(function (om) {\r\n  //         optionalModifier += `, ${om.name}`;\r\n  //       });\r\n  //       optionalModifier = optionalModifier.replace(/[\\s,]+/, \" \").trim();\r\n  //     }\r\n\r\n  //     // PIZZA Details\r\n\r\n  //     // Toppings\r\n  //     if (item.toppings !== undefined) {\r\n  //       item.toppings.map(function (top) {\r\n  //         toppings += `, ${top.name}`;\r\n  //       });\r\n  //       toppings = toppings.replace(/[\\s,]+/, \" \").trim();\r\n  //     }\r\n\r\n  //     // SizeAndBase\r\n  //     if (item.base !== undefined) {\r\n  //       console.log(\"pizaa bug\", item);\r\n  //       sizeAndBase = `${item.size_vlaue} ${item.base.base_name}`;\r\n  //     }\r\n\r\n  //     // HalfNhalf\r\n  //     if (\r\n  //       item.first_half_toppings !== undefined &&\r\n  //       item.second_half_toppings !== undefined &&\r\n  //       item.first_half_toppings.length > 0 &&\r\n  //       item.second_half_toppings.length > 0\r\n  //     ) {\r\n  //       halfNhalf = `First Half: ${item.first_half_toppings[0].name}, Second Half: ${item.second_half_toppings[0].name}`;\r\n  //     }\r\n\r\n  //   });\r\n  return (\r\n    <div>\r\n      <Button color=\"black\" onClick={openModal}>\r\n        Details\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} style={{ top: \"25%\" }}>\r\n        <ModalHeader toggle={toggle}>Order Details</ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <strong>Order No - </strong>\r\n            <span>&nbsp;{details.order_id}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Date - </strong>\r\n            <span>&nbsp;{details.order_date}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Status - </strong>\r\n            <span>&nbsp;{details.order_status}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Type - </strong>\r\n            <span>&nbsp;{details.delivery_option}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Order Time - </strong>\r\n            <span>&nbsp;{details.order_time}</span>\r\n          </div>\r\n          <div>\r\n            <strong>Comments - </strong>\r\n            <span>&nbsp;{details.comments}</span>\r\n          </div>\r\n          <Table responsive hover striped>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Quantity x Price</th>\r\n                <th>Tax</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {details &&\r\n                details?.products?.map((product, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <th>{product.product_name}</th>\r\n                      <th>{`${product.quantity} X ${product.price}`}</th>\r\n                      <th>{product.tax}</th>\r\n                      <th>\r\n                        {Number(product.quantity) * Number(product.price)}\r\n                      </th>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div>\r\n              <strong>Subtotal - </strong>\r\n              <span>&nbsp;{details.subtotal}</span>\r\n            </div>\r\n            <div>\r\n              <strong>Tax - </strong>\r\n              <span>&nbsp;{details.tax}</span>\r\n            </div>\r\n            <div>\r\n              <strong>Delivery Cost - </strong>\r\n              <span>&nbsp;{details.delivery_cost}</span>\r\n            </div>\r\n            {details.happy_hours_discount ? (\r\n              <div>\r\n                <strong>Happy Hour Discount - </strong>\r\n                <span>&nbsp;{details.happy_hours_discount}</span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div>\r\n            <strong>Total - </strong>\r\n            <span>&nbsp;{details.total}</span>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>\r\n            Close\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrderDetails;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\MenuItems\\MenuItems.jsx",["375","376","377"],"import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MenuTable from \"../../components/MenuTable/MenuTable\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nconst MenuItems = React.memo(\r\n  ({\r\n    categories,\r\n    pizzas,\r\n    happyhours,\r\n    selectedCategoryId,\r\n    menuItems,\r\n    restaurantInfo,\r\n    searchQuery,\r\n  }) => {\r\n    //! [x] Need to refractored, should create a seperate Table (presentational component)\r\n    //! Should filter isOnline isHappyhour active and need to implement details page for menun with subcategory,\r\n    //! Should implement modifiers for the menu items,\r\n    //? Need code splitting, load lazily because this is data intensive operation, create a suspense in main route.\r\n\r\n    //? Need to filter Pizzas and HappyHours based on isActive and isOnline\r\n    const menu = useSelector((state) => state.menu);\r\n    const allforcedModifiers = menu.allForcedModifier;\r\n    const findCategory = (selectedCategoryId) => {\r\n      console.log(\"memoized value\");\r\n      return menuItems.filter(\r\n        ({ category_id: cid, online }) =>\r\n          cid === selectedCategoryId && online === \"1\"\r\n      );\r\n    };\r\n\r\n    const filteredIems = useMemo(() => findCategory(selectedCategoryId), [\r\n      selectedCategoryId,\r\n    ]);\r\n\r\n    function getSelectedCategoryName() {\r\n      if (\r\n        categories.length &&\r\n        selectedCategoryId &&\r\n        selectedCategoryId.length > 0\r\n      ) {\r\n        const category = categories.find(\r\n          (category) =>\r\n            category[\"sub_category\"] &&\r\n            category[\"sub_category\"].find(\r\n              ({ category_id: cId }) => cId === selectedCategoryId\r\n            )\r\n        );\r\n        console.log(\"category\", category);\r\n        const subCategory =\r\n          category &&\r\n          category[\"sub_category\"] &&\r\n          category[\"sub_category\"].find(\r\n            ({ category_id: cId }) => cId === selectedCategoryId\r\n          );\r\n        console.log(\"subcategory is\", subCategory);\r\n        // cname = subCategory ? subCategory.cname : \"\";\r\n        return subCategory ? subCategory.cname : \"\";\r\n      }\r\n\r\n      if (selectedCategoryId === -1) {\r\n        return \"Happy Hours\";\r\n      } else if (selectedCategoryId === -2) {\r\n        return \"Pizza's\";\r\n      }\r\n    }\r\n\r\n    const isPriceWithoutTax = () => {\r\n      return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n    };\r\n\r\n    const getActualPrice = (item) => {\r\n      //console.log(\"item.price\", item.price);\r\n      if (menu.restaurantInfo) {\r\n        // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n        return isPriceWithoutTax()\r\n          ? item.price\r\n          : (\r\n              Number(item.price) +\r\n              Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n            ).toFixed(2);\r\n      }\r\n\r\n      return 0;\r\n    };\r\n\r\n    const getItemPrice = (item, isStillActive) => {\r\n      if (item.happyHourItem && isStillActive) {\r\n        if (item.similarItems && item.similarItems.length > 0) {\r\n          let totalPrice = 0;\r\n\r\n          for (let i = 0; i < item.similarItems.length; i++) {\r\n            totalPrice += this.isPriceWithoutTax()\r\n              ? item.similarItems[i].happyHourItem.subTotal\r\n              : item.similarItems[i].happyHourItem.grandTotal;\r\n          }\r\n\r\n          return Number(totalPrice).toFixed(2);\r\n        } else {\r\n          console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n          console.log(\r\n            \"grand\",\r\n            Number(item.happyHourItem.grandTotal).toFixed(2)\r\n          );\r\n          return this.isPriceWithoutTax()\r\n            ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n            : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n        }\r\n      } else if (item.subTotal && item.grandTotal) {\r\n        if (item.similarItems && item.similarItems.length > 0) {\r\n          let totalPrice = 0;\r\n\r\n          for (let i = 0; i < item.similarItems.length; i++) {\r\n            totalPrice += this.isPriceWithoutTax()\r\n              ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n              : item.similarItems[i].grandTotal ||\r\n                this.getActualPrice(item.similarItems[i]);\r\n          }\r\n\r\n          return Number(totalPrice).toFixed(2);\r\n        } else {\r\n          console.log(\r\n            \"log\",\r\n            this.isPriceWithoutTax()\r\n              ? item.subTotal || item.price\r\n              : item.grandTotal || this.getActualPrice(item)\r\n          );\r\n          return this.isPriceWithoutTax()\r\n            ? item.subTotal || item.price\r\n            : item.grandTotal || this.getActualPrice(item);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {/* {console.log(\"seleted category name\", getSelectedCategoryName())}\r\n        {console.log(\"pizzas\", pizzas, \"happyhopurs\", happyhours)} */}\r\n        {console.log(\"categories\", categories)}\r\n        {/* { (selectedCategoryId !== -1 && selectedCategoryId !== -2) ? categories.map((category) => {\r\n          return category.cname === \"Dishes\" || category.cname === \"Drinks\" ? (\r\n            <>\r\n              <MenuTable\r\n                category_name={category.cname}\r\n                list={category.sub_category}\r\n              />\r\n            </>\r\n          ) : null;\r\n        }): null} */}\r\n        {/* {\r\n          selectedCategoryId \r\n        } */}\r\n        {/* {console.log(\r\n          \"find selected category\",\r\n          // menuItems.filter(({ category_id: cid }) => cid === selectedCategoryId)\r\n          filteredIems\r\n        )} */}\r\n\r\n        {console.log(\"fltered items\", filteredIems)}\r\n        {console.log(\"check product type\", filteredIems[0]?.productType)}\r\n        {filteredIems[0]?.productType === \"Dishes\" ||\r\n        filteredIems[0]?.productType === \"Drinks\" ? (\r\n          <MenuTable\r\n            symbol={restaurantInfo.monetary_symbol}\r\n            actualPrice={getActualPrice}\r\n            category_name={getSelectedCategoryName()}\r\n            list={filteredIems}\r\n          />\r\n        ) : null}\r\n        {selectedCategoryId === -2 ? (\r\n          <MenuTable\r\n            symbol={restaurantInfo.monetary_symbol}\r\n            category_name=\"Pizza\"\r\n            list={pizzas}\r\n          />\r\n        ) : null}\r\n        {selectedCategoryId === -1 ? (\r\n          <MenuTable\r\n            symbol={restaurantInfo.monetary_symbol}\r\n            category_name=\"Happy Hours\"\r\n            list={happyhours}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MenuItems;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MenuTable\\MenuTable.jsx",["378","379","380","381","382"],"import React, { useState } from \"react\";\r\nimport { Button } from \"react-scroll\";\r\n//import Button from \"@material-ui/core/Button\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport MenuModal from \"../../containers/Modals/MenuModal\";\r\nimport { addItem } from \"../../state-management/menu/actions\";\r\nimport { isHappyHourStillActive } from \"../../state-management/menu/utils\";\r\n\r\nconst MenuTable = ({ category_name, list, symbol, actualPrice }) => {\r\n  const dispatch = useDispatch();\r\n  const menu = useSelector((state) => state.menu);\r\n  const addToCart = (item) => {\r\n    console.log(\"items at the time of add\", item);\r\n\r\n    dispatch(addItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  };\r\n  return (\r\n    <>\r\n      <h3\r\n        className=\"nomargin_top\"\r\n        id={category_name}\r\n        style={{ color: \"#5B53CD\" }}\r\n      >\r\n        {category_name}\r\n      </h3>\r\n      <p>\r\n        Te ferri iisque aliquando pro, posse nonumes efficiantur in cum.\r\n        Sensibus reprimique eu pro. Fuisset mentitum deleniti sit ea.\r\n      </p>\r\n      <table className=\"table table-striped cart-list\">\r\n        <thead>\r\n          <tr>\r\n            <th>Item</th>\r\n\r\n            {list.forced_modifier > 0 ? (\r\n              <th style={{ display: \"none\" }}>price</th>\r\n            ) : (\r\n              <th>Price</th>\r\n            )}\r\n            {/* <th>Price</th> */}\r\n            <th>Order</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {console.log(\"list is\", list)}\r\n          {list.map((item) => {\r\n            return (\r\n              <tr>\r\n                <td>\r\n                  <figure className=\"thumb_menu_list\">\r\n                    <img\r\n                      style={{ marginTop: \"10px\" }}\r\n                      src={item?.image ?? \"https://cutt.ly/gkb8C6Z\"}\r\n                      alt=\"thumb\"\r\n                    />\r\n                  </figure>\r\n                  <h5 style={{ marginTop: \"20px\" }}>\r\n                    {item.cname || item.name || item.title}\r\n                  </h5>\r\n                  <p>{item?.description || item.happyHourDisplayText}</p>\r\n                </td>\r\n                {item.forced_modifier > 0 ? (\r\n                  <td>\r\n                    <strong>-</strong>\r\n                  </td>\r\n                ) : (\r\n                  <td>\r\n                    <strong>{`${symbol} ${\r\n                      actualPrice ? actualPrice(item) : item.price\r\n                    }`}</strong>\r\n                  </td>\r\n                )}\r\n                {/* <td>\r\n                  <strong>{`${symbol} ${\r\n                    actualPrice ? actualPrice(item) : item.price\r\n                  }`}</strong>\r\n                </td> */}\r\n                <td className=\"options\">\r\n                  {item.forced_modifier > 0 ? (\r\n                    <MenuModal item={item} />\r\n                  ) : (\r\n                    <>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        {!item.qty && (\r\n                          <button\r\n                            style={{\r\n                              background: \"#5B53CD\",\r\n                              color: \"whitesmoke\",\r\n                              fontSize: \"1.3rem\",\r\n                              width: \"30px\",\r\n                              height: \"30px\",\r\n                              borderRadius: \"50%\",\r\n                              border: \"none\",\r\n                              outline: \"none\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                            onClick={() => addToCart(item)}\r\n                          >\r\n                            <span style={{ display: \"block\" }}>+</span>\r\n                          </button>\r\n                        )}\r\n                        {item.qty ? (\r\n                          <button\r\n                            style={{\r\n                              background: \"#5B53CD\",\r\n                              color: \"whitesmoke\",\r\n                              fontSize: \"1.3rem\",\r\n                              width: \"30px\",\r\n                              height: \"30px\",\r\n                              borderRadius: \"50%\",\r\n                              border: \"none\",\r\n                              outline: \"none\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                            onClick={() => addToCart(item)}\r\n                          >\r\n                            <span style={{ display: \"block\" }}>+</span>\r\n                          </button>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <hr />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuTable;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modals\\MenuModal.jsx",["383","384","385","386"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { addItem } from \"../../state-management/menu/actions\";\r\nimport ForcedModifiers from \"../Modifiers/ForcedModifiers/ForcedModifiers\";\r\nimport OptionalModifiers from \"../Modifiers/OptionalModifiers/OptionalModifiers\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\n\r\nconst MenuModal = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n  const [radiovalue, setradiovalue] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const menu = useSelector((state) => state.menu);\r\n  const allFm = menu.allForcedModifier;\r\n  const allOm = menu.allOptionalModifier;\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    selectedOptionalModifier: [],\r\n    selectedForcedModifier: [],\r\n    forcedPrice: 0,\r\n    optionalPrice: 0,\r\n    item: item,\r\n  });\r\n\r\n  // const radioSelect = (val) => {\r\n  //   console.log(\"val\", val);\r\n  //   setradiovalue(val.target.value);\r\n  // };\r\n\r\n  // const getForcedModifiers = (item) => {\r\n  //   return item?.forced_modifier\r\n  //     .split(\",\")\r\n  //     .map((fm) => allFm.find(({ fm_cat_id: fmId }) => fmId === fm));\r\n  // };\r\n  // const getOptionalModifiers = (item) => {\r\n  //   return item?.optional_modifier\r\n  //     .split(\",\")\r\n  //     .map((om) => allOm.find(({ om_cat_id: omId }) => omId === om));\r\n  // };\r\n  // const toggle = () => {\r\n  //   setModal(!modal);\r\n  // };\r\n  const onModalClick = (item) => {\r\n    // const { menuItems } = carrtitem;\r\n    // const item = menuItems.find(({ id }) => this.state.item.id === id);\r\n    const { forcedPrice, optionalPrice } = state;\r\n    const modifier = {\r\n      forcedModifier: state.selectedForcedModifier,\r\n      optionalModifier: state.selectedOptionalModifier,\r\n    };\r\n    const subTotal = forcedPrice + optionalPrice + Number(item.price);\r\n\r\n    console.log(\"modifiers in handleAddItem\", modifier);\r\n\r\n    dispatch(addItem(item, modifier, subTotal, menu.restaurantInfo));\r\n    console.log(\"items after modal click\", item);\r\n    setModal(!modal);\r\n  };\r\n\r\n  const getForcedModifiers = () => {\r\n    if (state.item.forced_modifier !== \"0\") {\r\n      const itemForcedModifiers = state.item.forced_modifier.split(\",\");\r\n\r\n      return menu.allForcedModifier.filter((item) =>\r\n        itemForcedModifiers.includes(item.fm_cat_id)\r\n      );\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  // const getOptionModifiers = () => {\r\n  //   if (this.state.item.optional_modifier !== \"0\") {\r\n  //     const itemOptionalModifiers =\r\n  //       this.state.item.optional_modifier.split(\",\");\r\n\r\n  //     return this.props.allOptionalModifier.filter((item) =>\r\n  //       itemOptionalModifiers.includes(item.om_cat_id)\r\n  //     );\r\n  //   }\r\n\r\n  //   return [];\r\n  // };\r\n\r\n  // const handleAddItem = () => {\r\n  //   const { menuItems } = this.props;\r\n  //   const item = menuItems.find(({ id }) => this.state.item.id === id);\r\n  //   const { forcedPrice, optionalPrice } = this.state;\r\n  //   const modifier = {\r\n  //     forcedModifier: this.state.selectedForcedModifier,\r\n  //     optionalModifier: this.state.selectedOptionalModifier,\r\n  //   };\r\n  //   const subTotal = forcedPrice + optionalPrice + Number(item.price);\r\n\r\n  //   console.log(\"modifiers in handleAddItem\", modifier);\r\n\r\n  //   this.setState(\r\n  //     {\r\n  //       forcedPrice: 0,\r\n  //       optionalPrice: 0,\r\n  //     },\r\n  //     () => {\r\n  //       this.props.addItem(item, modifier, subTotal, this.props.restaurantInfo);\r\n  //       this.props.onCloseModal();\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  const handleForcedModifierSelectionChange = (\r\n    selectedForcedModifier,\r\n    forcedPrice\r\n  ) => {\r\n    setState({ ...state, selectedForcedModifier, forcedPrice });\r\n    console.log(\"selection change\", state);\r\n  };\r\n\r\n  // const handleOptionalModifierSelectionChange = (\r\n  //   selectedOptionalModifier,\r\n  //   optionalPrice\r\n  // ) => {\r\n  //   this.setState({\r\n  //     selectedOptionalModifier,\r\n  //     optionalPrice,\r\n  //   });\r\n  // };\r\n\r\n  const isPriceWithoutTax = () => {\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  // const getActualPrice = (item) => {\r\n  //   if (this.props.restaurantInfo) {\r\n  //     return this.isPriceWithoutTax()\r\n  //       ? Number(item.price)\r\n  //       : truncateDecimal(\r\n  //           Number(item.price) +\r\n  //             Number(\r\n  //               getTaxes(item, Number(item.price), this.props.restaurantInfo)\r\n  //                 .tax\r\n  //             )\r\n  //         );\r\n  //   }\r\n\r\n  //   return 0;\r\n  // };\r\n\r\n  const getModifierPrice = (price) => {\r\n    truncateDecimal(\r\n      Number(price) +\r\n        Number(getTaxes(state.item, Number(price), menu.restaurantInfo).tax)\r\n    );\r\n    //var isPriceWithoutTax = isPriceWithoutTax();\r\n    // isPriceWithoutTax()\r\n    //   ? price\r\n    //   : truncateDecimal(\r\n    //       Number(price) +\r\n    //         Number(getTaxes(state.item, Number(price), menu.restaurantInfo).tax)\r\n    //     );\r\n  };\r\n\r\n  // const getPrice = (item, price) => {\r\n  //   return this.isPriceWithoutTax()\r\n  //     ? truncateDecimal(price)\r\n  //     : truncateDecimal(\r\n  //         Number(price) +\r\n  //           Number(getTaxes(item, Number(price), this.props.restaurantInfo).tax)\r\n  //       );\r\n  // };\r\n\r\n  // const getTotalPrice = (item) => {\r\n  //   const { forcedPrice, optionalPrice } = this.state;\r\n  //   const { price } = item;\r\n  //   const modifierPrice = forcedPrice + optionalPrice;\r\n  //   const result = modifierPrice\r\n  //     ? modifierPrice + Number(price)\r\n  //     : this.getActualPrice(item);\r\n\r\n  //   return modifierPrice ? this.getPrice(item, result) : result;\r\n  // };\r\n\r\n  // const isConfirmationDisabled = () => {\r\n  //   const forcedModifers = this.getForcedModifiers();\r\n  //   const { selectedForcedModifier } = this.state;\r\n\r\n  //   if (forcedModifers && forcedModifers.length) {\r\n  //     return (\r\n  //       !selectedForcedModifier ||\r\n  //       (selectedForcedModifier &&\r\n  //         forcedModifers.length !== selectedForcedModifier.length)\r\n  //     );\r\n  //   }\r\n\r\n  //   return false;\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{\r\n          background: \"#5B53CD\",\r\n          color: \"whitesmoke\",\r\n          fontSize: \"1.3rem\",\r\n          width: \"30px\",\r\n          height: \"30px\",\r\n          borderRadius: \"50%\",\r\n          border: \"none\",\r\n          outline: \"none\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        onClick={toggle}\r\n      >\r\n        <span style={{ margin: \"auto auto\" }}>+</span>\r\n      </button>\r\n      {console.log(\"Item passed to the modal\", item)}\r\n      {console.log(\"forcedModifiers\", getForcedModifiers(item))}\r\n      <Modal style={{ top: \"25%\" }} isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          {item.title || item.cname || item.name}\r\n        </ModalHeader>\r\n        <ModalBody style={{ maxHeight: \"400px\", overflowY: \"scroll\" }}>\r\n          <ForcedModifiers\r\n            // radioSelect={radioSelect}\r\n            // forcedModifier={getForcedModifiers(item)}\r\n            // detours={item.detour_ids}\r\n            // symbol={menu.restaurantInfo.monetary_symbol}\r\n\r\n            currency={menu.restaurantInfo.currency}\r\n            isPriceWithoutTax={isPriceWithoutTax()}\r\n            item={item}\r\n            forcedModifiers={getForcedModifiers()}\r\n            detours={item.detour_ids}\r\n            getModifierPrice={getModifierPrice()}\r\n            onSelectionChange={handleForcedModifierSelectionChange}\r\n          />\r\n          {/* <OptionalModifiers\r\n            optionalModifier={getOptionalModifiers(item)}\r\n            symbol={menu.restaurantInfo.monetary_symbol}\r\n          /> */}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            onClick={() => onModalClick(item)}\r\n            style={{ backgroundColor: \"green\", border: \"none\" }}\r\n            // onClick={toggle}\r\n          >\r\n            Add Items {radiovalue}\r\n          </Button>{\" \"}\r\n          <Button\r\n            style={{ backgroundColor: \"red\", border: \"none\" }}\r\n            onClick={toggle}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuModal;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ForcedModifiers.jsx",["387","388","389","390"],"import React, { useState } from \"react\";\r\nimport { FormGroup, Input, Label } from \"reactstrap\";\r\nimport ModifierCategory from \"./ModifiersCategory/ModifierCategory\";\r\n\r\nconst ForcedModifiers = ({\r\n  forcedModifiers,\r\n  detours,\r\n  currency,\r\n  getModifierPrice,\r\n  onSelectionChange,\r\n}) => {\r\n  const [selectedForceModifiers, setSelectedForceModifiers] = useState([]);\r\n\r\n  const getTotalPrice = (updatedForcedModifiers) => {\r\n    return updatedForcedModifiers.reduce(\r\n      (acc, item) => acc + Number(item.price),\r\n      0\r\n    );\r\n  };\r\n\r\n  const handleSelectionChange = (forceModifier) => {\r\n    let updatedModifiers = [];\r\n    const isModifierExists = selectedForceModifiers.find(\r\n      ({ id }) => id === forceModifier.id\r\n    );\r\n    const modiferWithSameCategoryIndex = selectedForceModifiers.findIndex(\r\n      ({ categoryId }) => categoryId === forceModifier.categoryId\r\n    );\r\n\r\n    if (modiferWithSameCategoryIndex >= 0) {\r\n      updatedModifiers = selectedForceModifiers.map((modifier) => {\r\n        if (modifier.categoryId === forceModifier.categoryId) {\r\n          return { ...forceModifier };\r\n        }\r\n\r\n        return modifier;\r\n      });\r\n\r\n      setSelectedForceModifiers(updatedModifiers);\r\n    } else if (isModifierExists) {\r\n      updatedModifiers = selectedForceModifiers.map((modifier) => {\r\n        if (modifier.id === forceModifier.id) {\r\n          return {\r\n            ...modifier,\r\n            ...forceModifier,\r\n          };\r\n        }\r\n\r\n        return modifier;\r\n      });\r\n\r\n      setSelectedForceModifiers(updatedModifiers);\r\n    } else {\r\n      updatedModifiers = [...selectedForceModifiers, forceModifier];\r\n\r\n      setSelectedForceModifiers(updatedModifiers);\r\n    }\r\n    onSelectionChange &&\r\n      onSelectionChange(updatedModifiers, getTotalPrice(updatedModifiers));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {console.log(\"comp forcedModifier\", forcedModifiers)}\r\n      {forcedModifiers.map((item) => {\r\n        if (item) {\r\n          return (\r\n            <>\r\n              <h4>{item.fm_cat_name}</h4>\r\n              <span>Please select only 1 of the following options</span>\r\n              {forcedModifiers.map((forceModifier, i) => {\r\n                return (\r\n                  <ModifierCategory\r\n                    key={i}\r\n                    forceModifier={forceModifier}\r\n                    detours={detours}\r\n                    currency={currency}\r\n                    getModifierPrice={getModifierPrice}\r\n                    onSelectionChange={handleSelectionChange}\r\n                  />\r\n                );\r\n              })}\r\n            </>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForcedModifiers;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\OptionalModifiers\\OptionalModifiers.jsx",["391"],"import React from 'react'\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst OptionalModifiers = ({ optionalModifier , symbol}) => {\r\n  return(\r\n      <div>\r\n        {console.log(\"OPTIONAL MODIFIERS\", optionalModifier)}\r\n          {optionalModifier.map((item)=>{\r\n              if(item){\r\n                  return(\r\n                      <div key={item.om_cat_id}>\r\n                        <h4>\r\n                            {item.om_cat_name}\r\n                        </h4>\r\n                        {item.items.map((oItem)=>{\r\n                            return (\r\n                              <div\r\n                                key={oItem.id}\r\n                                style={{\r\n                                  //   background: \"red\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"space-between\",\r\n                                  margin: \"10px\",\r\n                                  height: \"20px\",\r\n                                }}\r\n                              >\r\n                                <FormGroup check>\r\n                                  <Label check>\r\n                                    <Input type=\"checkbox\" id={oItem.id} /> {oItem.name}\r\n                                  </Label>\r\n                                </FormGroup>\r\n                                <span style={{ display: \"block\" }}>\r\n                                  {symbol}&nbsp;{oItem.price}\r\n                                </span>\r\n                              </div>\r\n                            );\r\n                        })}\r\n\r\n                      </div>\r\n                  )\r\n              }\r\n          })}\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default OptionalModifiers\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ForcedModifiers\\ModifiersCategory\\ModifierCategory.jsx",["392","393","394"],"import React, { useState } from \"react\";\r\nimport { FormGroup, Input, Label } from \"reactstrap\";\r\nimport ModifierOption from \"../../ModifierOption\";\r\nimport { Radio } from \"antd\";\r\n\r\nconst ModifierCategory = ({\r\n  forceModifier,\r\n  detours,\r\n  currency,\r\n  getModifierPrice,\r\n  onSelectionChange,\r\n}) => {\r\n  const [selectedModifierId, setSelectedModifierId] = useState();\r\n  const handleGroupSelectionChange = ({ target: { value } }) => {\r\n    const selectedForceModifier = forceModifier.items.find(\r\n      ({ id }) => id === value\r\n    );\r\n\r\n    setSelectedModifierId(value);\r\n    onSelectionChange({\r\n      ...selectedForceModifier,\r\n      optionalModifiers: [],\r\n      categoryId: forceModifier.fm_cat_id,\r\n      price: Number(selectedForceModifier.price),\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      // key={fItem.id}\r\n      style={{\r\n        //   background: \"red\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        margin: \"10px\",\r\n        height: \"20px\",\r\n      }}\r\n    >\r\n      <Radio.Group onChange={handleGroupSelectionChange}>\r\n        {forceModifier.items &&\r\n          forceModifier.items.map((item, i) => (\r\n            <ModifierOption\r\n              key={i}\r\n              isChecked={item.id === selectedModifierId}\r\n              currency={currency}\r\n              option={item}\r\n              categoryId={forceModifier.fm_cat_id}\r\n              forceModifierdetours={detours}\r\n              getModifierPrice={getModifierPrice}\r\n              onSelectionChange={onSelectionChange}\r\n            />\r\n          ))}\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const ModifierOptions = React.memo(({ item, optionId }) => {\r\n//   // const detours = getForcedModifiersDetours(item, optionId)\r\n//   return <></>;\r\n// });\r\n\r\nexport default ModifierCategory;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\Cart.jsx",["395","396","397","398","399","400","401","402","403"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeItem } from \"../../state-management/menu/actions\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport { showLoginFormMethod } from \"../../state-management/user/actions\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport Login from \"../../components/Login/Login\";\r\nimport { useHistory } from \"react-router\";\r\nimport ItemList from \"./ItemList\";\r\n\r\nconst Cart = (props) => {\r\n  const History = useHistory();\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  let isDecimalAmount = false;\r\n  //const grandTotal = Number(getGrandTotal());\r\n  const deliveryCharges = 0;\r\n\r\n  // function getDeliveryCharges() {\r\n  //   const {\r\n  //     deliveryRange: { cost, range },\r\n  //     isTakeAway,\r\n  //     distance,\r\n  //   } = main.deliveryRange;\r\n  //   const freeDeliveryRangeAmount = cost[\"free_delivery_eligible_amount\"];\r\n  //   const stdDeliveryCost = cost[\"std_delivery_cost\"] || 0;\r\n  //   console.log(\r\n  //     \"check delivery\",\r\n  //     parseInt(cost[\"free_delivery_eligible_amount\"]) === 0,\r\n  //     parseInt(cost[\"std_delivery_cost\"]) === 0,\r\n  //     grandTotal\r\n  //   );\r\n  //   const isFreeDelivery =\r\n  //     grandTotal >= Number(cost[\"free_delivery_eligible_amount\"]) &&\r\n  //     parseInt(freeDeliveryRangeAmount) !== 0;\r\n\r\n  //   if (isFreeDelivery || isTakeAway) {\r\n  //     props.setDeliveryCost(0);\r\n  //     return 0;\r\n  //   }\r\n  //   if (distance === -1 || !range) {\r\n  //     // if(stdDeliveryCost){\r\n  //     props.setDeliveryCost(Number(stdDeliveryCost));\r\n  //     // }\r\n  //     return Number(stdDeliveryCost);\r\n  //   }\r\n\r\n  //   if (range) {\r\n  //     const selectedRange = range.find((rng) => {\r\n  //       const from = Number(rng[\"range_from\"]);\r\n  //       const to = Number(rng[\"range_to\"]);\r\n\r\n  //       return distance >= from && distance <= to;\r\n  //     });\r\n\r\n  //     // selectedRange\r\n  //     //   ?( Number(selectedRange[\"delivery_cost\"]) || 0)\r\n  //     //   : Number(stdDeliveryCost);\r\n\r\n  //     if (selectedRange) {\r\n  //       if (selectedRange[\"delivery_cost\"]) {\r\n  //         props.setDeliveryCost(selectedRange[\"delivery_cost\"]);\r\n  //       } else {\r\n  //         props.setDeliveryCost(0);\r\n  //       }\r\n  //     } else {\r\n  //       props.setDeliveryCost(Number(stdDeliveryCost));\r\n  //     }\r\n  //     return selectedRange\r\n  //       ? Number(selectedRange[\"delivery_cost\"] || 0)\r\n  //       : Number(stdDeliveryCost);\r\n  //   }\r\n\r\n  //   return 0;\r\n  // }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const truncateDecimal = (number) => {\r\n    return Number.isInteger(Number(number))\r\n      ? Number(number)\r\n      : Number(number).toFixed(2);\r\n  };\r\n\r\n  function getSubTotal() {\r\n    return props.cartlist.length\r\n      ? truncateDecimal(\r\n          props.cartlist.reduce((acc, item) => {\r\n            console.log(\"item acc is\", item);\r\n            if (\r\n              isHappyHourStillActive(item, props.restinfo.timezone).isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.subTotal\r\n                  ? Number(item.happyHourItem.subTotal)\r\n                  : Number(item.qty) * Number(item.price))\r\n              );\r\n            }\r\n\r\n            return (\r\n              acc + item.qty * Number(item.price)\r\n              //(item.subTotal ? item.subTotal : item.qty * Number(item.price))\r\n            );\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getSubTaxTotal() {\r\n    return props.cartlist.length\r\n      ? truncateDecimal(\r\n          props.cartlist.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, props.restinfo.timezone).isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.tax\r\n                  ? item.happyHourItem.tax\r\n                  : item.tax || 0)\r\n              );\r\n            }\r\n\r\n            return acc + Number(item.tax || 0);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getGrandTotal() {\r\n    return props.cartlist.length\r\n      ? truncateDecimal(\r\n          props.cartlist.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, props.restinfo.timezone).isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  // const getItemPrice = (item, isStillActive) => {\r\n  //   if (item.happyHourItem && isStillActive) {\r\n  //     if (item.similarItems && item.similarItems.length > 0) {\r\n  //       let totalPrice = 0;\r\n\r\n  //       for (let i = 0; i < item.similarItems.length; i++) {\r\n  //         totalPrice =\r\n  //           totalPrice + isPriceWithoutTax()\r\n  //             ? item.similarItems[i].happyHourItem.subTotal\r\n  //             : item.similarItems[i].happyHourItem.grandTotal;\r\n  //       }\r\n\r\n  //       return Number(totalPrice).toFixed(2);\r\n  //     } else {\r\n  //       console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n  //       console.log(\"grand\", Number(item.happyHourItem.grandTotal).toFixed(2));\r\n  //       return isPriceWithoutTax()\r\n  //         ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n  //         : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n  //     }\r\n  //   } else if (item.subTotal && item.grandTotal) {\r\n  //     if (item.similarItems && item.similarItems.length > 0) {\r\n  //       let totalPrice = 0;\r\n\r\n  //       for (let i = 0; i < item.similarItems.length; i++) {\r\n  //         totalPrice =\r\n  //           totalPrice + isPriceWithoutTax()\r\n  //             ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n  //             : item.similarItems[i].grandTotal ||\r\n  //               getActualPrice(item.similarItems[i]);\r\n  //       }\r\n\r\n  //       return Number(totalPrice).toFixed(2);\r\n  //     } else {\r\n  //       console.log(\r\n  //         \"log\",\r\n  //         isPriceWithoutTax()\r\n  //           ? item.subTotal || item.price\r\n  //           : item.grandTotal || this.getActualPrice(item)\r\n  //       );\r\n  //       return isPriceWithoutTax()\r\n  //         ? item.subTotal || item.price\r\n  //         : item.grandTotal || this.getActualPrice(item);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  function getDiscountedPrice(item, isStillActive) {\r\n    if (item.happyHourItem && isStillActive) {\r\n      const itemPrice = item.subTotal;\r\n      const itemHappyHourPrice = item.happyHourItem.subTotal;\r\n\r\n      return truncateDecimal(itemPrice - itemHappyHourPrice);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  const isPriceWithoutTax = () => {\r\n    console.log(\r\n      \"price without tax\",\r\n      menu.restaurantInfo[\"price_without_tax_flag\"]\r\n    );\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  const getActualPrice = (item) => {\r\n    if (menu.restaurantInfo) {\r\n      // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n      return isPriceWithoutTax()\r\n        ? item.price\r\n        : (\r\n            Number(item.price) +\r\n            Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n          ).toFixed(2);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const getBillAmount = () => {\r\n    const finalAmount = (\r\n      Number(deliveryCharges) + Number(getGrandTotal())\r\n    ).toFixed(2);\r\n    const showAmountInDecimal =\r\n      Number(menu.restaurantInfo[\"show_prices_in_decimal_flag\"]) === 1;\r\n\r\n    if (showAmountInDecimal) {\r\n      isDecimalAmount = true;\r\n    } else {\r\n      isDecimalAmount = finalAmount % 1 === 0;\r\n    }\r\n\r\n    return !showAmountInDecimal && finalAmount % 1 !== 0\r\n      ? finalAmount\r\n      : finalAmount;\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    // dispatch(removeItem(item, item.modifiers, 0, menu.restaurantInfo));\r\n    dispatch(removeItem(item, null, 0, menu.restaurantInfo));\r\n  };\r\n\r\n  const callLoginForm = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart_box\">\r\n      <h3>\r\n        Your order <i className=\"icon_cart_alt float-right\" />\r\n      </h3>\r\n\r\n      <ItemList\r\n        items={menu.cart}\r\n        currency={menu.restaurantInfo.monetary_symbol}\r\n        isPriceWithoutTax={\r\n          Number(menu.restaurantInfo[\"price_without_tax_flag\"]) == 1\r\n        }\r\n        timezone={menu.restaurantInfo.timezone}\r\n        onRemove={removeFromCart}\r\n        //onAdd={handleAddItem}\r\n        //onDelete={props.removeCartItem}\r\n      />\r\n      {/* <div className=\"row\" id=\"options_2\">\r\n        <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              defaultValue\r\n              value=\"delivery\"\r\n              onChange={(e) => setradioval(e.target.value)}\r\n              defaultChecked\r\n              name=\"option_2\"\r\n              className=\"icheck\"\r\n            />\r\n            Delivery\r\n          </label>\r\n        </div> */}\r\n      {/* <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"eatin\"\r\n              onChange={(e) => setradioval(e.target.value)}\r\n              defaultValue\r\n              name=\"option_2\"\r\n              className=\"icheck\"\r\n            />\r\n            Eat In\r\n          </label>\r\n        </div> */}\r\n\r\n      {/* <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"takeaway\"\r\n              onChange={(e) => setradioval(e.target.value)}\r\n              defaultValue\r\n              name=\"option_2\"\r\n              className=\"icheck\"\r\n            />\r\n            Take Away\r\n          </label>\r\n        </div>\r\n        {console.log(\"value of radio is\", radioval)}\r\n      </div> */}\r\n      {/* Edn options 2 */}\r\n      <hr />\r\n      <table className=\"table table_summary\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              Subtotal{\" \"}\r\n              <span className=\"float-right\">{`${\r\n                props.restinfo.monetary_symbol\r\n              }${getSubTotal()}`}</span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Taxes{\" \"}\r\n              <span className=\"float-right\">{`${\r\n                props.restinfo.monetary_symbol\r\n              }${getSubTaxTotal()}`}</span>\r\n            </td>\r\n          </tr>\r\n          {/* {radioval == \"takeaway\" || radioval == \"eatin\" ? (\r\n            <tr>\r\n              <td style={{ display: \"none\" }}>\r\n                Delivery Charges <span className=\"float-right\">0</span>\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            <tr>\r\n              <td>\r\n                Delivery Charges <span className=\"float-right\">0</span>\r\n              </td>\r\n            </tr>\r\n          )} */}\r\n          {/* <tr>\r\n            <td>\r\n              Delivery Charges <span className=\"float-right\">0</span>\r\n            </td>\r\n          </tr> */}\r\n          <tr>\r\n            <td className=\"total\">\r\n              TOTAL{\" \"}\r\n              <span className=\"float-right\">{`${\r\n                props.restinfo.monetary_symbol\r\n              }${getBillAmount()}`}</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <hr />\r\n      {user.user.isUserLoggedIn ? (\r\n        <button\r\n          onClick={() =>\r\n            History.push(\r\n              `/restId=${menu.restaurantInfo.restaurant_id}/checkout`\r\n            )\r\n          }\r\n          className=\"btn_full\"\r\n          href=\"cart.html\"\r\n          style={{ backgroundColor: \"#5B53CD\" }}\r\n        >\r\n          Checkout\r\n        </button>\r\n      ) : (\r\n        <button\r\n          onClick={callLoginForm}\r\n          className=\"btn_full\"\r\n          href=\"cart.html\"\r\n          style={{ backgroundColor: \"#5B53CD\" }}\r\n        >\r\n          Proceed to Login\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Cart;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Login\\Login.jsx",["404","405","406","407","408","409","410","411"],"import React, { useState } from \"react\";\r\nimport \"../Login/login.css\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { showRegisterFormMethod } from \"../../state-management/user/actions\";\r\nimport { showForgotPasswordFormMethod } from \"../../state-management/user/actions\";\r\nimport {\r\n  hideLoginFormMethod,\r\n  setUserLoggedIn,\r\n} from \"../../state-management/user/actions\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport {\r\n  postLoginForm,\r\n  postSocialRegisterForm,\r\n  postSocialLoginForm,\r\n  updateProfile,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nconst Login = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    phonecode: \"\",\r\n    timezone: \"\",\r\n    socialLoginId: null,\r\n    socialType: \"\",\r\n    profileImage: \"\",\r\n    token: null,\r\n    clientId: null,\r\n    submittingClass: \"\",\r\n    submitText: \"SUBMIT\",\r\n    errorMessage: false,\r\n    requestSuccess: null,\r\n    showLoader: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const closeLoginModal = () => {\r\n    dispatch(hideLoginFormMethod());\r\n  };\r\n  const showCreateAccount = () => {\r\n    dispatch(showRegisterFormMethod());\r\n    //alert(\"cloick\");\r\n  };\r\n  const showForgotPassword = () => {\r\n    dispatch(showForgotPasswordFormMethod());\r\n  };\r\n\r\n  const onEmailChange = (value) => {\r\n    console.log(\"value\", { ...state, [value.target.name]: value.target.value });\r\n    setState({ ...state, [value.target.name]: value.target.value });\r\n  };\r\n\r\n  const onPasswordChange = (value) => {\r\n    setState({ ...state, password: value });\r\n  };\r\n\r\n  const onFormSubmit = async () => {\r\n    setState({\r\n      ...state,\r\n      submitText: \"Please Wait...\",\r\n      errorMessage: false,\r\n      submittingClass: \"submitting\",\r\n      requestSuccess: null,\r\n      showLoader: true,\r\n    });\r\n\r\n    console.log(\"login data is\", state);\r\n    const resp = await dispatch(postLoginForm(state));\r\n    const { payload } = await resp;\r\n    console.log(\"normal\", payload);\r\n\r\n    if (payload.success) {\r\n      const {\r\n        token,\r\n        data: {\r\n          firstname: firstName,\r\n          lastname: lastName,\r\n          mobile,\r\n          email,\r\n          client_id: clientId,\r\n        },\r\n      } = payload;\r\n\r\n      //console.log(\"check\", payload);\r\n\r\n      // const va = {\r\n      //   token: payload.token,\r\n      //   firstName: payload.data.firstname,\r\n      //   lastName: payload.data.lastname,\r\n      //   mobile: payload.data.mobile,\r\n      //   email: payload.data.email,\r\n      //   clientId: payload.data.client_id,\r\n      // };\r\n\r\n      // console.log(\"state after\", va);\r\n\r\n      setState({\r\n        ...state,\r\n        token,\r\n        firstName,\r\n        lastName,\r\n        mobile,\r\n        email,\r\n        clientId,\r\n      });\r\n      if (!state.mobile) {\r\n        const phoneNumber = getPhoneNumber();\r\n        // console.log(\"input from prompt\", phoneNumber);\r\n        console.log(\"MERCHANT\", menu.restaurantInfo.merchant_key);\r\n        const updateCred = {\r\n          client_id: payload.data.client_id,\r\n          merchant_id: menu.restaurantInfo.merchant_key,\r\n          phone: phoneNumber,\r\n        };\r\n        const resp2 = await dispatch(updateProfile(updateCred));\r\n        const {\r\n          payload: { success, message },\r\n        } = await resp2;\r\n        console.log(\"UPDATE_PROFILE\", payload);\r\n        if (success) {\r\n          alert(\"Phonenumber Added succesfully\");\r\n        } else {\r\n          alert(\"Some Error has occured! please check My Profile\");\r\n        }\r\n      }\r\n      // console.log(\"normal before login\", );\r\n      dispatch(\r\n        setUserLoggedIn({\r\n          token,\r\n          firstName,\r\n          lastName,\r\n          mobile,\r\n          email,\r\n          clientId,\r\n        })\r\n      );\r\n\r\n      //this.props.hideLoginFormMethod();\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      submitText: \"SUBMIT\",\r\n      errorMessage: payload.message,\r\n      submittingClass: \"\",\r\n      requestSuccess: payload.success,\r\n      showLoader: false,\r\n    });\r\n\r\n    {\r\n      payload.message\r\n        ? notification.open({\r\n            message: `${payload.message}`,\r\n            style: {\r\n              marginTop: \"50px\",\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n          })\r\n        : notification.open({\r\n            message: \"Login Successfull\",\r\n            style: {\r\n              marginTop: \"50px\",\r\n              color: \"rgba(0, 0, 0, 0.65)\",\r\n              border: \"1px solid #b7eb8f\",\r\n              backgroundColor: \"#f6ffed\",\r\n            },\r\n          });\r\n    }\r\n  };\r\n\r\n  const getPhoneNumber = () => {\r\n    let phoneNumber = prompt(\"please enter phoneNumber\");\r\n    if (phoneNumber == null || phoneNumber === \"\") {\r\n      this.getPhoneNumber();\r\n    } else {\r\n      return phoneNumber;\r\n    }\r\n  };\r\n\r\n  const responseFacebook = async (res) => {\r\n    // check popup window is closed by user\r\n    // then simply return\r\n    if (res.status !== undefined && res.status === \"unknown\") {\r\n      return;\r\n    }\r\n\r\n    let newState = {\r\n      socialLoginId: res.userID,\r\n      socialType: \"facebook\",\r\n      profileImage: res.picture.data.url,\r\n      email: res.email,\r\n      firstName: res.name.split(\" \")[0],\r\n      lastName: res.name.split(\" \")[1],\r\n      showLoader: true,\r\n    };\r\n    setState(newState);\r\n\r\n    // First check if this user exist in database\r\n    //const { payload } = await this.props.postSocialLoginForm(state);\r\n\r\n    const resp = await dispatch(postSocialLoginForm(newState));\r\n    const { payload } = await resp;\r\n\r\n    if (payload.success) {\r\n      // user logged In\r\n      const newStateAgain = {\r\n        clientId: payload.data.client_id,\r\n        token: payload.token,\r\n        showLoader: false,\r\n        mobile: payload.data.mobile,\r\n      };\r\n      setState(newStateAgain);\r\n      //this.props.setUserLoggedIn(this.state);\r\n      dispatch(postSocialLoginForm(newStateAgain));\r\n    } else {\r\n      const newStateAgain = {\r\n        clientId: payload.data.client_id,\r\n        token: payload.token,\r\n        showLoader: false,\r\n        mobile: payload.data.mobile,\r\n      };\r\n      // create an account\r\n      const resp = await dispatch(postSocialRegisterForm(newStateAgain));\r\n      const { payload } = await resp;\r\n\r\n      const newStateAgain2 = {\r\n        clientId: payload.data.client_id,\r\n        token: payload.token,\r\n        showLoader: false,\r\n      };\r\n\r\n      if (payload.success) {\r\n        this.setState(newStateAgain2);\r\n        // this.props.setUserLoggedIn(this.state);\r\n        dispatch(setUserLoggedIn(state));\r\n      } else {\r\n        // some error has occured\r\n      }\r\n    }\r\n  };\r\n\r\n  //google\r\n  const responseGoogle = async (res) => {\r\n    if (res.error) {\r\n      return;\r\n    }\r\n    const newState = {\r\n      socialLoginId: res.profileObj.googleId,\r\n      socialType: \"google\",\r\n      profileImage: res.profileObj.imageUrl,\r\n      email: res.profileObj.email,\r\n      firstName: res.profileObj.givenName,\r\n      lastName: res.profileObj.familyName,\r\n      showLoader: true,\r\n    };\r\n    setState(newState);\r\n    console.log(\"121 state\", newState);\r\n    // First check if this user exist in database\r\n    // const { payload } = await postSocialLoginForm(newState);\r\n    const resp = await dispatch(postSocialLoginForm(newState));\r\n    const { payload } = await resp;\r\n    console.log(\"124 res\", resp);\r\n    if (payload.success) {\r\n      // user logged In\r\n      const newStateAgain = {\r\n        socialLoginId: res.profileObj.googleId,\r\n        socialType: \"google\",\r\n        profileImage: res.profileObj.imageUrl,\r\n        email: res.profileObj.email,\r\n        firstName: res.profileObj.givenName,\r\n        lastName: res.profileObj.familyName,\r\n        showLoader: true,\r\n        clientId: payload.data.client_id,\r\n        token: payload.token,\r\n        mobile: payload.data.mobile,\r\n        showLoader: false,\r\n      };\r\n      setState(newStateAgain);\r\n\r\n      //ask phn no\r\n\r\n      if (!state.mobile) {\r\n        const phoneNumber = getPhoneNumber();\r\n        // console.log(\"input from prompt\", phoneNumber);\r\n        console.log(\"MERCHANT\", menu.restaurantInfo.merchant_key);\r\n        const updateCred = {\r\n          client_id: payload.data.client_id,\r\n          merchant_id: menu.restaurantInfo.merchant_key,\r\n          phone: phoneNumber,\r\n        };\r\n        const resp2 = await dispatch(updateProfile(updateCred));\r\n        const {\r\n          payload: { success, message },\r\n        } = await resp2;\r\n        console.log(\"UPDATE_PROFILE\", payload);\r\n        if (success) {\r\n          alert(\"Phonenumber Added succesfully\");\r\n        } else {\r\n          alert(\"Some Error has occured! please check My Profile\");\r\n        }\r\n      }\r\n\r\n      //   // set user as logged in\r\n      //   // this.props.setUserLoggedIn(this.state);\r\n      dispatch(setUserLoggedIn(newStateAgain)); //newState\r\n    } else {\r\n      // create an account\r\n      //\r\n      const { payload } = await dispatch(postSocialRegisterForm(newState)); //state\r\n      if (payload.success) {\r\n        const newStateAgain2 = {\r\n          clientId: payload.data.client_id,\r\n          token: payload.token,\r\n          showLoader: false,\r\n        };\r\n        setState(newStateAgain2);\r\n        //this.props.setUserLoggedIn(this.state);\r\n        dispatch(setUserLoggedIn(newStateAgain2)); //state\r\n      } else {\r\n        // some error has occured\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          {user.waitingOverlay ? (\r\n            <>\r\n              {/* <Loader /> */}\r\n              <WaitingOverlay />\r\n            </>\r\n          ) : null}\r\n          <div className=\"login-box\">\r\n            <div className=\"close\">\r\n              <IconButton\r\n                onClick={closeLoginModal}\r\n                style={\r\n                  {\r\n                    //   backgroundColor: \"#6244da\",\r\n                    //   marginRight: \"-45px\",\r\n                    //   marginTop: \"-35px\",\r\n                  }\r\n                }\r\n              >\r\n                {\" \"}\r\n                <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"header\" style={{ marginLeft: \"40%\" }}>\r\n              <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                LOGIN\r\n              </strong>\r\n            </div>\r\n            {/* end of header */}\r\n            <div className=\"login-form\">\r\n              <TextField\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={state.email}\r\n                onChange={onEmailChange}\r\n                style={{ width: \"90%\", height: \"-50px\" }}\r\n                // label=\"Email\"\r\n                variant=\"outlined\"\r\n              />\r\n              <br /> <br />\r\n              <TextField\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                type=\"password\"\r\n                value={state.password}\r\n                onChange={onEmailChange}\r\n                style={{ width: \"90%\" }}\r\n                //label=\"Password\"\r\n                variant=\"outlined\"\r\n              />\r\n              <br /> <br />\r\n              <Button\r\n                onClick={onFormSubmit}\r\n                style={{\r\n                  backgroundColor: \"#6244da\",\r\n                  padding: \"10px\",\r\n                  color: \"white\",\r\n                  width: \"90%\",\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n            {/* end of form */}\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <span\r\n                onClick={showCreateAccount}\r\n                style={{\r\n                  marginLeft: \"40px\",\r\n                  color: \"#5d5e5e\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Create account\r\n              </span>\r\n              <span\r\n                onClick={showForgotPassword}\r\n                style={{\r\n                  marginLeft: \"31%\",\r\n                  color: \"#5d5e5e\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Forgot Password ?\r\n              </span>\r\n            </div>\r\n            {/* end of options */}\r\n\r\n            <div className=\"login-buttons\">\r\n              {/* <Button\r\n                startIcon={<FaFacebookF />}\r\n                style={{\r\n                  backgroundColor: \"#4267B2\",\r\n                  padding: \"10px\",\r\n                  color: \"white\",\r\n                  width: \"90%\",\r\n                }}\r\n              >\r\n                Login With Facebook\r\n              </Button>\r\n              <br />\r\n              <br />\r\n              <Button\r\n                startIcon={<FaGoogle />}\r\n                style={{\r\n                  backgroundColor: \"#5d5e5e\",\r\n                  padding: \"10px\",\r\n                  color: \"white\",\r\n                  width: \"90%\",\r\n                }}\r\n              >\r\n                Login With Google\r\n              </Button> */}\r\n              <span className=\"login-with-facebook\">\r\n                <FacebookLogin\r\n                  appId={process.env.REACT_APP_FACEBOOK_APP_ID}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  icon=\"fa-facebook\"\r\n                  textButton=\"Login with Facebook\"\r\n                  size=\"medium\"\r\n                  scope=\"public_profile, email\"\r\n                  disableMobileRedirect={true}\r\n                />\r\n              </span>\r\n              <br />\r\n\r\n              <span className=\"login-with-Google\">\r\n                <GoogleLogin\r\n                  clientId={process.env.REACT_APP_GOOGLE_CLIENT}\r\n                  buttonText=\"Login with Google\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\CreateAccount\\CreateAccount.js",["412","413","414","415","416"],"import React, { useState } from \"react\";\r\nimport \"../Login/login.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport { showLoginFormMethod } from \"../../state-management/user/actions\";\r\nimport { hideRegisterFormMethod } from \"../../state-management/user/actions\";\r\nimport { postRegisterForm } from \"../../state-management/user/asyncActions\";\r\n\r\nimport { notification } from \"antd\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nconst CreateAccount = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const [modal, setModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    zipcode: \"\",\r\n    mobile: \"\",\r\n    timezone: \"Asia/Kolkata\",\r\n    submittingClass: \"\",\r\n    submitText: \"SUBMIT\",\r\n    errorMessage: false,\r\n    requestSuccess: null,\r\n    successMessage: \"Your account has been successfully created.\",\r\n    showLoader: false,\r\n    countryCode: \"+91\",\r\n    showloginscreen: false,\r\n  });\r\n\r\n  const onEmailChange = (value) => {\r\n    setState({ ...state, email: value });\r\n  };\r\n\r\n  const onFirstNameChange = (value) => {\r\n    setState({ ...state, firstName: value });\r\n  };\r\n\r\n  const onLastNameChange = (value) => {\r\n    setState({ ...state, lastName: value });\r\n  };\r\n\r\n  const onPasswordChange = (value) => {\r\n    setState({ ...state, password: value });\r\n  };\r\n\r\n  const onMobileChange = (value) => {\r\n    setState({ ...state, mobile: value });\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setState({\r\n      ...state,\r\n      submitText: \"Please Wait...\",\r\n      errorMessage: false,\r\n      submittingClass: \"submitting\",\r\n      showLoader: true,\r\n    });\r\n\r\n    const resp = await dispatch(postRegisterForm(state));\r\n    const { payload } = await resp;\r\n\r\n    if (payload.message) {\r\n      setState({\r\n        ...state,\r\n        submitText: \"SUBMIT\",\r\n        submittingClass: \"\",\r\n        errorMessage: payload.message,\r\n        requestSucess: payload.success,\r\n        showLoader: false,\r\n        showloginscreen: false,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        submitText: \"SUBMIT\",\r\n        submittingClass: \"\",\r\n        errorMessage: payload.message,\r\n        requestSucess: payload.success,\r\n        showLoader: false,\r\n        showloginscreen: true,\r\n      });\r\n    }\r\n\r\n    //dispatch(showLoginFormMethod());\r\n  };\r\n\r\n  const closeLoginModal = () => {\r\n    dispatch(hideRegisterFormMethod());\r\n  };\r\n\r\n  const goBackToLogin = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          {user.waitingOverlay ? (\r\n            <>\r\n              {/* <Loader /> */}\r\n              <WaitingOverlay />\r\n            </>\r\n          ) : null}\r\n          <div className=\"login-box\">\r\n            {/* end of header */}\r\n\r\n            {state.showloginscreen ? (\r\n              <>\r\n                <img\r\n                  style={{ marginLeft: \"30%\" }}\r\n                  src=\"https://i.ibb.co/TmCnRTh/Tick-Mark-Dark-512.png\"\r\n                  height=\"200px\"\r\n                  width=\"150px\"\r\n                />\r\n                <h1 style={{ marginTop: \"5%\", marginLeft: \"35%\" }}>Great !</h1>\r\n                <br />\r\n                <p style={{ fontSize: \"15px\", marginLeft: \"22%\" }}>\r\n                  Your Account is succesfully Created\r\n                </p>\r\n\r\n                <Button\r\n                  onClick={() => dispatch(showLoginFormMethod())}\r\n                  style={{\r\n                    marginLeft: \"25%\",\r\n                    marginTop: \"5%\",\r\n                    backgroundColor: \"#6244da\",\r\n                    padding: \"10px\",\r\n                    color: \"white\",\r\n                    width: \"50%\",\r\n                  }}\r\n                >\r\n                  Click To Login\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"close\">\r\n                  <IconButton\r\n                    onClick={closeLoginModal}\r\n                    style={\r\n                      {\r\n                        //   backgroundColor: \"#6244da\",\r\n                        //   marginRight: \"-45px\",\r\n                        //   marginTop: \"-35px\",\r\n                      }\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"header\" style={{ marginLeft: \"100px\" }}>\r\n                  <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                    CREATE ACCOUNT\r\n                  </strong>\r\n                </div>\r\n                <div className=\"login-form\" style={{ marginLeft: \"40px\" }}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.firstName}\r\n                    onChange={(e) => onFirstNameChange(e.target.value)}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"First Name\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.lastName}\r\n                    onChange={(e) => onLastNameChange(e.target.value)}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Last Name\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.email}\r\n                    onChange={(e) => onEmailChange(e.target.value)}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Email\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <MailOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.mobile}\r\n                    onChange={(e) => onMobileChange(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Mobile Number\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PhoneAndroidIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    size=\"small\"\r\n                    value={state.password}\r\n                    onChange={(e) => onPasswordChange(e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    type=\"password\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Password\"\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  {!state.requestSuccess ? <p>{state.errorMessage}</p> : null}\r\n                  <Button\r\n                    onClick={onSubmit}\r\n                    style={{\r\n                      backgroundColor: \"#6244da\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                      width: \"90%\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <span\r\n                    onClick={goBackToLogin}\r\n                    style={{\r\n                      marginLeft: \"40px\",\r\n                      color: \"#5d5e5e\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Go back/Sign In\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {/* end of form */}\r\n\r\n            {/* end of options */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ForgotPassword\\ForgotPassword.js",["417","418","419","420","421","422"],"import React, { useState } from \"react\";\r\nimport \"../Login/login.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport {\r\n  postForgotPasswordForm,\r\n  postPasswordUpdate,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport { showLoginFormMethod } from \"../../state-management/user/actions\";\r\nimport { hideForgotPasswordFormMethod } from \"../../state-management/user/actions\";\r\nimport { setSelectedCategoryId } from \"../../state-management/menu/actions\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setdata] = useState({\r\n    email: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n    submittingClass: \"\",\r\n    submitText: \"SUBMIT\",\r\n    errorMessage: false,\r\n    requestSucess: null,\r\n    successMessage: \"Please enter OTP send over your email!\",\r\n    showLoader: false,\r\n    isOtpRequested: false,\r\n    isPasswordUpdateSucess: false,\r\n  });\r\n\r\n  const onEmailChange = (value) => {\r\n    setdata({ ...data, email: value });\r\n  };\r\n\r\n  const onPasswordChange = (value) => {\r\n    setdata({ ...data, password: value });\r\n  };\r\n\r\n  const onOtpChange = (value) => {\r\n    setdata({ ...data, otp: value });\r\n  };\r\n\r\n  const onFormSubmit = async () => {\r\n    setdata({\r\n      ...data,\r\n      submitText: \"Please Wait...\",\r\n      submittingClass: \"submitting\",\r\n      errorMessage: false,\r\n      requestSucess: null,\r\n      showLoader: true,\r\n    });\r\n    const response = await dispatch(postForgotPasswordForm(data.email));\r\n    const { payload } = await response;\r\n\r\n    setdata({\r\n      ...data,\r\n      submitText: \"SUBMIT\",\r\n      submittingClass: \"\",\r\n      errorMessage: payload.message,\r\n      requestSucess: payload.success,\r\n      showLoader: false,\r\n      isOtpRequested: !!payload.success,\r\n    });\r\n  };\r\n\r\n  const onConfirmPasswordSubmit = async () => {\r\n    setdata({\r\n      ...data,\r\n      submitText: \"Please Wait...\",\r\n      submittingClass: \"submitting\",\r\n      errorMessage: false,\r\n      requestSucess: null,\r\n      showLoader: true,\r\n    });\r\n\r\n    const dataToSend = {\r\n      email: data.email,\r\n      password: data.password,\r\n      otp: data.otp,\r\n    };\r\n    console.log(dataToSend);\r\n\r\n    const response = await dispatch(postPasswordUpdate(dataToSend));\r\n\r\n    const { payload } = await response;\r\n\r\n    setdata({\r\n      ...data,\r\n      submitText: \"SUBMIT\",\r\n      submittingClass: \"\",\r\n      errorMessage: payload.message,\r\n      successMessage: payload.message,\r\n      requestSucess: payload.success,\r\n      showLoader: false,\r\n      isPasswordUpdateSucess: payload.success,\r\n    });\r\n  };\r\n\r\n  const closeLoginModal = () => {\r\n    dispatch(hideForgotPasswordFormMethod());\r\n  };\r\n\r\n  const goBackToLogin = () => {\r\n    dispatch(showLoginFormMethod());\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          {user.waitingOverlay ? (\r\n            <>\r\n              {/* <Loader /> */}\r\n              <WaitingOverlay />\r\n            </>\r\n          ) : null}\r\n\r\n          <div className=\"login-box\">\r\n            {data.isOtpRequested && !data.isPasswordUpdateSucess ? (\r\n              <>\r\n                <div className=\"close\">\r\n                  <IconButton\r\n                    onClick={closeLoginModal}\r\n                    style={\r\n                      {\r\n                        //   backgroundColor: \"#6244da\",\r\n                        //   marginRight: \"-45px\",\r\n                        //   marginTop: \"-35px\",\r\n                      }\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"header\" style={{ marginLeft: \"100px\" }}>\r\n                  <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                    Forgot Password\r\n                  </strong>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"login-form\"\r\n                  style={{ marginLeft: \"40px\", marginTop: \"50px\" }}\r\n                >\r\n                  <TextField\r\n                    value={data.email}\r\n                    name=\"email\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => onEmailChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <MailOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    disabled\r\n                  />\r\n\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"otp\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter OTP\"\r\n                    onChange={(e) => onOtpChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    //size=\"small\"\r\n                    name=\"password\"\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter New Password\"\r\n                    onChange={(e) => onPasswordChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Button\r\n                    onClick={onConfirmPasswordSubmit}\r\n                    style={{\r\n                      backgroundColor: \"#6244da\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                      width: \"90%\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <p>{data.errorMessage}</p>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {!data.isOtpRequested && !data.isPasswordUpdateSucess ? (\r\n              <>\r\n                <div className=\"close\">\r\n                  <IconButton\r\n                    onClick={closeLoginModal}\r\n                    style={\r\n                      {\r\n                        //   backgroundColor: \"#6244da\",\r\n                        //   marginRight: \"-45px\",\r\n                        //   marginTop: \"-35px\",\r\n                      }\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"header\" style={{ marginLeft: \"100px\" }}>\r\n                  <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                    Forgot Password\r\n                  </strong>\r\n                </div>\r\n                {/* end of header */}\r\n                <div\r\n                  className=\"login-form\"\r\n                  style={{ marginLeft: \"40px\", marginTop: \"100px\" }}\r\n                >\r\n                  <TextField\r\n                    //size=\"small\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    style={{ width: \"90%\" }}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => onEmailChange(e.target.value)}\r\n                    //label=\"TextField\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <MailOutlineIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Button\r\n                    onClick={onFormSubmit}\r\n                    style={{\r\n                      backgroundColor: \"#6244da\",\r\n                      padding: \"10px\",\r\n                      color: \"white\",\r\n                      width: \"90%\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <br />\r\n                  <br />\r\n                  <p>{data.errorMessage}</p>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            {data.isOtpRequested && data.isPasswordUpdateSucess ? (\r\n              <>\r\n                <img\r\n                  style={{ marginLeft: \"30%\" }}\r\n                  src=\"https://i.ibb.co/TmCnRTh/Tick-Mark-Dark-512.png\"\r\n                  height=\"200px\"\r\n                  width=\"150px\"\r\n                />\r\n                <h1 style={{ marginTop: \"5%\", marginLeft: \"35%\" }}>Great !</h1>\r\n                <br />\r\n                <p style={{ fontSize: \"15px\", marginLeft: \"25%\" }}>\r\n                  Your Password is Changed\r\n                </p>\r\n\r\n                <Button\r\n                  onClick={() => dispatch(showLoginFormMethod())}\r\n                  style={{\r\n                    marginLeft: \"25%\",\r\n                    marginTop: \"5%\",\r\n                    backgroundColor: \"#6244da\",\r\n                    padding: \"10px\",\r\n                    color: \"white\",\r\n                    width: \"50%\",\r\n                  }}\r\n                >\r\n                  Click To Login\r\n                </Button>\r\n              </>\r\n            ) : null}\r\n\r\n            {/* end of form */}\r\n            {/* <div style={{ marginTop: \"10px\" }}>\r\n              <span\r\n                onClick={goBackToLogin}\r\n                style={{\r\n                  marginLeft: \"40px\",\r\n                  color: \"#5d5e5e\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Go back/Sign In\r\n              </span>\r\n            </div> */}\r\n\r\n            {/* end of options */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ForgotPassword;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\state-management\\modal\\actions.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\MyProfile\\MyProfile.jsx",["423","424","425","426","427"],"import { Table } from \"reactstrap\";\r\n\r\nimport \"../../components/MyProfile/MyProfile.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  postMyProfileForm,\r\n  postProfile,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport { notification } from \"antd\";\r\nimport WaitingOverlay from \"../../components/WaitingOverlay/WaitingOverlay\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst MyProfile = () => {\r\n  const user = useSelector((state) => state.user.user);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    ...user,\r\n    btn: \"update\",\r\n    loader: false,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (user) {\r\n  //     setState({ ...user, btn: \"Update\" });\r\n  //   }\r\n  // }, [user]);\r\n\r\n  const handleFirstName = (val) => {\r\n    setState({ ...state, firstName: val });\r\n  };\r\n  const handleLastName = (val) => {\r\n    setState({ ...state, lastName: val });\r\n  };\r\n  const handleEmail = (val) => {\r\n    setState({ ...state, email: val });\r\n  };\r\n  const handleAddress = (val) => {\r\n    setState({ ...state, address: val });\r\n  };\r\n  const handleCity = (val) => {\r\n    setState({ ...state, city: val });\r\n  };\r\n  const handleState = (val) => {\r\n    setState({ ...state, state: val });\r\n  };\r\n  const handleCountry = (val) => {\r\n    setState({ ...state, country: val });\r\n  };\r\n  const handleZipcode = (val) => {\r\n    setState({ ...state, zipcode: val });\r\n  };\r\n  const handlePhoneNumber = (val) => {\r\n    setState({ ...state, mobile: val });\r\n  };\r\n\r\n  const postProfileChange = async () => {\r\n    console.log(\"cleint id\", user.clientId);\r\n\r\n    const response = await dispatch(postMyProfileForm(user.clientId));\r\n    const { payload } = await response;\r\n    console.log(\"usefferct\", payload);\r\n    if (payload.success) {\r\n      const data = payload.data;\r\n\r\n      setState({\r\n        ...state,\r\n        ...data,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    postProfileChange();\r\n  }, []);\r\n  const formSubmit = async () => {\r\n    setState({ ...state, btn: \"updating...\", loader: true });\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      mobile,\r\n      state: locationState,\r\n      country,\r\n      city,\r\n      zipcode,\r\n      phonecode,\r\n    } = state;\r\n\r\n    const userAgain = {\r\n      client_id: user.clientId,\r\n      firstname: firstName,\r\n      lastname: lastName,\r\n      address,\r\n      mobile,\r\n      state: locationState,\r\n      country,\r\n      city,\r\n      zipcode,\r\n      phonecode,\r\n    };\r\n\r\n    const response = dispatch(postProfile(userAgain, user.token));\r\n    const { payload } = await response;\r\n\r\n    notification.open({\r\n      message: payload.message,\r\n      style: {\r\n        marginTop: \"50px\",\r\n        color: \"rgba(0, 0, 0, 0.65)\",\r\n        border: \"1px solid #b7eb8f\",\r\n        backgroundColor: \"#f6ffed\",\r\n      },\r\n    });\r\n    setState({ ...state, btn: \"update\", loader: false });\r\n  };\r\n  return (\r\n    <>\r\n      {state.loader ? <WaitingOverlay /> : null}\r\n      {/* <AppHeader /> */}\r\n      {/* <section\r\n        className=\"parallax-window_myprofile \"\r\n        data-parallax=\"scroll\"\r\n        // data-image-src=\"https://cutt.ly/Kkb7BY9\"\r\n        style={{\r\n          background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n        data-natural-width={1400}\r\n        data-natural-height={470}\r\n      >\r\n        <div id=\"subheader_myprofile\">\r\n          <div id=\"sub_content\">\r\n            <h1>Update Profile</h1>\r\n          </div>\r\n        </div>\r\n      </section> */}\r\n      <div\r\n        className=\"col-lg-6\"\r\n        style={{ marginTop: \"20px\", marginLeft: \"25%\" }}\r\n      >\r\n        <div className=\"box_style_2\" id=\"main_menu\">\r\n          <div\r\n            style={{\r\n              height: \"auto\",\r\n              width: \"400px\",\r\n            }}\r\n          >\r\n            <div style={{ marginLeft: \"20%\" }}>\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"First Name\"\r\n                variant=\"outlined\"\r\n                value={state.firstName}\r\n                onChange={(e) => handleFirstName(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"Last Name\"\r\n                variant=\"outlined\"\r\n                value={state.lastName}\r\n                onChange={(e) => handleLastName(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\", backgroundColor: \"#f1f1f1\" }}\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                value={state.email}\r\n                disabled\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                value={state.address}\r\n                onChange={(e) => handleAddress(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"City\"\r\n                variant=\"outlined\"\r\n                value={state.city}\r\n                onChange={(e) => handleCity(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"State\"\r\n                variant=\"outlined\"\r\n                value={state.state}\r\n                onChange={(e) => handleState(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"Country\"\r\n                variant=\"outlined\"\r\n                value={state.country}\r\n                onChange={(e) => handleCountry(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"Zipcode\"\r\n                variant=\"outlined\"\r\n                value={state.zipcode}\r\n                onChange={(e) => handleZipcode(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                size=\"small\"\r\n                style={{ width: \"120%\" }}\r\n                label=\"Phone number\"\r\n                variant=\"outlined\"\r\n                value={state.mobile}\r\n                onChange={(e) => handlePhoneNumber(e.target.value)}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Button\r\n                onClick={formSubmit}\r\n                style={{\r\n                  backgroundColor: \"#6244da\",\r\n                  width: \"120%\",\r\n                  color: \"white\",\r\n                  padding: \"15px\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n              >\r\n                {state.btn}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* End box_style_1 */}\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n};\r\nexport default MyProfile;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\ManageAddress.jsx",["428","429","430","431","432","433"],"import Appheader from \"../AppHeader/AppHeader\";\r\nimport \"../ManageAddress/ManageAddress.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport { openModal } from \"../../state-management/modal/actions\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport {\r\n  fetchAddressesList,\r\n  fetchMyOrderList,\r\n  postAddAddress,\r\n  removeAddress,\r\n} from \"../../state-management/user/asyncActions\";\r\n\r\nimport Address from \"../ManageAddress/Address\";\r\n\r\nconst ManageAddress = () => {\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n\r\n  const modalNames = {\r\n    ADD_ADDRESS: \"AddAddress\",\r\n    CHOOSE_ADDRESS: \"ChooseAddress\",\r\n    FIND_ADDRESS: \"findAddress\",\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    addresses: [],\r\n  });\r\n  useEffect(() => {\r\n    dispatch(displayAddressModal(false));\r\n    fetchAddressList();\r\n  }, []);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchAddressList = async () => {\r\n    const { payload } = await dispatch(fetchAddressesList(user.user.clientId));\r\n\r\n    setState({ ...state, addresses: payload.data });\r\n  };\r\n\r\n  const handleAddDeliveryAddressSuccess = (editMode, address) => {\r\n    dispatch(\r\n      openModal(\r\n        modalNames.ADD_ADDRESS,\r\n        {\r\n          editMode,\r\n          address,\r\n          existingDefaultAddress: this.state.addresses.find(\r\n            (addr) => addr[\"is_default\"] === \"1\"\r\n          ),\r\n        },\r\n        fetchAddressList()\r\n      )\r\n    );\r\n  };\r\n\r\n  const callAddressModal = (editMode = false, address = {}) => {\r\n    if (!editMode) {\r\n      dispatch(displayAddressModal(true));\r\n      dispatch(\r\n        openModal(\r\n          modalNames.FIND_ADDRESS,\r\n          {\r\n            addAddress: true,\r\n            existingDefaultAddress:\r\n              state.addresses &&\r\n              state.addresses.find((addr) => addr[\"is_default\"] === \"1\"),\r\n          },\r\n          () => handleAddDeliveryAddressSuccess(editMode, address)\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        openModal(modalNames.ADD_ADDRESS, {\r\n          editMode,\r\n          address,\r\n          existingDefaultAddress: state.addresses.find(\r\n            (addr) => addr[\"is_default\"] === \"1\"\r\n          ),\r\n        })\r\n      );\r\n      fetchAddressList();\r\n    }\r\n  };\r\n\r\n  const handleRemove = (address) => {\r\n    dispatch(removeAddress({ id: address.id }));\r\n    fetchAddressList();\r\n  };\r\n\r\n  const handleSetDefault = async (address) => {\r\n    if (address[\"is_default\"] === \"1\") {\r\n      await dispatch(\r\n        postAddAddress(\r\n          {\r\n            ...address,\r\n            address12: address.address2,\r\n            is_default: \"0\",\r\n          },\r\n          true\r\n        )\r\n      );\r\n      fetchAddressList();\r\n    } else {\r\n      const existingDefaultAddress = state.addresses.find(\r\n        (addr) => addr[\"is_default\"] === \"1\"\r\n      );\r\n\r\n      if (existingDefaultAddress) {\r\n        await dispatch(\r\n          postAddAddress(\r\n            {\r\n              ...existingDefaultAddress,\r\n              address12: existingDefaultAddress.address2,\r\n              is_default: \"0\",\r\n            },\r\n            true\r\n          )\r\n        );\r\n      }\r\n      await dispatch(\r\n        postAddAddress(\r\n          {\r\n            ...address,\r\n            address12: address.address2, //TODO: get this fixed from api, which is broken at them moment\r\n            is_default: \"1\",\r\n          },\r\n          true\r\n        )\r\n      );\r\n      fetchAddressList();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"address-container\">\r\n        <main class=\"main-container\">\r\n          <section className=\"add-address\">\r\n            <h5>Add Address</h5>\r\n            <span\r\n              onClick={() => callAddressModal(false, {})}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <AddIcon />\r\n            </span>\r\n          </section>\r\n\r\n          {state.addresses.map((address, i) => {\r\n            console.log(\"add\", address);\r\n            return (\r\n              <>\r\n                <section\r\n                  className=\"address-section\"\r\n                  // key={i}\r\n                >\r\n                  <Address address={address} key={i} />\r\n                  <ul className=\"address-actions\">\r\n                    <li onClick={() => callAddressModal(true, address)}>\r\n                      <span>\r\n                        <h5 className=\"actions\">Edit</h5>\r\n                      </span>\r\n                    </li>\r\n                    <li onClick={() => handleRemove(address)}>\r\n                      <span>\r\n                        <h5 className=\"actions\">Remove</h5>\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      <span onClick={() => handleSetDefault(address)}>\r\n                        <h5\r\n                          className={`actions ${\r\n                            address[\"is_default\"] === \"1\" ? \"default\" : \"\"\r\n                          }`}\r\n                        >\r\n                          {address[\"is_default\"] === \"1\" ? (\r\n                            <span className=\"default-address\">Default</span>\r\n                          ) : (\r\n                            \"Set default\"\r\n                          )}\r\n                        </h5>\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </section>\r\n              </>\r\n            );\r\n          })}\r\n        </main>\r\n      </div>\r\n      {modal.modal.modalToShow == \"findAddress\" ? <ChooseAddress /> : null}\r\n      {modal.modal.modalToShow == \"AddAddress\" ? <AddAddress /> : null}\r\n    </>\r\n  );\r\n};\r\nexport default ManageAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\ChooseAddress.jsx",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448"],"import \"../../components/ChooseAddress/ChooseAddress.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"../../state-management/menu/actions\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { setDeliveryOption } from \"../../state-management/user/actions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import GooglePlacesAutocomplete, {\r\n//   geocodeByPlaceId,\r\n// } from \"react-google-places-autocomplete\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { setPhoneCode } from \"../../state-management/user/actions\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Menu } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GoogleMap from \"../../components/GoogleMap/GoogleMap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport AddAddress from \"./AddAddress\";\r\nGeocode.setApiKey(\"AIzaSyCMTj6FEwu3Kh0tSdgp6hh4QOKgIJF74rs\");\r\n\r\nconst ChooseAddress = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const user = useSelector((state) => state.user);\r\n  const menu = useSelector((state) => state.menu);\r\n  const [latlng, setlatlng] = useState();\r\n  const [addressdetail, setaddressdetail] = useState({\r\n    address: \"\",\r\n    addressLine1: \"\",\r\n\r\n    state: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n  });\r\n\r\n  const [customersnumber, setcustomersnumber] = useState({\r\n    address_1: \"\",\r\n  });\r\n  const [customeraddress1, setcustomeraddress1] = useState();\r\n  const [customerstate, setcustomerstate] = useState();\r\n  const [customercity, setcustomercity] = useState();\r\n  const [customercountry, setcustomercountry] = useState();\r\n  const [customerzipcode, setcustomerzipcode] = useState();\r\n  const [shownextaddresspage, setshownextaddresspage] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    selectedItem: null,\r\n    mapCentre: {\r\n      lat: main.selectedRestaurant.lat,\r\n      lng: main.selectedRestaurant.lon,\r\n    },\r\n    restaurantCordinate: {\r\n      //TODO: check with Sandip why it was necessary to add this on state when its just one time thing :/\r\n      lat: menu.restaurantInfo.lat,\r\n      lng: menu.restaurantInfo.lon,\r\n    },\r\n    customerCordinates: {\r\n      lat: \"\",\r\n      lng: \"\",\r\n    },\r\n    address: \"\",\r\n    addressLine1: \"\",\r\n    displayAutocomplete: true,\r\n    state: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    errorMessage: false,\r\n    distance: 0,\r\n    googleApi: \"\",\r\n  });\r\n  const phonecodetoCountryMaping = {\r\n    AF: \"+93\",\r\n    AL: \"+355\",\r\n    DZ: \"+213\",\r\n    AD: \"+376\",\r\n    AO: \"+244\",\r\n    AG: \"+1-268\",\r\n    AR: \"+54\",\r\n    AM: \"+374\",\r\n    AU: \"+61\",\r\n    AT: \"+43\",\r\n    AZ: \"+374-97\",\r\n    BS: \"+1-242\",\r\n    BH: \"+973\",\r\n    BD: \"+880\",\r\n    BB: \"+1-246\",\r\n    BY: \"+375\",\r\n    BE: \"+32\",\r\n    BZ: \"+501\",\r\n    BJ: \"+229\",\r\n    BT: \"+975\",\r\n    BO: \"+591\",\r\n    BA: \"+387\",\r\n    BW: \"+267\",\r\n    BR: \"+55\",\r\n    BN: \"+673\",\r\n    BG: \"+359\",\r\n    BF: \"+226\",\r\n    BI: \"+257\",\r\n    KH: \"+855\",\r\n    CM: \"+237\",\r\n    CA: \"+1\",\r\n    CV: \"+238\",\r\n    CF: \"+236\",\r\n    TD: \"+235\",\r\n    CL: \"+56\",\r\n    CN: \"+86\",\r\n    CO: \"+57\",\r\n    KM: \"+269\",\r\n    CD: \"+243\",\r\n    CG: \"+242\",\r\n    CR: \"+506\",\r\n    CI: \"+225\",\r\n    HR: \"+385\",\r\n    CU: \"+53\",\r\n    CY: \"+90-392\",\r\n    CZ: \"+420\",\r\n    DK: \"+45\",\r\n    DJ: \"+253\",\r\n    DM: \"+1-767\",\r\n    DO: \"+1-829\",\r\n    EC: \"+593\",\r\n    EG: \"+20\",\r\n    SV: \"+503\",\r\n    GQ: \"+240\",\r\n    ER: \"+291\",\r\n    EE: \"+372\",\r\n    ET: \"+251\",\r\n    FJ: \"+679\",\r\n    FI: \"+358\",\r\n    FR: \"+33\",\r\n    GA: \"+241\",\r\n    GM: \"+220\",\r\n    GE: \"+995\",\r\n    DE: \"+49\",\r\n    GH: \"+233\",\r\n    GR: \"+30\",\r\n    GD: \"+1-473\",\r\n    GT: \"+502\",\r\n    GN: \"+224\",\r\n    GW: \"+245\",\r\n    GY: \"+592\",\r\n    HT: \"+509\",\r\n    HN: \"+504\",\r\n    HU: \"+36\",\r\n    IS: \"+354\",\r\n    IN: \"+91\",\r\n    ID: \"+62\",\r\n    IR: \"+98\",\r\n    IQ: \"+964\",\r\n    IE: \"+353\",\r\n    IL: \"+972\",\r\n    IT: \"+39\",\r\n    JM: \"+1-876\",\r\n    JP: \"+81\",\r\n    JO: \"+962\",\r\n    KZ: \"+7\",\r\n    KE: \"+254\",\r\n    KI: \"+686\",\r\n    KP: \"+850\",\r\n    KR: \"+82\",\r\n    KW: \"+965\",\r\n    KG: \"+996\",\r\n    LA: \"+856\",\r\n    LV: \"+371\",\r\n    LB: \"+961\",\r\n    LS: \"+266\",\r\n    LR: \"+231\",\r\n    LY: \"+218\",\r\n    LI: \"+423\",\r\n    LT: \"+370\",\r\n    LU: \"+352\",\r\n    MK: \"+389\",\r\n    MG: \"+261\",\r\n    MW: \"+265\",\r\n    MY: \"+60\",\r\n    MV: \"+960\",\r\n    ML: \"+223\",\r\n    MT: \"+356\",\r\n    MH: \"+692\",\r\n    MR: \"+222\",\r\n    MU: \"+230\",\r\n    MX: \"+52\",\r\n    FM: \"+691\",\r\n    MD: \"+373-533\",\r\n    MC: \"+377\",\r\n    MN: \"+976\",\r\n    ME: \"+382\",\r\n    MA: \"+212\",\r\n    MZ: \"+258\",\r\n    MM: \"+95\",\r\n    NA: \"+264\",\r\n    NR: \"+674\",\r\n    NP: \"+977\",\r\n    NL: \"+31\",\r\n    NZ: \"+64\",\r\n    NI: \"+505\",\r\n    NE: \"+227\",\r\n    NG: \"+234\",\r\n    NO: \"+47\",\r\n    OM: \"+968\",\r\n    PK: \"+92\",\r\n    PW: \"+680\",\r\n    PA: \"+507\",\r\n    PG: \"+675\",\r\n    PY: \"+595\",\r\n    PE: \"+51\",\r\n    PH: \"+63\",\r\n    PL: \"+48\",\r\n    PT: \"+351\",\r\n    QA: \"+974\",\r\n    RO: \"+40\",\r\n    RU: \"+7\",\r\n    RW: \"+250\",\r\n    KN: \"+1-869\",\r\n    LC: \"+1-758\",\r\n    VC: \"+1-784\",\r\n    WS: \"+685\",\r\n    SM: \"+378\",\r\n    ST: \"+239\",\r\n    SA: \"+966\",\r\n    SN: \"+221\",\r\n    RS: \"+381\",\r\n    SC: \"+248\",\r\n    SL: \"+232\",\r\n    SG: \"+65\",\r\n    SK: \"+421\",\r\n    SI: \"+386\",\r\n    SB: \"+677\",\r\n    SO: \"+252\",\r\n    ZA: \"+27\",\r\n    ES: \"+34\",\r\n    LK: \"+94\",\r\n    SD: \"+249\",\r\n    SR: \"+597\",\r\n    SZ: \"+268\",\r\n    SE: \"+46\",\r\n    CH: \"+41\",\r\n    SY: \"+963\",\r\n    TJ: \"+992\",\r\n    TZ: \"+255\",\r\n    TH: \"+66\",\r\n    TL: \"+670\",\r\n    TG: \"+228\",\r\n    TO: \"+676\",\r\n    TT: \"+1-868\",\r\n    TN: \"+216\",\r\n    TR: \"+90\",\r\n    TM: \"+993\",\r\n    TV: \"+688\",\r\n    UG: \"+256\",\r\n    UA: \"+380\",\r\n    AE: \"+971\",\r\n    GB: \"+44\",\r\n    US: \"+1\",\r\n    UY: \"+598\",\r\n    UZ: \"+998\",\r\n    VU: \"+678\",\r\n    VA: \"+379\",\r\n    VE: \"+58\",\r\n    VN: \"+84\",\r\n    YE: \"+967\",\r\n    ZM: \"+260\",\r\n    ZW: \"+263\",\r\n    TW: \"+886\",\r\n    CX: \"+61\",\r\n    CC: \"+61\",\r\n    NF: \"+672\",\r\n    NC: \"+687\",\r\n    PF: \"+689\",\r\n    YT: \"+262\",\r\n    GP: \"+590\",\r\n    PM: \"+508\",\r\n    WF: \"+681\",\r\n    CK: \"+682\",\r\n    NU: \"+683\",\r\n    TK: \"+690\",\r\n    GG: \"+44\",\r\n    IM: \"+44\",\r\n    JE: \"+44\",\r\n    AI: \"+1-264\",\r\n    BM: \"+1-441\",\r\n    IO: \"+246\",\r\n    VG: \"+1-284\",\r\n    KY: \"+1-345\",\r\n    FK: \"+500\",\r\n    GI: \"+350\",\r\n    MS: \"+1-664\",\r\n    SH: \"+290\",\r\n    TC: \"+1-649\",\r\n    MP: \"+1-670\",\r\n    PR: \"+1-787\",\r\n    AS: \"+1-684\",\r\n    GU: \"+1-671\",\r\n    VI: \"+1-340\",\r\n    HK: \"+852\",\r\n    MO: \"+853\",\r\n    FO: \"+298\",\r\n    GL: \"+299\",\r\n    GF: \"+594\",\r\n    MQ: \"+596\",\r\n    RE: \"+262\",\r\n    AX: \"+358-18\",\r\n    AW: \"+297\",\r\n    AN: \"+599\",\r\n    SJ: \"+47\",\r\n    AC: \"+247\",\r\n    TA: \"+290\",\r\n    CS: \"+381\",\r\n    PS: \"+970\",\r\n    EH: \"+212\",\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const closeLoginModal = () => {\r\n    // dispatch(displayAddressModal(false));\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  // const handleSelect = async (props) => {\r\n  //   alert(\"yo\");\r\n  //   const result = await geocodeByPlaceId(props[\"place_id\"]);\r\n  //   console.log(\"select\", result);\r\n  //   const lat = result[0].geometry.location.lat();\r\n  //   const lng = result[0].geometry.location.lng();\r\n\r\n  //   console.log(\"resultr\", result);\r\n\r\n  //   const cordinates = {\r\n  //     lat,\r\n  //     lng,\r\n  //   };\r\n\r\n  //   setState({ ...state, lat, lng }, () => {\r\n  //     handleMarkerPostionChange(cordinates);\r\n  //     //state.googleApi.setMarkerPosition(cordinates);\r\n  //   });\r\n  // };\r\n\r\n  const handleGoogleApi = (google) => {\r\n    if (!state.googleApi) setState({ ...state, googleApi: google });\r\n\r\n    console.log(\"api\", google);\r\n  };\r\n\r\n  const handleMarkerPostionChange = async (position) => {\r\n    if (position) {\r\n      const { lat, lng } = position;\r\n      console.log(\"position is\", position);\r\n\r\n      setlatlng(position);\r\n\r\n      setState({\r\n        ...state,\r\n        errorMessage: false,\r\n        mapCentre: {\r\n          lat,\r\n          lng,\r\n        },\r\n      });\r\n\r\n      const response = await Geocode.fromLatLng(lat, lng);\r\n\r\n      console.log(\"response \", response);\r\n\r\n      const address = response.results[0].formatted_address;\r\n\r\n      console.log(\"address \", address);\r\n\r\n      // get the distance b/w user and restaurant\r\n      // and check if it's in the range of delivery\r\n\r\n      // setState({ ...state, address });\r\n      //setaddressdetail({ ...addressdetail, address });\r\n      // get address, city, state, country, zipcode.\r\n      const addressComponents = response.results[0].address_components;\r\n\r\n      console.log(\"addressComponents\", addressComponents);\r\n\r\n      for (let i = 0; i < addressComponents.length; i++) {\r\n        switch (addressComponents[i].types[0]) {\r\n          case \"street_number\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   addressLine1: addressComponents[i].long_name,\r\n            // });\r\n            setcustomersnumber({ address_1: addressComponents[i].long_name });\r\n\r\n            break;\r\n          }\r\n          case \"route\": {\r\n            // setaddressdetail((prevState) => ({\r\n            //   ...addressdetail,\r\n            //   addressLine1:\r\n            //     addressComponents[i].long_name + \" \" + prevState.addressLine1,\r\n            // }));\r\n\r\n            setcustomersnumber((prevState) => ({\r\n              address_1:\r\n                addressComponents[i].long_name + \" \" + prevState.address_1,\r\n            }));\r\n            break;\r\n          }\r\n          case \"locality\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   city: addressComponents[i].long_name,\r\n            // });\r\n\r\n            setcustomercity(addressComponents[i].long_name);\r\n\r\n            break;\r\n          }\r\n          case \"state\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   state: addressComponents[i].long_name,\r\n            // });\r\n            setcustomerstate(addressComponents[i].long_name);\r\n\r\n            break;\r\n          }\r\n          case \"country\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   country: addressComponents[i].long_name,\r\n            // });\r\n\r\n            setcustomercountry(addressComponents[i].long_name);\r\n            // let countryShortName = addressComponents[i].short_name;\r\n            // console.log(phonecodetoCountryMaping[countryShortName]);\r\n            // props.setPhoneCode(phonecodetoCountryMaping[countryShortName]);\r\n\r\n            break;\r\n          }\r\n          case \"postal_code\": {\r\n            // setaddressdetail({\r\n            //   ...addressdetail,\r\n            //   zipcode: addressComponents[i].long_name,\r\n            // });\r\n            setcustomerzipcode(addressComponents[i].long_name);\r\n            break;\r\n          }\r\n\r\n          // default: {\r\n          //   const addr = `${this.state.addressLine1} , ${addressComponents[i].long_name}`.replace(/[\\s,]+/, ' ').trim();\r\n          //   console.log(this.state.addressLine1);\r\n          //   const finalAddr = addr.split(' , ').reduce((acc, str) => {\r\n          //     if (!acc.includes(str) && str.trim().length) {\r\n          //       return [\r\n          //         acc,\r\n          //         str,\r\n          //       ].join(', ');\r\n          //     }\r\n\r\n          //     return acc;\r\n          //   }, '').split(', ').filter((val) => val.trim().length).join(', ');\r\n\r\n          //   this.setState({ addressLine1: finalAddr });\r\n          //   break;\r\n          // }\r\n        }\r\n      }\r\n\r\n      // addressComponents.forEach((element, i) => {\r\n      //   console.log(\"element is\", element.types);\r\n\r\n      // });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customersnumber);\r\n  }, [customersnumber]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"complete state is\", customeraddress1);\r\n  // }, [customeraddress1]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customercity);\r\n  }, [customercity]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customerstate);\r\n  }, [customerstate]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customerzipcode);\r\n  }, [customerzipcode]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", customercountry);\r\n  }, [customercountry]);\r\n\r\n  const handleDistanceCalucationCallback = (result) => {\r\n    console.log(\"distance\", result);\r\n\r\n    if (result.status === \"SUCCESS\") {\r\n      // check if distance is inside restaurant deilvery range\r\n      const distance = parseFloat(result.distance / 1000);\r\n      console.log(distance);\r\n      if (!isDistanceInDeliveryRange(distance, main.deliveryRange)) {\r\n        setState({\r\n          ...state,\r\n          errorMessage:\r\n            \"Sorry, We do not provide delivery on selected address.\",\r\n        });\r\n      } else if (distance) {\r\n        setState({ ...state, errorMessage: false });\r\n        dispatch(\r\n          setDeliveryOption({\r\n            distance,\r\n            userAddress: {\r\n              address1: customersnumber.address_1,\r\n              state: customerstate,\r\n              city: customercity,\r\n              country: customercountry,\r\n              zipcode: customerzipcode,\r\n            },\r\n            option: \"Delivery\",\r\n          })\r\n        );\r\n        setshownextaddresspage(true);\r\n        // this.props.successCallback && this.props.successCallback();\r\n        // !this.props.modalState.addAddress && this.props.setIsTakeAway(false);\r\n        //dispatch(closeModal());\r\n        // this.props.isUserLoggedIn &&\r\n        //   this.props.openModal(modalNames.ADD_ADDRESS, {\r\n        //     selectAddress: true,\r\n        //     existingDefaultAddress:\r\n        //       this.props.modalState.existingDefaultAddress,\r\n        //     editMode: false,\r\n        //   });\r\n      }\r\n    } else {\r\n      setState({ ...state, errorMessage: result.reason });\r\n    }\r\n  };\r\n\r\n  const isDistanceInDeliveryRange = (distance, { range }) => {\r\n    let maxDistance = 0;\r\n\r\n    for (const dist in range) {\r\n      const newDistance = parseFloat(range[dist].range_to);\r\n\r\n      if (newDistance > maxDistance) {\r\n        maxDistance = newDistance;\r\n      }\r\n    }\r\n\r\n    if (distance <= maxDistance) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleDelivery = () => {\r\n    console.log(\"check api\", state.googleApi);\r\n    setState({\r\n      state,\r\n      addressLine1: customersnumber.address_1,\r\n      city: customercity,\r\n      zipcode: customerzipcode,\r\n      country: customercountry,\r\n    });\r\n\r\n    state.googleApi.calculateDistance(\r\n      state.restaurantCordinate,\r\n      latlng,\r\n      handleDistanceCalucationCallback\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"complete state is\", state);\r\n  }, [state]);\r\n\r\n  // const handleChange = (address) => {\r\n  //   setState({ ...state, address });\r\n  // };\r\n\r\n  // const handleSelect = (address) => {\r\n  //   geocodeByAddress(address)\r\n  //     .then((results) => getLatLng(results[0]))\r\n  //     .then((latLng) => {\r\n  //       setState({ ...state, address });\r\n  //       setState({ ...state, mapCentre: latLng });\r\n  //       handleMarkerPostionChange(state.mapCentre);\r\n  //       console.log(\"Success\", latLng);\r\n  //       console.log(\"state is\", state);\r\n  //     })\r\n  //     .catch((error) => console.error(\"Error\", error));\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          <div className=\"choose-address-box\" style={{ height: \"auto\" }}>\r\n            <div className=\"close\">\r\n              <IconButton\r\n                onClick={closeLoginModal}\r\n                style={\r\n                  {\r\n                    //   backgroundColor: \"#6244da\",\r\n                    //   marginRight: \"-45px\",\r\n                    //   marginTop: \"-35px\",\r\n                  }\r\n                }\r\n              >\r\n                {\" \"}\r\n                <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"header\" style={{ marginLeft: \"24%\" }}>\r\n              <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                SELECT DELIVERY AREA\r\n              </strong>\r\n            </div>\r\n            <div className=\"content\">\r\n              {/* start */}\r\n\r\n              {/* <PlacesAutocomplete\r\n                value={state.address}\r\n                onChange={handleChange}\r\n                onSelect={handleSelect}\r\n              >\r\n                {({\r\n                  getInputProps,\r\n                  suggestions,\r\n                  getSuggestionItemProps,\r\n                  loading,\r\n                }) => (\r\n                  <div>\r\n                    <input\r\n                      {...getInputProps({\r\n                        placeholder: \"Search Places ...\",\r\n                        className: \"location-search-input\",\r\n                      })}\r\n                    />\r\n                    <div className=\"autocomplete-dropdown-container\">\r\n                      {loading && <div>Loading...</div>}\r\n                      {suggestions.map((suggestion) => {\r\n                        const className = suggestion.active\r\n                          ? \"suggestion-item--active\"\r\n                          : \"suggestion-item\";\r\n                        // inline style for demonstration purpose\r\n                        const style = suggestion.active\r\n                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                        return (\r\n                          <div\r\n                            {...getSuggestionItemProps(suggestion, {\r\n                              className,\r\n                              style,\r\n                            })}\r\n                          >\r\n                            <span>{suggestion.description}</span>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </PlacesAutocomplete> */}\r\n\r\n              {/* end */}\r\n              {/* <GooglePlacesAutocomplete\r\n                //defaultValue={state.address}\r\n                selectProps={{ onChange: handleSelect }}\r\n                // apiKey={process.env.REACT_APP_GOOGLE_API_KEY}\r\n              /> */}\r\n              {/* <PlacesAutocomplete\r\n                value={state.address}\r\n                //onChange={this.handleChange}\r\n                onSelect={handleSelect}\r\n              >\r\n                {renderFunc}\r\n              </PlacesAutocomplete> */}\r\n\r\n              <GoogleMap\r\n                lat={state.mapCentre ? state.mapCentre.lat : null}\r\n                lng={state.mapCentre ? state.mapCentre.lng : null}\r\n                address={state.address || main.selectedRestaurant.address}\r\n                onMarkerPositionChange={handleMarkerPostionChange}\r\n                googleApi={handleGoogleApi}\r\n              />\r\n\r\n              <Button\r\n                onClick={handleDelivery}\r\n                style={{\r\n                  marginTop: \"50px\",\r\n                  marginLeft: \"25%\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                  paddingLeft: \"80px\",\r\n                  paddingRight: \"80px\",\r\n                }}\r\n              >\r\n                Delivery\r\n              </Button>\r\n              {state.errorMessage ? (\r\n                <>\r\n                  <div style={{ marginTop: \"10px\" }}>\r\n                    <p\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"red\",\r\n                        fontSize: \"20px\",\r\n                      }}\r\n                    >\r\n                      {state.errorMessage}\r\n                    </p>\r\n                  </div>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {shownextaddresspage ? (\r\n        <>\r\n          <AddAddress refetchAddresses={props.refetchAddresses} />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default ChooseAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\GoogleMap\\GoogleMap.jsx",["449","450","451"],"import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport \"../../components/GoogleMap/GoogleMap.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nconst GoogleMap = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    lat: props.lat,\r\n    lng: props.lng,\r\n\r\n    mapCentre: {\r\n      lat: main.selectedRestaurant.lat,\r\n      lng: main.selectedRestaurant.lon,\r\n    },\r\n  });\r\n\r\n  const { google, lat, lng, name, address } = props;\r\n  const mapStyles = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"propsuseeffecr\", props.googleApi);\r\n    if (props.googleApi) {\r\n      props.googleApi({\r\n        googleApi: props.google,\r\n        setMarkerPosition: setMarkerPosition,\r\n        //calculateDistance: this.calculateDistance,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleMapClick = (ref, map, ev) => {\r\n    setState({ ...state, lat: ev.latLng.lat(), lng: ev.latLng.lng() });\r\n    console.log(\"state is\", state);\r\n\r\n    const newLatLng = {\r\n      lat: state.lat,\r\n      lng: state.lng,\r\n    };\r\n    console.log(\"newe\", newLatLng);\r\n\r\n    setMarkerPosition(newLatLng);\r\n  };\r\n\r\n  const setMarkerPosition = (cordinates) => {\r\n    console.log(\"cordinate\", cordinates);\r\n    setState({\r\n      ...state,\r\n      mapCentre: { lat: cordinates.lat, lng: cordinates.lng },\r\n    });\r\n    console.log(\"setmarker stata\", state);\r\n\r\n    props.onMarkerPositionChange && props.onMarkerPositionChange(cordinates);\r\n  };\r\n\r\n  const calculateDistance = (origin, destination, callback) => {\r\n    const service = new props.google.maps.DistanceMatrixService();\r\n\r\n    const originCord = `${origin.lat},${origin.lng}`;\r\n\r\n    const destinationCord = `${destination.lat},${destination.lng}`;\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [originCord],\r\n        destinations: [destinationCord],\r\n        travelMode: props.google.maps.TravelMode.DRIVING,\r\n        durationInTraffic: true,\r\n        avoidHighways: false,\r\n        unitSystem: props.google.maps.UnitSystem.METRIC,\r\n        avoidTolls: false,\r\n      },\r\n      (response) => {\r\n        let reason;\r\n\r\n        let distance;\r\n\r\n        let status;\r\n\r\n        if (\r\n          response.rows[0].elements[0].distance === undefined &&\r\n          response.destinationAddresses[0] === \"0,0\"\r\n        ) {\r\n          // user has to choose some correct address\r\n          reason = \"Please choose an address\";\r\n          status = \"FAILED\";\r\n        } else if (\r\n          response.rows[0].elements[0].status !== undefined &&\r\n          response.rows[0].elements[0].status === \"ZERO_RESULTS\"\r\n        ) {\r\n          reason = \"Sorry, Chosen address is out of delivery range!\";\r\n          status = \"FAILED\";\r\n        } else {\r\n          status = \"SUCCESS\";\r\n          distance = response.rows[0].elements[0].distance.value;\r\n        }\r\n\r\n        callback({\r\n          distance,\r\n          status,\r\n          reason,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleDragEnd = ({ latLng }) => {\r\n    console.log(\"drag\", latLng);\r\n    const cordinates = {\r\n      lat: latLng.lat(),\r\n      lng: latLng.lng(),\r\n    };\r\n    console.log(\"drag\", cordinates);\r\n    //setState({ lat: cordinates.lat, lng: cordinates.lng });\r\n\r\n    setMarkerPosition(cordinates);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (state.showingInfoWindow) {\r\n      setState({ ...state, showingInfoWindow: false, activeMarker: null });\r\n    }\r\n  };\r\n\r\n  const handleMarkerClick = (props, marker) => {\r\n    setState({\r\n      ...state,\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n    console.log(\"markerclick\", state);\r\n  };\r\n\r\n  const handleChange = (address) => {\r\n    setState({ ...state, address });\r\n  };\r\n\r\n  const handleSelect = (address) => {\r\n    geocodeByAddress(address)\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) => {\r\n        setState({ ...state, address });\r\n        setState({ ...state, mapCentre: latLng });\r\n        setMarkerPosition(latLng);\r\n        console.log(\"Success\", latLng);\r\n        console.log(\"state is\", state);\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.googleApi) {\r\n      props.googleApi({\r\n        googleApi: props.google,\r\n        setMarkerPosition: setMarkerPosition,\r\n        calculateDistance: calculateDistance,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"google-map-container\">\r\n      <PlacesAutocomplete\r\n        value={state.address}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <input\r\n              style={{ width: \"100%\", height: \"40px\" }}\r\n              {...getInputProps({\r\n                placeholder: \"Search Places ...\",\r\n                className: \"location-search-input\",\r\n              })}\r\n            />\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <div>Loading...</div>}\r\n              {suggestions.map((suggestion) => {\r\n                const className = suggestion.active\r\n                  ? \"suggestion-item--active\"\r\n                  : \"suggestion-item\";\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                return (\r\n                  <div\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style,\r\n                    })}\r\n                  >\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n\r\n      <Map\r\n        google={google}\r\n        zoom={15}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n          lat: Number(lat),\r\n          lng: Number(lng),\r\n        }}\r\n        center={{\r\n          lat: state.mapCentre.lat,\r\n          lng: state.mapCentre.lng,\r\n        }}\r\n        onClick={handleMapClick}\r\n      >\r\n        <Marker\r\n          draggable={true}\r\n          onDragend={(t, map, coord) => handleDragEnd(coord)}\r\n          onClick={handleMarkerClick}\r\n          position={{\r\n            lat: state.mapCentre.lat,\r\n            lng: state.mapCentre.lng,\r\n          }}\r\n        />\r\n        <InfoWindow\r\n          marker={state.activeMarker}\r\n          visible={state.showingInfoWindow}\r\n          onClose={handleClose}\r\n        >\r\n          <div className=\"address-info\">\r\n            <h3>{name || \"\"}</h3>\r\n            <h4>{address || \"\"}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\nexport default GoogleApiWrapper({\r\n  // libraries: [\"places\"],\r\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n})(GoogleMap);\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Loader\\Loader.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\Checkout.jsx",["452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470"],"import Appheader from \"../AppHeader/AppHeader\";\r\nimport \"../Checkout/Checkout.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\nimport moment from \"moment\";\r\nimport {\r\n  setDeliveryCost,\r\n  setIsTakeAway,\r\n  setPickupTime,\r\n} from \"../../state-management/user/actions\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport { addItem, removeItem } from \"../../state-management/menu/actions\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { getFormattedRequestPayload } from \"../Checkout/utils\";\r\nimport PaymentForm from \"../Checkout/PaymentForm\";\r\nimport { placeOrder } from \"../../state-management/menu/asyncActions\";\r\nimport axios from \"axios\";\r\nimport sha256 from \"js-sha256\";\r\nimport { CompassCalibrationOutlined } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getTaxes } from \"../../state-management/menu/operations\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst Checkout = () => {\r\n  //const format = \"HH:mm\";\r\n  const History = useHistory();\r\n  const [dc, setdc] = useState();\r\n  useEffect(() => {\r\n    console.log(\"dc is\", dc);\r\n  }, [dc]);\r\n\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const DELIVERY_TYPE = {\r\n    DEFAULT: \"Delivery\",\r\n    TAKE_AWAY: \"PickUp\",\r\n    HOME_DELIVERY: \"Delivery\",\r\n    EAT_IN: \"EatIn\",\r\n  };\r\n  const [data, setdata] = useState({\r\n    // displayloader: false,\r\n    deliveryType: user.isTakeAway\r\n      ? DELIVERY_TYPE.TAKE_AWAY\r\n      : DELIVERY_TYPE.HOME_DELIVERY,\r\n    //selectedAddress: user.distance >= 0 ? user.selectedAddress : null,\r\n\r\n    isAddressesFetched: false,\r\n    paymentMethod: \"\",\r\n    // I wonder why we need these 3 states - this needs a lot of refactoring\r\n    openingBusinesHours: main.opening,\r\n    closingBusinesHours: main.closing,\r\n    businessHours: main.businessHour,\r\n    isTakeAway: user.isTakeAway,\r\n    orderButtonClicked: false,\r\n    // addresses: [],\r\n    paymentOptions: [],\r\n    deliveryCharges: \"\",\r\n    hasDeliveryOption: false,\r\n    hasEatInOption: false,\r\n    hasPickupOption: false,\r\n    pickupTime:\r\n      moment().add(30, \"minutes\").format(\"HH:mm\") >= main.opening &&\r\n      moment().add(30, \"minutes\").format(\"HH:mm\") <= main.closing\r\n        ? moment().add(30, \"minutes\")\r\n        : moment(main.opening, \"HH:mm\"),\r\n  });\r\n  const [show, setshow] = useState(false);\r\n  let isDecimalAmount = false;\r\n  const [state, setState] = useState({\r\n    showAddress: false,\r\n    deliveryType: \"\",\r\n  });\r\n\r\n  const truncateDecimal = (number) => {\r\n    return Number.isInteger(Number(number))\r\n      ? Number(number)\r\n      : Number(number).toFixed(2);\r\n  };\r\n  const grandTotal = Number(getGrandTotal());\r\n\r\n  useEffect(() => {\r\n    if (main.deliveryRange) getDeliveryCharges();\r\n    dispatch(setPickupTime(data.pickupTime));\r\n    getDeliveryCharges();\r\n    setdc(getDeliveryCharges);\r\n    console.log(\"xyz\", data.pickupTime);\r\n\r\n    const deliveryOptions = !(\r\n      main.selectedRestaurant.order_option === \"\" ||\r\n      main.selectedRestaurant.order_option === null ||\r\n      main.selectedRestaurant.order_option === undefined\r\n    );\r\n\r\n    data.hasDeliveryOption = main.selectedRestaurant.order_option\r\n      .split(\",\")\r\n      .includes(\"delivery\");\r\n    data.hasEatInOption = main.selectedRestaurant.order_option\r\n      .split(\",\")\r\n      .includes(\"eatin\");\r\n    data.hasPickupOption = main.selectedRestaurant.order_option\r\n      .split(\",\")\r\n      .includes(\"pickup\");\r\n\r\n    data.paymentOptions = main.selectedRestaurant.payment_option_ids.split(\",\");\r\n\r\n    setdata({\r\n      ...data,\r\n    });\r\n    console.log(\"dtaa is\", data);\r\n  }, []);\r\n\r\n  const isPriceWithoutTax = () => {\r\n    console.log(\r\n      \"price without tax\",\r\n      menu.restaurantInfo[\"price_without_tax_flag\"]\r\n    );\r\n    return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\r\n  };\r\n\r\n  const getItemPrice = (item, isStillActive) => {\r\n    if (item.happyHourItem && isStillActive) {\r\n      if (item.similarItems && item.similarItems.length > 0) {\r\n        let totalPrice = 0;\r\n\r\n        for (let i = 0; i < item.similarItems.length; i++) {\r\n          totalPrice += this.isPriceWithoutTax()\r\n            ? item.similarItems[i].happyHourItem.subTotal\r\n            : item.similarItems[i].happyHourItem.grandTotal;\r\n        }\r\n\r\n        return Number(totalPrice).toFixed(2);\r\n      } else {\r\n        console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\r\n        console.log(\"grand\", Number(item.happyHourItem.grandTotal).toFixed(2));\r\n        return this.isPriceWithoutTax()\r\n          ? Number(item.happyHourItem.subTotal).toFixed(2)\r\n          : Number(item.happyHourItem.grandTotal).toFixed(2);\r\n      }\r\n    } else if (item.subTotal && item.grandTotal) {\r\n      if (item.similarItems && item.similarItems.length > 0) {\r\n        let totalPrice = 0;\r\n\r\n        for (let i = 0; i < item.similarItems.length; i++) {\r\n          totalPrice += isPriceWithoutTax()\r\n            ? item.similarItems[i].subTotal || item.similarItems[i].price\r\n            : item.similarItems[i].grandTotal ||\r\n              getActualPrice(item.similarItems[i]);\r\n        }\r\n\r\n        return Number(totalPrice).toFixed(2);\r\n      } else {\r\n        console.log(\r\n          \"log\",\r\n          isPriceWithoutTax()\r\n            ? item.subTotal || item.price\r\n            : item.grandTotal || this.getActualPrice(item)\r\n        );\r\n        return isPriceWithoutTax()\r\n          ? item.subTotal || item.price\r\n          : item.grandTotal || this.getActualPrice(item);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getActualPrice = (item) => {\r\n    if (menu.restaurantInfo) {\r\n      // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\r\n      return isPriceWithoutTax()\r\n        ? item.price\r\n        : (\r\n            Number(item.price) +\r\n            Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\r\n          ).toFixed(2);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  function getSubTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            console.log(\"item acc is\", item);\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.subTotal\r\n                  ? Number(item.happyHourItem.subTotal)\r\n                  : Number(item.qty) * Number(item.price))\r\n              );\r\n            }\r\n\r\n            return (\r\n              acc + item.qty * Number(item.price)\r\n              //(item.subTotal ? item.subTotal : item.qty * Number(item.price))\r\n            );\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getSubTaxTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                (item.happyHourItem.tax\r\n                  ? item.happyHourItem.tax\r\n                  : item.tax || 0)\r\n              );\r\n            }\r\n\r\n            return acc + Number(item.tax || 0);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  function getGrandTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n\r\n  // const deliveryCharges = 0;\r\n  const getBillAmount = () => {\r\n    const finalAmount = (\r\n      Number(user.delivery_cost) + Number(getGrandTotal())\r\n    ).toFixed(2);\r\n    const showAmountInDecimal =\r\n      Number(menu.restaurantInfo[\"show_prices_in_decimal_flag\"]) === 1;\r\n\r\n    if (showAmountInDecimal) {\r\n      isDecimalAmount = true;\r\n    } else {\r\n      isDecimalAmount = finalAmount % 1 === 0;\r\n    }\r\n\r\n    return !showAmountInDecimal && finalAmount % 1 !== 0\r\n      ? finalAmount\r\n      : finalAmount;\r\n  };\r\n\r\n  const getDeliveryCharges = () => {\r\n    console.log(\"we are in getd\");\r\n    if (!main.deliveryRange) return;\r\n    const cost = main.deliveryRange.cost;\r\n    const range = main.deliveryRange.range;\r\n    const isTakeAway = user.isTakeAway;\r\n    const distance = user.distance;\r\n\r\n    const freeDeliveryRangeAmount = cost[\"free_delivery_eligible_amount\"];\r\n    const stdDeliveryCost = cost[\"std_delivery_cost\"] || 0;\r\n    console.log(\r\n      \"check delivery\",\r\n      parseInt(cost[\"free_delivery_eligible_amount\"]) === 0,\r\n      parseInt(cost[\"std_delivery_cost\"]) === 0,\r\n      grandTotal\r\n    );\r\n\r\n    const isFreeDelivery =\r\n      grandTotal >= Number(cost[\"free_delivery_eligible_amount\"]) &&\r\n      parseInt(freeDeliveryRangeAmount) !== 0;\r\n\r\n    if (isFreeDelivery || isTakeAway) {\r\n      dispatch(setDeliveryCost(0));\r\n      return 0;\r\n    }\r\n    //\r\n\r\n    if (distance === -1 || !range) {\r\n      console.log(\"std delivery cost\", stdDeliveryCost);\r\n      console.log(\"std delivery cost\", Number(stdDeliveryCost));\r\n      if (stdDeliveryCost) {\r\n        dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n      }\r\n      return Number(stdDeliveryCost);\r\n    }\r\n\r\n    if (range) {\r\n      const selectedRange = range.find((rng) => {\r\n        const from = Number(rng[\"range_from\"]);\r\n        const to = Number(rng[\"range_to\"]);\r\n\r\n        return distance >= from && distance <= to;\r\n      });\r\n\r\n      // selectedRange\r\n      //   ?( Number(selectedRange[\"delivery_cost\"]) || 0)\r\n      //   : Number(stdDeliveryCost);\r\n\r\n      if (selectedRange) {\r\n        if (selectedRange[\"delivery_cost\"]) {\r\n          dispatch(setDeliveryCost(selectedRange[\"delivery_cost\"]));\r\n          console.log(\"range\", selectedRange[\"delivery_cost\"]);\r\n        } else {\r\n          dispatch(setDeliveryCost(0));\r\n        }\r\n      } else {\r\n        dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n      }\r\n      return selectedRange\r\n        ? Number(selectedRange[\"delivery_cost\"] || 0)\r\n        : Number(stdDeliveryCost);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const handleAddItem = (item) => {\r\n    dispatch(\r\n      addItem(item, item.modifiers || 0, item.subTotal, menu.restaurantInfo)\r\n    );\r\n  };\r\n\r\n  const handleRemoveItem = (item) => {\r\n    dispatch(removeItem(item, item.modifiers || null, 0, menu.restaurantInfo));\r\n  };\r\n\r\n  const sendpaymentreq = (type, orderId) => {\r\n    var errorurl = `http://ciboapp.me/feedmii/?/${menu.restaurantInfo.restaurant_id}/paymentfailed`;\r\n    var failedurl = `http://ciboapp.me/feedmii/?/${menu.restaurantInfo.restaurant_id}/paymentfailed`;\r\n    var accepturl = `http://ciboapp.me/feedmii/?/${menu.restaurantInfo.restaurant_id}/ordersuccess`;\r\n    var mkey = menu.restaurantInfo.merchant_key;\r\n    var sec = menu.restaurantInfo.secret;\r\n    var userid = \"123\";\r\n\r\n    let str = `${getBillAmount()}${\r\n      menu.restaurantInfo.currency\r\n    }${errorurl}${failedurl}${mkey}${orderId}${accepturl}${sec}`;\r\n\r\n    let mac = sha256(str);\r\n\r\n    const paymentdata = {\r\n      name: user.user.firstName,\r\n      email: user.user.email,\r\n      phone: user.user.mobile,\r\n      user_id: userid,\r\n      order_id: `${orderId}`,\r\n      merchant_key: mkey,\r\n      amount: getBillAmount(),\r\n      currency: menu.restaurantInfo.currency,\r\n      mac: mac,\r\n      redirect_type: type,\r\n      accept_url: accepturl,\r\n      failed_url: failedurl,\r\n      error_url: errorurl,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://paymentz.z-pay.co.uk/api/payment-link\", paymentdata)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        window.location.href = response.data.data.paymentLink;\r\n      });\r\n  };\r\n\r\n  const getOrderId = () => {\r\n    return new Date().getTime().toString();\r\n  };\r\n  const handleCheckout = async (deliveryDetails) => {\r\n    console.log(\"e is \", deliveryDetails);\r\n    if (data.deliveryType == undefined) {\r\n      alert(\"fail\");\r\n    }\r\n    if (main.isClosed) {\r\n      return notification[\"warning\"]({\r\n        description: \"Restaurant is closed\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        message:\r\n          \"This restaurant is not taking any orders right now, please visit later\",\r\n      });\r\n    } else if (\r\n      !user.isTakeAway &&\r\n      grandTotal < Number(main.selectedRestaurant.cost[\"min_order_amount\"])\r\n    ) {\r\n      return notification[\"warning\"]({\r\n        description: `Minimum amount required for delivery is ${menu.restaurantInfo.monetary_symbol} ${main.selectedRestaurant.cost[\"min_order_amount\"]}`,\r\n        message: \"Minimum amount for delivery did not meet\",\r\n        style: {\r\n          marginTop: \"90px\",\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n      });\r\n    }\r\n    setdata({ ...state, displayloader: true });\r\n\r\n    const orderId = getOrderId();\r\n    var savedAmount = \"1\";\r\n    const response_format = getFormattedRequestPayload(\r\n      // props.phone_code,\r\n      user,\r\n      user.selectedPickUpTime,\r\n      menu.restaurantInfo,\r\n      deliveryDetails,\r\n      orderId,\r\n      getSubTotal(),\r\n      getSubTaxTotal(),\r\n      getBillAmount(),\r\n      menu.cart,\r\n      user.distance,\r\n      savedAmount,\r\n      //getSavedAmount(),\r\n      getDeliveryCharges(),\r\n      user.user.phonecode,\r\n      user.selectedDeliveryTime\r\n    );\r\n\r\n    console.log(\"payload is\", response_format);\r\n\r\n    const response = await dispatch(\r\n      placeOrder(\r\n        getFormattedRequestPayload(\r\n          // props.phone_code,\r\n          user,\r\n          user.user.selectedPickUpTime,\r\n          menu.restaurantInfo,\r\n          deliveryDetails,\r\n          orderId,\r\n          getSubTotal(),\r\n          getSubTaxTotal(),\r\n          getBillAmount(),\r\n          menu.cart,\r\n          user.distance,\r\n          savedAmount,\r\n          //getSavedAmount(),\r\n          getDeliveryCharges(),\r\n          user.user.phonecode,\r\n          user.user.selectedDeliveryTime\r\n        ),\r\n        user.user.token\r\n      )\r\n    );\r\n\r\n    const {\r\n      data: { RESULT, message },\r\n    } = response;\r\n    console.log(\"response is\", response);\r\n    console.log(\"results\", RESULT);\r\n    if (RESULT == \"SUCCESS\") {\r\n      console.log(\"if statement\", deliveryDetails.paymentMethod);\r\n      if (deliveryDetails.paymentMethod == \"1\") {\r\n        sendpaymentreq(\"1\", orderId);\r\n      } else if (deliveryDetails.paymentMethod == \"4\") {\r\n        sendpaymentreq(\"2\", orderId);\r\n      } else {\r\n        History.push(\r\n          `/restId=${menu.restaurantInfo.restaurant_id}/ordersuccess`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <section\r\n        className=\"parallax-window_myprofile \"\r\n        data-parallax=\"scroll\"\r\n        // data-image-src=\"https://cutt.ly/Kkb7BY9\"\r\n        style={{\r\n          background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n        data-natural-width={1400}\r\n        data-natural-height={470}\r\n      >\r\n        <div id=\"subheader_myprofile\">\r\n          <div id=\"sub_content\">\r\n            <h1>Place Your Order</h1>\r\n          </div>\r\n        </div>\r\n      </section> */}\r\n\r\n      {data.displayloader ? <WaitingOverlay /> : null}\r\n      <AppHeader />\r\n      <div\r\n        className=\"container margin_60_35\"\r\n        style={{ transform: \"none\", marginTop: \"50px\" }}\r\n      >\r\n        <div className=\"row\" style={{ transform: \"none\" }}>\r\n          <div className=\"col-lg-8\">\r\n            <PaymentForm\r\n              onHandleCheckout={handleCheckout}\r\n              deliveryCharges={getDeliveryCharges}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className=\"col-lg-4\"\r\n            id=\"sidebar\"\r\n            style={{\r\n              position: \"relative\",\r\n              overflow: \"visible\",\r\n              boxSizing: \"border-box\",\r\n              minHeight: \"1px\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"theiaStickySidebar\"\r\n              style={{\r\n                paddingTop: \"0px\",\r\n                paddingBottom: \"1px\",\r\n                position: \"static\",\r\n                transform: \"none\",\r\n              }}\r\n            >\r\n              <div id=\"cart-box\" style={{ backgroundColor: \"white\" }}>\r\n                <h3 className=\"cart-head\">\r\n                  Your order <i class=\"icon_cart_alt float-right\"></i>\r\n                </h3>\r\n                <table className=\"table table_summary\">\r\n                  <tbody>\r\n                    {menu.cart.map((val) => {\r\n                      let isStillActive = false;\r\n                      return (\r\n                        <>\r\n                          <tr>\r\n                            <td>\r\n                              <div\r\n                                style={{ marginTop: \"5px\", fontSize: \"15px\" }}\r\n                              >\r\n                                {val.name}\r\n                              </div>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"main-qty\">\r\n                                <div\r\n                                  className=\"plus\"\r\n                                  onClick={() => handleAddItem(val)}\r\n                                >\r\n                                  +\r\n                                </div>\r\n                                <div\r\n                                  className=\"minus\"\r\n                                  onClick={() => handleRemoveItem(val)}\r\n                                >\r\n                                  -\r\n                                </div>\r\n                                <div className=\"qty\">{val.qty}</div>\r\n                              </div>\r\n                            </td>\r\n                            <td>\r\n                              <div\r\n                                style={{\r\n                                  marginTop: \"5px\",\r\n                                  fontSize: \"15px\",\r\n                                }}\r\n                              >\r\n                                <span className=\"float-right\">\r\n                                  {\" \"}\r\n                                  EUR\r\n                                  {` ${truncateDecimal(\r\n                                    getItemPrice(val, isStillActive)\r\n                                  )}`}\r\n                                </span>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n                <table className=\"table table_summary\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <div\r\n                          className=\"parent-textarea\"\r\n                          style={{ height: \"51px\" }}\r\n                        >\r\n                          <textarea\r\n                            maxLength=\"140\"\r\n                            className=\"textarea-class\"\r\n                            placeholder=\"Any suggestions for restro ?\"\r\n                          ></textarea>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <hr />\r\n                <table className=\"table table_summary\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        Subtotal{\" \"}\r\n                        <span className=\"float-right\">{`${\r\n                          menu.restaurantInfo.monetary_symbol\r\n                        } ${getSubTotal()}`}</span>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        Taxes{\" \"}\r\n                        <span className=\"float-right\">{`${\r\n                          menu.restaurantInfo.monetary_symbol\r\n                        } ${getSubTaxTotal()}`}</span>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        Delivery Charges\r\n                        <span className=\"float-right\">{`${menu.restaurantInfo.monetary_symbol} ${user.delivery_cost}`}</span>\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"total\">\r\n                        TOTAL{\" \"}\r\n                        <span className=\"float-right\">{`${\r\n                          menu.restaurantInfo.monetary_symbol\r\n                        } ${getBillAmount()}`}</span>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default Checkout;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\WaitingOverlay\\WaitingOverlay.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\utils.js",["471","472","473","474"],"import moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nconst DELIVERY_TYPE = {\r\n  DEFAULT: \"Delivery\",\r\n  TAKE_AWAY: \"PickUp\",\r\n  HOME_DELIVERY: \"Delivery\",\r\n  EAT_IN: \"EatIn\",\r\n};\r\n\r\nfunction getFormmatedItems(items, restaurant) {\r\n  console.log(\"items in formatlikst\", items);\r\n\r\n  return items.map((item) => {\r\n    let forced_modifiers = \"\";\r\n    const {\r\n      is_localtax: isLocal,\r\n      is_othertax: isOther,\r\n      is_vat: isVat,\r\n      is_servicetax: isService,\r\n      modifiers: modifiers,\r\n    } = item;\r\n\r\n    forced_modifiers = modifiers;\r\n    console.log(\"map modi\", forced_modifiers);\r\n\r\n    // var Fm = [];\r\n    // Fm = modifiers;\r\n    let detours = {};\r\n    let detourLength = [];\r\n    let is_detour = \"\";\r\n    let jsonDetour = \"\";\r\n    if (forced_modifiers !== null) {\r\n      const { forcedModifier: Fm } = forced_modifiers;\r\n      Fm.map((fmi) => {\r\n        if (fmi.detour) {\r\n          detourLength.push(fmi.detour);\r\n          detours[fmi.id] = fmi.detour;\r\n        }\r\n      });\r\n      if (detourLength.length > 0) {\r\n        // array exists and is not empty\r\n        // console.log(\"entering valid detourLength\");\r\n        is_detour = 1;\r\n        jsonDetour = JSON.stringify(detours);\r\n      } else {\r\n        is_detour = 0;\r\n        jsonDetour = \"\";\r\n      }\r\n    }\r\n\r\n    //? Assigning is_detour\r\n\r\n    // console.log(\"detoursOp\",jsonDetour, \"  is_detour: \", is_detour, \" detourLength \",detourLength.length, detourLength )\r\n    console.log(item.qty, typeof item.qty);\r\n    return {\r\n      ...item,\r\n      tax:\r\n        (item.happyHourItem\r\n          ? Number(item.happyHourItem.tax)\r\n          : Number(item.tax)) / Number(item.qty),\r\n      subTotal: item.happyHourItem\r\n        ? item.happyHourItem.grandTotal\r\n        : item.subTotal,\r\n      happy_hour_id: item.happyHourDetail\r\n        ? item.happyHourDetail[\"happy_hours_id\"]\r\n        : \"\",\r\n      happy_hour_amount: item.happyHourItem\r\n        ? Math.abs(\r\n            Number(item.grandTotal) - Number(item.happyHourItem.subTotal)\r\n          )\r\n        : 0,\r\n      productId: item.id,\r\n      comments: \"0\",\r\n      type: item.productType,\r\n      tax_total: item.happyHourItem ? item.happyHourItem.tax : item.tax,\r\n      tax_sub_total: item.happyHourItem ? item.happyHourItem.tax : item.tax,\r\n      timestamp: new Date().getTime().toString(),\r\n      ticket_status: \"New\",\r\n      qty: item.happyHourItem\r\n        ? Number(item.happyHourItem.qty)\r\n        : Number(item.qty),\r\n      price: item.subTotal / item.qty,\r\n      service_tax: Number(isService) ? restaurant[\"service_tax\"] : 0,\r\n      vat: Number(isVat) ? restaurant[\"vat\"] : 0,\r\n      local_tax: Number(isLocal) ? restaurant[\"local_tax\"] : 0,\r\n      other_tax: Number(isOther) ? restaurant[\"other_tax\"] : 0,\r\n      detours: jsonDetour,\r\n      is_detour: is_detour,\r\n    };\r\n  });\r\n}\r\n\r\nexport function getFormattedRequestPayload(\r\n  user,\r\n  selectedPickUpTime,\r\n  restaurant,\r\n  delivery,\r\n  orderId,\r\n  subTotal,\r\n  subTaxTotal,\r\n  grandTotal,\r\n  cartList,\r\n  distance,\r\n  savedAmount,\r\n  deliveryCharges,\r\n  phone_code,\r\n  delivery_time\r\n) {\r\n  // const menu = useSelector((state) => state.menu);\r\n  console.log(\"arguments\", cartList);\r\n\r\n  const formattedItems = getFormmatedItems(cartList, restaurant);\r\n\r\n  const localTaxItem = formattedItems.find((item) => item[\"local_tax\"] !== 0);\r\n  const serviceTaxItem = formattedItems.find(\r\n    (item) => item[\"service_tax\"] !== 0\r\n  );\r\n  const otherTaxItem = formattedItems.find((item) => item[\"other_tax\"] !== 0);\r\n  const vatTaxItem = formattedItems.find((item) => item[\"vat\"] !== 0);\r\n  const payload = {\r\n    ...user,\r\n    ...restaurant,\r\n    order_id: orderId,\r\n    rest_id: restaurant.restaurant_id,\r\n    delivery_date: moment().format(\"yyyy-MM-DD\"),\r\n    order_date: moment().format(\"yyyy-MM-DD\"),\r\n    order_time: moment().format(\"HH:mm:ss\"),\r\n    is_online: \"1\",\r\n    payment_method: delivery.paymentMethod,\r\n    comments: delivery.comments,\r\n    order_status: \"New\",\r\n    type: \"open\",\r\n    member_id: user.user.clientId,\r\n    firstname: user.user.firstName,\r\n    lastname: user.user.lastName,\r\n    email: user.user.email,\r\n    mobile: user.user.mobile,\r\n    total: subTotal,\r\n    tax: subTaxTotal,\r\n    grand_total: grandTotal,\r\n    paid: \"0\",\r\n    payment_status: \"\",\r\n    transaction_id: \"\",\r\n    happy_hours_discount: savedAmount,\r\n    Items: formattedItems,\r\n    service_tax: serviceTaxItem ? serviceTaxItem[\"service_tax\"] : 0,\r\n    vat: vatTaxItem ? vatTaxItem[\"vat\"] : 0,\r\n    local_tax: localTaxItem ? localTaxItem[\"local_tax\"] : 0,\r\n    other_tax: otherTaxItem ? otherTaxItem[\"other_tax\"] : 0,\r\n    comments: delivery.comments,\r\n    delivery_cost: deliveryCharges,\r\n    phone_code: phone_code,\r\n  };\r\n\r\n  console.log(\"Formatted Request Payload\", payload);\r\n\r\n  return delivery.deliveryType !== DELIVERY_TYPE.TAKE_AWAY &&\r\n    delivery.deliveryType !== DELIVERY_TYPE.EAT_IN\r\n    ? {\r\n        ...payload,\r\n\r\n        street:\r\n          delivery.selectedAddress.address1 + delivery.selectedAddress.address2,\r\n        delivery_city: delivery.selectedAddress.city,\r\n        delivery_state: delivery.selectedAddress.state,\r\n        delivery_country: delivery.selectedAddress.country,\r\n        delivery_zipcode: delivery.selectedAddress.zipcode,\r\n        mobile: delivery.selectedAddress.phone,\r\n        delivery_option: delivery.deliveryType.toLowerCase(),\r\n        order_location: null,\r\n        time_for_delivery: \"\",\r\n        delivery_time: user.selectedPickUpTime,\r\n        distance,\r\n        delivery_cost: deliveryCharges,\r\n        phone: \"\",\r\n      }\r\n    : {\r\n        ...payload,\r\n        street: \"\",\r\n        delivery_city: \"\",\r\n        delivery_state: \"\",\r\n        delivery_country: \"\",\r\n        delivery_zipcode: \"\",\r\n        delivery_option: delivery.deliveryType.toLowerCase(),\r\n        order_location: null,\r\n        time_for_delivery: \"\",\r\n        delivery_time: user.selectedPickUpTime,\r\n        distance: \"\",\r\n        phone: \"\",\r\n      };\r\n}\r\n//console.log(\"check\", getFormattedRequestPayload());\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentForm.jsx",["475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../Checkout/Checkout.css\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  setDeliveryCost,\r\n  setSelectedAddress,\r\n  setIsTakeAway,\r\n  setPickupTime,\r\n  setDefaultAddress,\r\n  setDeliveryDistance,\r\n} from \"../../state-management/user/actions\";\r\nimport { TimePicker } from \"antd\";\r\nimport { notification } from \"antd\";\r\nimport { PinDropSharp } from \"@material-ui/icons\";\r\nimport Address from \"../ManageAddress/Address\";\r\nimport { fetchAddressesList } from \"../../state-management/user/asyncActions\";\r\nimport GoogleMap from \"../GoogleMap/GoogleMap\";\r\nimport Geocode from \"react-geocode\";\r\nimport AddAddress from \"../ChooseAddress/AddAddress\";\r\nimport { useTheme } from \"@material-ui/core\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n} from \"../../state-management/menu/utils\";\r\nimport ChooseAddress from \"../ChooseAddress/ChooseAddress\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nGeocode.setApiKey(\"AIzaSyCMTj6FEwu3Kh0tSdgp6hh4QOKgIJF74rs\");\r\n\r\nconst PaymentForm = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const dispatch = useDispatch();\r\n  const DELIVERY_TYPE = {\r\n    DEFAULT: \"Delivery\",\r\n    TAKE_AWAY: \"PickUp\",\r\n    HOME_DELIVERY: \"Delivery\",\r\n    EAT_IN: \"EatIn\",\r\n  };\r\n  const settime = () => {\r\n    console.log(\"format\", moment().add(30, \"minutes\").format(\"HH:mm\"));\r\n    console.log(\"open\", main.opening);\r\n    console.log(\"close\", main.closing);\r\n    return moment().add(30, \"minutes\").format(\"HH:mm\") >= main.opening &&\r\n      moment().add(30, \"minutes\").format(\"HH:mm\") <= main.closing\r\n      ? moment().add(30, \"minutes\")\r\n      : moment(main.opening, \"HH:mm\");\r\n  };\r\n  const [api, setapi] = useState();\r\n\r\n  const [add, setadd] = useState({\r\n    addresses: [],\r\n  });\r\n  useEffect(() => {\r\n    fetchAddressesList();\r\n  }, [add]);\r\n\r\n  const [data, setdata] = useState({\r\n    deliveryType: user.isTakeAway\r\n      ? DELIVERY_TYPE.TAKE_AWAY\r\n      : DELIVERY_TYPE.HOME_DELIVERY,\r\n    selectedAddress: user.selectedAddress,\r\n    //selectedAddress: \"\",\r\n    //changeaddress: [],\r\n\r\n    isAddressesFetched: false,\r\n    paymentMethod: \"\",\r\n    // I wonder why we need these 3 states - this needs a lot of refactoring\r\n    openingBusinesHours: main.opening,\r\n    closingBusinesHours: main.closing,\r\n    businessHours: main.businessHour,\r\n    isTakeAway: user.isTakeAway,\r\n    orderButtonClicked: false,\r\n    addresses: [],\r\n    paymentOptions: [],\r\n    deliveryCharges: \"\",\r\n    hasDeliveryOption: false,\r\n    hasEatInOption: false,\r\n    hasPickupOption: false,\r\n    pickupTime: settime(),\r\n    showChangeAddress: false,\r\n\r\n    address_error: \"\",\r\n  });\r\n\r\n  const initialize = async () => {\r\n    // check if user logged in, else return\r\n    if (!user.user.isUserLoggedIn) {\r\n      return;\r\n    }\r\n    // this.props.setPickupTime(this.state.pickupTime);\r\n    fetchAddresses();\r\n  };\r\n\r\n  const [show, setshow] = useState(false);\r\n  const [state, setState] = useState({\r\n    showAddress: false,\r\n    deliveryType: \"\",\r\n  });\r\n\r\n  const handleGoogleApi = (google) => {\r\n    //if (!state.googleApi) setState({ ...state, googleApi: google });\r\n\r\n    console.log(\"google in payment form\", google);\r\n    setapi(google);\r\n  };\r\n\r\n  const showAddressModal = () => {\r\n    setshow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (main.deliveryRange) getDeliveryCharges();\r\n    if (api) {\r\n      dispatch(setPickupTime(data.pickupTime));\r\n      fetchAddresses();\r\n      //getDeliveryCharges();\r\n    }\r\n  }, [api]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setSelectedAddress(user.defaultAddress));\r\n\r\n    const deliveryOptions = !(\r\n      main.selectedRestaurant.order_option === \"\" ||\r\n      main.selectedRestaurant.order_option === null ||\r\n      main.selectedRestaurant.order_option === undefined\r\n    );\r\n\r\n    data.hasDeliveryOption = main.selectedRestaurant.order_option\r\n      .split(\",\")\r\n      .includes(\"delivery\");\r\n    data.hasEatInOption = main.selectedRestaurant.order_option\r\n      .split(\",\")\r\n      .includes(\"eatin\");\r\n    data.hasPickupOption = main.selectedRestaurant.order_option\r\n      .split(\",\")\r\n      .includes(\"pickup\");\r\n\r\n    data.paymentOptions = main.selectedRestaurant.payment_option_ids.split(\",\");\r\n\r\n    setdata({\r\n      ...data,\r\n    });\r\n    console.log(\"dtaa is\", data);\r\n  }, []);\r\n\r\n  const deliveryTypeClick = (type) => {\r\n    setState({ ...state, showAddress: true });\r\n    setdata({ ...data, deliveryType: type, showAddress: true });\r\n    dispatch(setIsTakeAway(type === DELIVERY_TYPE.TAKE_AWAY));\r\n    //getDeliveryCharges();\r\n  };\r\n  const deliveryTypeEatinClick = (type) => {\r\n    setState({ ...state, showAddress: false });\r\n    setdata({\r\n      ...data,\r\n      deliveryType: type,\r\n      showAddress: false,\r\n      showChangeAddress: false,\r\n    });\r\n    dispatch(setIsTakeAway(type === DELIVERY_TYPE.TAKE_AWAY));\r\n  };\r\n  const deliveryTypePickupClick = (type) => {\r\n    setState({ ...state, showAddress: false });\r\n    setdata({\r\n      ...data,\r\n      deliveryType: type,\r\n      showAddress: false,\r\n      showChangeAddress: false,\r\n    });\r\n\r\n    dispatch(setIsTakeAway(type === DELIVERY_TYPE.TAKE_AWAY));\r\n  };\r\n  const paymentOptionChange = (e) => {\r\n    setdata({ ...data, paymentMethod: e });\r\n    console.log(\"payment data\", data);\r\n  };\r\n\r\n  const onPickupTimeChange = (time, timeString) => {\r\n    // if (!data.businessHours) {\r\n    //   setdata({ ...data, pickupTime: null });\r\n\r\n    //   return false;\r\n    // }\r\n    // we are moving in circles here, we have separate opening and closing object, this is unnecessary code.\r\n    const selectedTime = moment(time, \"HH:mm\");\r\n    console.log(\"selected time\", selectedTime);\r\n    const businessHoursFromTo = data.businessHours.split(\" - \");\r\n    const businessHoursFrom = moment(businessHoursFromTo[0], \"HH:mm\");\r\n    const businessHoursTo = moment(businessHoursFromTo[1], \"HH:mm\");\r\n    console.log(\"from\", businessHoursFrom);\r\n    console.log(\"To\", businessHoursTo);\r\n\r\n    if (selectedTime > businessHoursFrom && selectedTime < businessHoursTo) {\r\n      setdata({ ...data, pickupTime: selectedTime });\r\n      dispatch(setPickupTime(timeString));\r\n      notification[\"success\"]({\r\n        message: \"Time changed Successfully\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    } else {\r\n      setdata({ ...data, pickupTime: null });\r\n      notification[\"warning\"]({\r\n        message: \"Sorry, Please select time between business hours\",\r\n        style: {\r\n          marginTop: \"50px\",\r\n\r\n          color: \"rgba(0, 0, 0, 0.65)\",\r\n          border: \"1px solid #b7eb8f\",\r\n          backgroundColor: \"#f6ffed\",\r\n        },\r\n        placement: \"topLeft\",\r\n      });\r\n    }\r\n  };\r\n  const onClick = () => {\r\n    props.onHandleCheckout(data);\r\n  };\r\n\r\n  const getMinHours = () => {\r\n    const businessHoursFrom = parseInt(\r\n      data.businessHours.split(\"-\")[0].split(\":\")[0]\r\n    );\r\n\r\n    const minHours = [];\r\n    for (let i = 0; i < businessHoursFrom; i++) {\r\n      minHours.push(i);\r\n    }\r\n    // console.log(minHours);\r\n    return minHours;\r\n  };\r\n\r\n  // ? Get the businesss hours end from businessHours props\r\n  const getMaxHours = () => {\r\n    const businessHoursTo = parseInt(\r\n      data.businessHours.split(\"-\")[1].split(\":\")[0]\r\n    );\r\n    const maxHours = [];\r\n    if (Number(data.businessHours.split(\"-\")[1].split(\":\")[1] > 0)) {\r\n      for (let i = businessHoursTo + 1; i < 24; i++) {\r\n        maxHours.push(i);\r\n      }\r\n    } else {\r\n      for (let i = businessHoursTo; i < 24; i++) {\r\n        maxHours.push(i);\r\n      }\r\n      // console.log( Number((this.state.businessHours.split(\"-\")[1].split(\":\")[1]) <0))\r\n    }\r\n\r\n    // console.log(this.state.businessHours.split(\"-\")[1].split(\":\")[1]);\r\n    return maxHours;\r\n  };\r\n  const getDisabledHours = () => {\r\n    let hours = [...getMinHours(), ...getMaxHours()]; //? restricting business hours in timer, so no need for seperate validation for pickup time\r\n    if (moment().minute() > 30) {\r\n      for (let i = 0; i < moment().hour() + 1; i++) {\r\n        hours.push(i);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < moment().hour(); i++) {\r\n      hours.push(i);\r\n    }\r\n    // console.log(hours);\r\n    return hours;\r\n  };\r\n\r\n  const getDisabledMinutes = () => {\r\n    let minutes = [];\r\n    for (let i = 0; i < moment().minute() + 30; i++) {\r\n      minutes.push(i);\r\n    }\r\n    return minutes;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"datat is\", add);\r\n  }, [add]);\r\n\r\n  const fetchAddresses = async () => {\r\n    setdata({ ...data, isAddressesFetched: false });\r\n    // const {\r\n    //   payload: { data: addresses },\r\n    // } = await dispatch(fetchAddressesList(user.user.clientId));\r\n\r\n    const { payload } = await dispatch(fetchAddressesList(user.user.clientId));\r\n    console.log(\"payload in fetchadderss\", payload);\r\n    var arr = [];\r\n    arr.push(payload.data);\r\n    setadd({ ...add, addresses: payload.data });\r\n    //setdata({ ...data, addresses: payload, isAddressesFetched: true });\r\n    console.log(\"dtdtd\", data);\r\n\r\n    const defaultAddress = payload.data.filter(\r\n      (address) => address.is_default === \"1\",\r\n      [0]\r\n    );\r\n    console.log(\"defaultAddress from fetchaddress: \", defaultAddress);\r\n    dispatch(setDefaultAddress(defaultAddress));\r\n    handleDefautAddress(defaultAddress);\r\n\r\n    if (!data.selectedAddress) {\r\n      console.log(\"passed\");\r\n      handleDefautAddress(defaultAddress);\r\n      //  setdata({ ...data, selectedAddress: defaultAddress }); // ? will run only after refresh and no address is selected\r\n    }\r\n\r\n    console.log(\"Selecetd Address: \", data.selectedAddress);\r\n    // this.props.setSelectedAddress(defaultAddress)\r\n\r\n    // this.handleMultipleAddress()\r\n  };\r\n\r\n  const handleDefautAddress = async (address) => {\r\n    console.log(\"address in default address\", address);\r\n    const lat = main.selectedRestaurant.lat;\r\n    const lon = main.selectedRestaurant.lon;\r\n\r\n    const response = await Geocode.fromAddress(address[0].address1);\r\n\r\n    const { lat: customerLat, lng: customerLng } =\r\n      response.results[0].geometry.location;\r\n\r\n    console.log(\"in handleDefaut\", api);\r\n    api.calculateDistance(\r\n      {\r\n        lat,\r\n        lng: lon,\r\n      },\r\n      {\r\n        lat: customerLat,\r\n        lng: customerLng,\r\n      },\r\n      handleDistanceCalucationCallback\r\n    );\r\n  };\r\n\r\n  const handleDistanceCalucationCallback = async (result) => {\r\n    console.log(\"distance is\", result);\r\n    // return;\r\n    if (result.status === \"SUCCESS\") {\r\n      const distance = parseFloat(result.distance / 1000);\r\n\r\n      dispatch(setDeliveryDistance(distance));\r\n\r\n      //getDeliveryCharges();\r\n    } else {\r\n      console.log(\"error: \", result.reason);\r\n      setdata({ ...data, address_error: result.reason });\r\n    }\r\n  };\r\n\r\n  const onChangeAddressCall = () => {\r\n    setdata({ ...data, showChangeAddress: true });\r\n    setState({ ...state, showAddress: false });\r\n  };\r\n\r\n  const handleMultipleAddress = (address) => {\r\n    // dispatch(setDefaultAddress(address));\r\n    dispatch(setSelectedAddress(address));\r\n\r\n    //setadd({ ...add, addresses: user.selectedAddress });\r\n    setdata({\r\n      ...data,\r\n      changeaddress: address,\r\n      selectedAddress: address,\r\n      showChangeAddress: false,\r\n    });\r\n    setState({ ...state, showAddress: true });\r\n    handleChangeDefautAddress(address);\r\n\r\n    //  getDeliveryCharges();\r\n\r\n    console.log(\"add is\");\r\n  };\r\n\r\n  const handleChangeDefautAddress = async (address) => {\r\n    console.log(\"address in default address\", address);\r\n    const lat = main.selectedRestaurant.lat;\r\n    const lon = main.selectedRestaurant.lon;\r\n\r\n    const response = await Geocode.fromAddress(address.address1);\r\n\r\n    const { lat: customerLat, lng: customerLng } =\r\n      response.results[0].geometry.location;\r\n\r\n    console.log(\"in handleDefaut\", api);\r\n    api.calculateDistance(\r\n      {\r\n        lat,\r\n        lng: lon,\r\n      },\r\n      {\r\n        lat: customerLat,\r\n        lng: customerLng,\r\n      },\r\n      handleChangeDistanceCalucationCallback\r\n    );\r\n  };\r\n\r\n  const handleChangeDistanceCalucationCallback = async (result) => {\r\n    console.log(\"distance is\", result);\r\n    // return;\r\n    if (result.status === \"SUCCESS\") {\r\n      const distance = parseFloat(result.distance / 1000);\r\n      dispatch(setDeliveryDistance(distance));\r\n    } else {\r\n      console.log(\"error: \", result.reason);\r\n      setdata({ ...data, address_error: result.reason });\r\n    }\r\n  };\r\n\r\n  const grandTotal = Number(getGrandTotal());\r\n  const getDeliveryCharges = () => {\r\n    if (!main.deliveryRange) return;\r\n    const cost = main.deliveryRange.cost;\r\n    const range = main.deliveryRange.range;\r\n    const isTakeAway = user.isTakeAway;\r\n    const distance = user.distance;\r\n    console.log(\"distance range\", range);\r\n\r\n    const freeDeliveryRangeAmount = cost[\"free_delivery_eligible_amount\"];\r\n    const stdDeliveryCost = cost[\"std_delivery_cost\"] || 0;\r\n\r\n    console.log(\r\n      \"check delivery\",\r\n      parseInt(cost[\"free_delivery_eligible_amount\"]) === 0,\r\n      parseInt(cost[\"std_delivery_cost\"]) === 0,\r\n      grandTotal\r\n    );\r\n\r\n    const isFreeDelivery =\r\n      grandTotal >= Number(cost[\"free_delivery_eligible_amount\"]) &&\r\n      parseInt(freeDeliveryRangeAmount) !== 0;\r\n\r\n    console.log(\"details of range is\", isFreeDelivery);\r\n\r\n    if (isFreeDelivery || isTakeAway) {\r\n      dispatch(setDeliveryCost(0));\r\n      return 0;\r\n    }\r\n    //\r\n\r\n    if (distance === -1 || !range) {\r\n      console.log(\"std delivery cost\", stdDeliveryCost);\r\n      console.log(\"std delivery cost\", Number(stdDeliveryCost));\r\n      if (stdDeliveryCost) {\r\n        dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n      }\r\n      return Number(stdDeliveryCost);\r\n    }\r\n\r\n    if (range) {\r\n      const selectedRange = range.find((rng) => {\r\n        const from = Number(rng[\"range_from\"]);\r\n        const to = Number(rng[\"range_to\"]);\r\n\r\n        return distance >= from && distance <= to;\r\n      });\r\n\r\n      console.log(\"range details\", selectedRange);\r\n\r\n      // selectedRange\r\n      //   ?( Number(selectedRange[\"delivery_cost\"]) || 0)\r\n      //   : Number(stdDeliveryCost);\r\n\r\n      if (selectedRange) {\r\n        if (selectedRange[\"delivery_cost\"]) {\r\n          dispatch(setDeliveryCost(selectedRange[\"delivery_cost\"]));\r\n        } else {\r\n          dispatch(setDeliveryCost(0));\r\n        }\r\n      } else {\r\n        dispatch(setDeliveryCost(Number(stdDeliveryCost)));\r\n      }\r\n      return selectedRange\r\n        ? Number(selectedRange[\"delivery_cost\"] || 0)\r\n        : Number(stdDeliveryCost);\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  function getGrandTotal() {\r\n    return menu.cart.length\r\n      ? truncateDecimal(\r\n          menu.cart.reduce((acc, item) => {\r\n            if (\r\n              isHappyHourStillActive(item, menu.restaurantInfo.timezone)\r\n                .isActive &&\r\n              item.happyHourItem\r\n            ) {\r\n              return (\r\n                acc +\r\n                Number(\r\n                  item.happyHourItem.grandTotal\r\n                    ? item.happyHourItem.grandTotal\r\n                    : item.happyHourItem.subTotal\r\n                )\r\n              );\r\n            }\r\n\r\n            return acc + (item.grandTotal ? item.grandTotal : item.subTotal);\r\n          }, 0)\r\n        )\r\n      : \"\";\r\n  }\r\n  useEffect(() => {\r\n    console.log(\"new data\", data);\r\n  }, [data]);\r\n\r\n  const modalNames = {\r\n    ADD_ADDRESS: \"AddAddress\",\r\n    CHOOSE_ADDRESS: \"ChooseAddress\",\r\n    FIND_ADDRESS: \"findAddress\",\r\n  };\r\n\r\n  const [handleadd, sethandleadd] = useState(false);\r\n  const handleAddAddressOnPaymentForm = async () => {\r\n    dispatch(displayAddressModal(true));\r\n    dispatch(\r\n      openModal(modalNames.FIND_ADDRESS, {\r\n        addAddress: true,\r\n        existingDefaultAddress: state.addresses\r\n          ? state.addresses &&\r\n            state.addresses.find((addr) => addr[\"is_default\"] === \"1\")\r\n          : null,\r\n      })\r\n    );\r\n\r\n    // setdata({\r\n    //   ...data,\r\n    //   changeaddress: user.selectedAddress,\r\n    //   showChangeAddress: false,\r\n    // });\r\n\r\n    // setState({ ...state, showAddress: true });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (handleadd) {\r\n      const { payload } = await dispatch(\r\n        fetchAddressesList(user.user.clientId)\r\n      );\r\n      console.log(\"payload in fetchadderss\", payload);\r\n\r\n      setadd({ ...add, addresses: payload.data });\r\n      sethandleadd(false);\r\n    }\r\n  }, [handleadd]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box_style_2\">\r\n        <h2 className=\"delivery-head\">Select Delivery type</h2>\r\n        {data.hasDeliveryOption ? (\r\n          <>\r\n            <input\r\n              className=\"check_payment\"\r\n              type=\"radio\"\r\n              name=\"typeofdelivery\"\r\n              id=\"delivery\"\r\n            />\r\n\r\n            <label\r\n              onClick={() => deliveryTypeClick(DELIVERY_TYPE.DEFAULT)}\r\n              for=\"delivery\"\r\n              class=\"btn_radio\"\r\n            >\r\n              Delivery\r\n            </label>\r\n          </>\r\n        ) : null}\r\n\r\n        {data.hasEatInOption ? (\r\n          <>\r\n            <input\r\n              className=\"check_payment\"\r\n              type=\"radio\"\r\n              name=\"typeofdelivery\"\r\n              id=\"eatin\"\r\n            />\r\n            <label\r\n              onClick={() => deliveryTypeEatinClick(DELIVERY_TYPE.EAT_IN)}\r\n              for=\"eatin\"\r\n              class=\"btn_radio\"\r\n            >\r\n              Eat In\r\n            </label>{\" \"}\r\n          </>\r\n        ) : null}\r\n\r\n        {data.hasPickupOption ? (\r\n          <>\r\n            <input\r\n              className=\"check_payment\"\r\n              type=\"radio\"\r\n              name=\"typeofdelivery\"\r\n              id=\"pickup\"\r\n            />\r\n            <label\r\n              onClick={() => deliveryTypePickupClick(DELIVERY_TYPE.TAKE_AWAY)}\r\n              for=\"pickup\"\r\n              class=\"btn_radio\"\r\n            >\r\n              Pickup\r\n            </label>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n\r\n      {state.showAddress ? (\r\n        <div\r\n          className=\"box_style_2\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={showAddressModal}\r\n        >\r\n          <div>\r\n            <h2 className=\"delivery-head\">\r\n              Delivery Address{\" \"}\r\n              <img\r\n                src=\"https://i.ibb.co/TmCnRTh/Tick-Mark-Dark-512.png\"\r\n                height=\"50px\"\r\n                width=\"50px\"\r\n              />\r\n            </h2>\r\n\r\n            <span class=\"address-change\" onClick={onChangeAddressCall}>\r\n              Change\r\n            </span>\r\n\r\n            <>\r\n              {console.log(\"address is\", data.selectedAddress)}\r\n\r\n              <>\r\n                {data.changeaddress ? (\r\n                  <>\r\n                    <p\r\n                      style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontWeight: \"700\",\r\n                        fontSize: \"20px\",\r\n                      }}\r\n                    >\r\n                      {data.changeaddress.name}\r\n                    </p>\r\n                    <p style={{ fontSize: \"15px\" }}>\r\n                      {data.changeaddress.address1}, &nbsp;{\" \"}\r\n                      {data.changeaddress.address2} &nbsp;\r\n                      {data.changeaddress.state}, &nbsp;\r\n                    </p>\r\n\r\n                    <p style={{ fontSize: \"15px\" }}>\r\n                      {data.changeaddress.city} - &nbsp;\r\n                      {data.changeaddress.zipcode} , &nbsp;{\" \"}\r\n                      {data.changeaddress.country}\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <p\r\n                      style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontWeight: \"700\",\r\n                        fontSize: \"20px\",\r\n                      }}\r\n                    >\r\n                      {user.defaultAddress[0].name}\r\n                    </p>\r\n                    <p style={{ fontSize: \"15px\" }}>\r\n                      {user.defaultAddress[0].address1}, &nbsp;{\" \"}\r\n                      {user.defaultAddress[0].address2} &nbsp;\r\n                      {user.defaultAddress[0].state}, &nbsp;\r\n                    </p>\r\n\r\n                    <p style={{ fontSize: \"15px\" }}>\r\n                      {user.defaultAddress[0].city} - &nbsp;\r\n                      {user.defaultAddress[0].zipcode} , &nbsp;{\" \"}\r\n                      {user.defaultAddress[0].country}\r\n                    </p>\r\n                  </>\r\n                )}\r\n              </>\r\n\r\n              {}\r\n            </>\r\n            {/* {show ? (\r\n              <>\r\n                <span class=\"address-change\" onClick={onChangeAddressCall}>\r\n                  Change\r\n                </span>\r\n              </>\r\n            ) : null} */}\r\n          </div>\r\n\r\n          {/* {show ? (\r\n            <>\r\n              {console.log(\"address is\", data.selectedAddress)}\r\n\r\n              <p\r\n                style={{\r\n                  textTransform: \"uppercase\",\r\n                  fontWeight: \"700\",\r\n                  fontSize: \"20px\",\r\n                }}\r\n              >\r\n                {data.selectedAddress[0].name}\r\n              </p>\r\n              <p style={{ fontSize: \"15px\" }}>\r\n                {data.selectedAddress[0].address1}, &nbsp;{\" \"}\r\n                {data.selectedAddress[0].address2} &nbsp;\r\n                {data.selectedAddress[0].state}, &nbsp;\r\n              </p>\r\n\r\n              <p style={{ fontSize: \"15px\" }}>\r\n                {data.selectedAddress[0].city} - &nbsp;\r\n                {data.selectedAddress[0].zipcode} , &nbsp;{\" \"}\r\n                {data.selectedAddress[0].country}\r\n              </p>\r\n            </>\r\n          ) : null} */}\r\n        </div>\r\n      ) : null}\r\n\r\n      {data.showChangeAddress ? (\r\n        <>\r\n          <div\r\n            className=\"box_style_2\"\r\n            // style={{ cursor: \"pointer\" }}\r\n            // onClick={showAddressModal}\r\n          >\r\n            <div>\r\n              <h2 className=\"delivery-head\">Your Addresses </h2>\r\n            </div>\r\n\r\n            {add.addresses.map((address, i) => {\r\n              console.log(\"add\", address);\r\n              return (\r\n                <>\r\n                  <section\r\n                    className=\"address-section-paymentform\"\r\n                    // key={i}\r\n                  >\r\n                    <Address address={address} key={i} />\r\n                    <ul className=\"address-actions\">\r\n                      <li //onClick={() => callAddressModal(true, address)}\r\n                      >\r\n                        <span>\r\n                          <h5\r\n                            className=\"actions\"\r\n                            onClick={() => handleMultipleAddress(address)}\r\n                            style={{\r\n                              height: \"35px\",\r\n                              paddingTop: \"8px\",\r\n                            }}\r\n                          >\r\n                            Deliver Here\r\n                          </h5>\r\n                        </span>\r\n                      </li>\r\n                    </ul>\r\n                  </section>\r\n                </>\r\n              );\r\n            })}\r\n            <div\r\n              className=\"checkout-add-address\"\r\n              onClick={handleAddAddressOnPaymentForm}\r\n              style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"#f1f1f1\",\r\n                height: \"70px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  margin: \"20px\",\r\n                  fontSize: \"25px\",\r\n                  paddingLeft: \"20px\",\r\n                  paddingTop: \"18px\",\r\n                  textTransform: \"uppercase\",\r\n                }}\r\n              >\r\n                <AddIcon />\r\n                &nbsp; Add New Address\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      {user.isTakeAway ? (\r\n        <div\r\n          className=\"box_style_2\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={showAddressModal}\r\n        >\r\n          <h2 className=\"delivery-head\">Pickup Details</h2>\r\n          <div className=\"pickup-details\">\r\n            <h3>\r\n              <strong>Business hours are {main.businessHour}</strong>\r\n            </h3>\r\n            <br />\r\n            <div className=\"address-details\" style={{ color: \"black\" }}>\r\n              selected pickup time : &nbsp;\r\n              <TimePicker\r\n                defaultValue={data.pickupTime}\r\n                disabledHours={getDisabledHours}\r\n                onChange={onPickupTimeChange}\r\n                format=\"HH:mm\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div style={{ display: \"none\" }}>\r\n        <GoogleMap\r\n          address={main.selectedRestaurant.address}\r\n          lat={Number(main.selectedRestaurant.lat)}\r\n          lng={Number(main.selectedRestaurant.lon)}\r\n          googleApi={handleGoogleApi}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"box_style_2\">\r\n        <h2 className=\"delivery-head\">Choose Payment method</h2>\r\n\r\n        {data.paymentOptions.map((val) => {\r\n          if (val == \"0\")\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"cash\"\r\n                    value=\"0\"\r\n                    onChange={(e) => paymentOptionChange(\"0\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"cash\">\r\n                    Pay With Cash &nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          else if (val == \"1\") {\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"card\"\r\n                    value=\"1\"\r\n                    onChange={(e) => paymentOptionChange(\"1\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"card\">\r\n                    Pay With Card &nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          } else if (val == \"2\") {\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"cashondelivery\"\r\n                    value=\"2\"\r\n                    onChange={(e) => paymentOptionChange(\"2\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"cashondelivery\">\r\n                    cash on delivery\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          } else if (val == \"3\") {\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"cardondelievry\"\r\n                    value=\"3\"\r\n                    onChange={(e) => paymentOptionChange(\"3\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"cardondelivery\">\r\n                    Card On Delivery&nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          } else if (val == \"4\") {\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"paywithpoints\"\r\n                    value=\"4\"\r\n                    onChange={(e) => paymentOptionChange(\"4\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"paywithpoints\">\r\n                    Open Banking &nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          } else if (val == \"5\") {\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"paypal\"\r\n                    value=\"5\"\r\n                    onChange={(e) => paymentOptionChange(\"5\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"paypal\">\r\n                    PayPal &nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          } else {\r\n            return (\r\n              <>\r\n                <div className=\"payment_select\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"payment\"\r\n                    id=\"others\"\r\n                    value=\"6\"\r\n                    onChange={(e) => paymentOptionChange(\"6\")}\r\n                  />\r\n                  <label className=\"payment-class\" for=\"others\">\r\n                    Other &nbsp;\r\n                    <AccountBalanceWalletIcon />\r\n                  </label>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        <table className=\"table table_summary\">\r\n          <tbody>\r\n            <tr>\r\n              <Button\r\n                onClick={onClick}\r\n                style={{\r\n                  backgroundColor: \"#6244da\",\r\n                  color: \"white\",\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                proceed to pay <strong>&nbsp;</strong>\r\n              </Button>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {modal.modal.modalToShow == \"findAddress\" ? (\r\n        <ChooseAddress refetchAddresses={sethandleadd} />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default PaymentForm;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\OrderSuccess\\OrderSuccess.jsx",["497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchMyOrderList,\r\n  fetchMyOrderDetails,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport WaitingOverlay from \"../WaitingOverlay/WaitingOverlay\";\r\nimport moment from \"moment\";\r\nimport { truncateDecimal } from \"../../state-management/menu/utils\";\r\n\r\nconst OrderSuccess = () => {\r\n  const dispatch = useDispatch();\r\n  const menu = useSelector((state) => state.menu);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [state, setstate] = useState({\r\n    showOrderDetails: false,\r\n    loadingData: false,\r\n    showOverlay: false,\r\n    errorMessage: false,\r\n    requestSuccess: null,\r\n  });\r\n  var ordersList = [];\r\n  var ordersData = [];\r\n  const [orderCoompleteDetails, setorderCoompleteDetails] = useState({});\r\n\r\n  const fetchdata = async () => {\r\n    setstate({ ...state, loadingData: true });\r\n    console.log(\"clientid\", user.user.clientId);\r\n    const response = await dispatch(fetchMyOrderList(user.user.clientId));\r\n    const { payload } = await response;\r\n    console.log(\"payload is\", payload);\r\n\r\n    setstate({ ...state, loadingData: false });\r\n    let dataSource = [];\r\n    if (payload.status == \"200\") {\r\n      //setstate({ ...state, ordersList: payload.data });\r\n      ordersList = payload.data;\r\n      console.log(\r\n        ordersList.filter(\r\n          (order) => order.restaurant_id === menu.restaurantInfo.restaurant_id\r\n        )\r\n      );\r\n      //console.log(\"orderList\", state.ordersList);\r\n\r\n      ordersList\r\n        .filter(\r\n          (order) => order.restaurant_id === menu.restaurantInfo.restaurant_id\r\n        )\r\n        .map((order, i) => {\r\n          let data = {};\r\n          data[\"key\"] = `${i}`;\r\n          data[\"order_no\"] = order.order_id;\r\n          data[\"order_date\"] = order.order_date;\r\n          data[\"paid\"] = order.paid === \"1\" ? \"Yes\" : \"No\";\r\n          data[\"status\"] = order.order_status;\r\n          // console.log(data);\r\n          dataSource.push(data);\r\n          // console.log(this.state.ordersData);\r\n        });\r\n      ordersData = dataSource;\r\n\r\n      var oid = ordersList[0].order_id;\r\n      console.log(\"orders data\", oid);\r\n      //setstate({ ...state, ordersData: dataSource });\r\n      //console.log(\"complete data\", state);\r\n    }\r\n\r\n    const response_2 = await dispatch(\r\n      fetchMyOrderDetails(ordersList[0].order_id)\r\n    );\r\n    const { payload_again } = await response_2;\r\n\r\n    if (response_2.payload.status == 200) {\r\n      //orderCoompleteDetails = response_2.payload.data;\r\n      setorderCoompleteDetails(response_2.payload.data[0]);\r\n    }\r\n    console.log(\"complete details\", orderCoompleteDetails);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchdata();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <div className=\"container margin_60_35\">\r\n        {/* style={{ marginTop: \"20px\" }} */}\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"box_style_2\">\r\n              <h2\r\n                className=\"inner\"\r\n                style={{ textAlign: \"center\", backgroundColor: \"#6244da\" }}\r\n              >\r\n                Order confirmed!\r\n              </h2>\r\n              <div id=\"confirm\">\r\n                <i className=\"icon_check_alt2\"></i>\r\n                <br />\r\n                <h3>Thank you!</h3>\r\n                <h3>Order Number :{orderCoompleteDetails.order_id} </h3>\r\n                {/* <p>\r\n                  Lorem ipsum dolor sit amet, nostrud nominati vis ex, essent\r\n                  conceptam eam ad. Cu etiam comprehensam nec. Cibo delicata mei\r\n                  an, eum porro legere no.\r\n                </p> */}\r\n              </div>\r\n              {/* <h3>Order Summary :</h3> */}\r\n              <table className=\"table table-striped nomargin\">\r\n                <tbody>\r\n                  {orderCoompleteDetails.products &&\r\n                    orderCoompleteDetails.products.map((currval) => {\r\n                      console.log(\"currval\", currval);\r\n                      return (\r\n                        <>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>{currval.quantity} &nbsp;x</strong>{\" \"}\r\n                              {currval.product_name}\r\n                            </td>\r\n                            <td>\r\n                              <strong className=\"float-right\">\r\n                                {truncateDecimal(\r\n                                  Number(currval.subtotal) + Number(currval.tax)\r\n                                )}\r\n                              </strong>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n\r\n                  <br />\r\n                  <br />\r\n                  <tr>\r\n                    <td>\r\n                      Order Option{\" \"}\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"tooltip-1\"\r\n                        data-placement=\"top\"\r\n                        title=\"\"\r\n                        data-original-title=\"Please consider 30 minutes of margin for the delivery!\"\r\n                      >\r\n                        <i class=\"icon_question_alt\"></i>\r\n                      </a>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <strong className=\"float-right\">\r\n                        {orderCoompleteDetails.delivery_option == \"pickup\" ? (\r\n                          <>\r\n                            <strong className=\"float-right\">\r\n                              {orderCoompleteDetails.delivery_option}\r\n                              {/* {user.selectedPickUpTime} */}\r\n                            </strong>\r\n                          </>\r\n                        ) : null}\r\n                        {orderCoompleteDetails.delivery_option == \"eatin\" ? (\r\n                          <strong className=\"float-right\">\r\n                            {orderCoompleteDetails.delivery_option}\r\n                          </strong>\r\n                        ) : null}\r\n                        {orderCoompleteDetails.delivery_option == \"delivery\" ? (\r\n                          <strong className=\"float-right\">\r\n                            {orderCoompleteDetails.delivery_option}\r\n                            {user.selectedDeliveryTime}\r\n                          </strong>\r\n                        ) : null}\r\n                      </strong>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      Payment Option{\" \"}\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"tooltip-1\"\r\n                        data-placement=\"top\"\r\n                        title=\"\"\r\n                        data-original-title=\"Please consider 30 minutes of margin for the delivery!\"\r\n                      >\r\n                        <i class=\"icon_question_alt\"></i>\r\n                      </a>\r\n                    </td>\r\n                    <td>\r\n                      <strong className=\"float-right\">\r\n                        {orderCoompleteDetails.pay_method}\r\n                      </strong>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"total_confirm\">TOTAL</td>\r\n                    <td className=\"total_confirm\">\r\n                      <span className=\"float-right\">\r\n                        {orderCoompleteDetails.currency}&nbsp;\r\n                        {orderCoompleteDetails.total}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n};\r\nexport default OrderSuccess;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Cart\\ItemList.jsx",["511","512"],"import React from \"react\";\r\nimport {\r\n  isHappyHourStillActive,\r\n  setTimer,\r\n  truncateDecimal,\r\n} from \"../../state-management/menu/utils\";\r\nconst ItemList = ({\r\n  items,\r\n  currency,\r\n  isPriceWithoutTax,\r\n  timezone,\r\n  onRemove,\r\n}) => {\r\n  const timeOutRef = Array.from({ length: 100 }, () => React.createRef());\r\n\r\n  let refIndex = -1;\r\n  function getItemPrice(item, isStillActive) {\r\n    console.log(\"getItem item is\", item);\r\n    if (item.happyHourItem && isStillActive) {\r\n      return isPriceWithoutTax\r\n        ? truncateDecimal(item.happyHourItem.subTotal)\r\n        : truncateDecimal(item.happyHourItem.grandTotal);\r\n    } else if (item.subTotal && item.grandTotal) {\r\n      return isPriceWithoutTax ? item.subTotal : item.grandTotal;\r\n    }\r\n  }\r\n\r\n  function getDiscountedPrice(item, isStillActive) {\r\n    if (item.happyHourItem && isStillActive) {\r\n      const itemPrice = item.subTotal;\r\n      const itemHappyHourPrice = item.happyHourItem.subTotal;\r\n\r\n      return truncateDecimal(itemPrice - itemHappyHourPrice);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  function renderHappyHourOffers(item, isStillActive) {\r\n    if (isStillActive && item.happyHourItem) {\r\n      switch (item.happyHourDetail.type) {\r\n        case \"Discount\":\r\n        case \"Amount\": {\r\n          const discountedPrice = getDiscountedPrice(item, isStillActive);\r\n\r\n          return <span>{`You saved: ${currency} ${discountedPrice}`}</span>;\r\n        }\r\n        default: {\r\n          const extraQty = item.happyHourItem.freeQty;\r\n\r\n          return extraQty ? (\r\n            <span>{`You recieved : ${extraQty} ${\r\n              extraQty > 1 ? \"extra quantities\" : \"extra quantity\"\r\n            }`}</span>\r\n          ) : null;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function renderPizzaDetails(item) {\r\n    let defaultToppings = \"\";\r\n\r\n    let optionalToppings = \"\";\r\n\r\n    let halfAndHalf = \"\";\r\n\r\n    for (let i = 0; i < item.defaultToppings.length; i++) {\r\n      defaultToppings += `, ${item.defaultToppings[i].topping_name}`;\r\n    }\r\n    defaultToppings = defaultToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    for (let i = 0; i < item.optionalToppings.length; i++) {\r\n      optionalToppings += ` ,${item.optionalToppings[i].topping_name}`;\r\n    }\r\n    optionalToppings = optionalToppings.replace(/[\\s,]+/, \" \").trim();\r\n\r\n    if (item.firstHalf !== null) {\r\n      halfAndHalf = `First Half: ${item.firstHalf.topping_name},`;\r\n      halfAndHalf += ` Second Half: ${item.secondHalf.topping_name}`;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <section className=\"size-and-base-section\">\r\n          <label>Size & Base: {item.selectedBase.name}</label>\r\n        </section>\r\n        <section className=\"toppings-list\">\r\n          {defaultToppings !== \"\" ? <label>Default Toppings: </label> : null}\r\n          <span>{defaultToppings}</span>\r\n          <br />\r\n          {optionalToppings !== \"\" ? <label>Optional Toppings: </label> : null}\r\n          <span>{optionalToppings}</span>\r\n        </section>\r\n        <section className=\"toppings-list\">\r\n          {halfAndHalf !== \"\" ? <label>Half And Half Choice: </label> : null}\r\n          <span>{halfAndHalf}</span>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table table_summary\">\r\n        <tbody>\r\n          {items.map((item, i) => {\r\n            if (item.isHappyHourActive) {\r\n              const result = isHappyHourStillActive(item, timezone);\r\n\r\n              var isStillActive = result.isActive;\r\n              if (isStillActive) {\r\n                refIndex++;\r\n                setTimer(result.distance, timeOutRef[refIndex]);\r\n              }\r\n            }\r\n\r\n            return (\r\n              <>\r\n                <tr>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => onRemove(item)}\r\n                      style={{\r\n                        borderRadius: \"20%\",\r\n                        backgroundColor: \"transparent\",\r\n                        border: \"none\",\r\n                      }}\r\n                      className=\"remove_item\"\r\n                    >\r\n                      <i className=\"icon_minus_alt\" />\r\n                    </button>{\" \"}\r\n                    <strong>{item.qty} &nbsp;x</strong>&nbsp;\r\n                    {item.name}\r\n                  </td>\r\n                  <td>\r\n                    <strong className=\"float-right\">\r\n                      {`${currency} ${\r\n                        truncateDecimal(getItemPrice(item, isStillActive)) ||\r\n                        truncateDecimal(\r\n                          item.qty * Number(item.price).toFixed(2)\r\n                        )\r\n                      }`}\r\n                    </strong>{\" \"}\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            );\r\n          })}\r\n\r\n          {/* })} */}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\nexport default ItemList;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\Checkout\\PaymentFailed.jsx",["513"],"import { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PaymentFailed = () => {\r\n  const menu = useSelector((state) => state.menu);\r\n  return (\r\n    <>\r\n      <div className=\"failed\" style={{ alignItems: \"center\" }}>\r\n        <img\r\n          style={{ marginTop: \"10%\", marginLeft: \"42%\" }}\r\n          src=\"https://i.ibb.co/StsVjS2/Failed.png\"\r\n        />{\" \"}\r\n        <br />\r\n        <p style={{ fontSize: \"50px\", marginLeft: \"30%\" }}>\r\n          Your Payment is Failed\r\n        </p>\r\n        <Link\r\n          style={{ marginLeft: \"40%\", fontSize: \"30px\" }}\r\n          to={`/restId=${menu.restaurantInfo.restaurant_id}/menu`}\r\n        >\r\n          Please try again\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PaymentFailed;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\containers\\Modifiers\\ModifierOption.jsx",["514"],"import React from \"react\";\r\n//import Detours from \"../Detours\";\r\nimport { Radio } from \"antd\";\r\n//import { getForcedModifierDetours } from \"../../../../../utils\";\r\n\r\nexport const ModifierOption = React.memo(\r\n  ({\r\n    option,\r\n    currency,\r\n    forceModifierdetours,\r\n    categoryId,\r\n    isChecked,\r\n    getModifierPrice,\r\n    onSelectionChange,\r\n  }) => {\r\n    //const detours = getForcedModifierDetours(forceModifierdetours, option.id);\r\n\r\n    function handleSelectionChange(selectedDetours) {\r\n      const detourIds = selectedDetours.map((detour) => detour.id).join();\r\n      const selectedForceModifier = {\r\n        ...option,\r\n        categoryId,\r\n        optionalModifiers: selectedDetours,\r\n        detour: detourIds,\r\n        price:\r\n          selectedDetours.reduce(\r\n            (acc, item) => acc + (item.isFree ? 0 : Number(item.price)),\r\n            0\r\n          ) + Number(option.price),\r\n      };\r\n\r\n      onSelectionChange && onSelectionChange(selectedForceModifier);\r\n      console.log(\"price\", getModifierPrice);\r\n    }\r\n\r\n    return (\r\n      <div className=\"modifier-options-container\">\r\n        <section>\r\n          <label className=\"modifier-label\">\r\n            <Radio value={option.id}>{option.name}</Radio>\r\n          </label>\r\n          {/* <span className=\"modifier-amount\">{`${currency} ${getModifierPrice}`}</span> */}\r\n        </section>\r\n        {/* {detours && isChecked ? (\r\n          <Detours\r\n            optionalModifierId={detours}\r\n            getModifierPrice={getModifierPrice}\r\n            onDetourSelectionChange={handleSelectionChange}\r\n          />\r\n        ) : null} */}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ModifierOption;\r\n",["515","516"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ChooseAddress\\AddAddress.jsx",["517","518","519","520","521","522","523"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Input, Radio, Checkbox, InputNumber } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { displayAddressModal } from \"../../state-management/menu/actions\";\r\nimport {\r\n  postAddAddress,\r\n  fetchAddressesList,\r\n} from \"../../state-management/user/asyncActions\";\r\nimport { setSelectedAddress } from \"../../state-management/user/actions\";\r\nimport { openModal, closeModal } from \"../../state-management/modal/actions\";\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nconst AddAddress = (props) => {\r\n  const main = useSelector((state) => state.main);\r\n  const user = useSelector((state) => state.user);\r\n  const modal = useSelector((state) => state.modal);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    name: `${user.user.firstName} ${user.user.lastName}`,\r\n    //address1: user.deliveryOption.userAddress.address1.address_1,\r\n    address1: \"\",\r\n    address2: \"\",\r\n    // city: user.deliveryOption.userAddress.city,\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    zipcode: \"\",\r\n    // country: user.deliveryOption.userAddress.country,\r\n    // zipcode: user.deliveryOption.userAddress.zipcode,\r\n    // //phone: this.props.user.mobile,\r\n    //phonecode: Number(this.props.selectedRestaurant.phone_code),\r\n    type: \"Home\",\r\n    is_default: \"0\",\r\n    client_id: user.user.clientId,\r\n    waitingOverlay: false,\r\n    submitText: \"Please fill in all the mandatory(*) fields!\",\r\n    submitPressed: false,\r\n    error: false,\r\n    ...(user.deliveryOption ? user.deliveryOption.userAddress : undefined),\r\n    ...modal.modal.state.address,\r\n  });\r\n  const closeLoginModal = () => {\r\n    // dispatch(displayAddressModal(false));\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  const handleNameChange = (value) => {\r\n    setState({ ...state, name: value });\r\n  };\r\n  const handleAddress2Change = (value) => {\r\n    setState({ ...state, address2: value });\r\n  };\r\n  const handleStateChange = (value) => {\r\n    setState({ ...state, state: value });\r\n  };\r\n\r\n  const locationOfDelivery = (value) => {\r\n    setState({ ...state, type: value });\r\n  };\r\n\r\n  const onChangeSetDefault = (value) => {\r\n    setState({ ...state, is_default: state[\"is_default\"] === \"0\" ? \"1\" : \"0\" });\r\n  };\r\n\r\n  const handleResponse = (payload) => {\r\n    setState({ ...state, waitingOverlay: false, submitPressed: false });\r\n\r\n    if (payload.success) {\r\n      //this.props.successCallback && this.props.successCallback();\r\n      //   this.props.modalState.selectAddress &&\r\n      dispatch(setSelectedAddress(state));\r\n      closeLoginModal();\r\n    } else {\r\n      setState({ ...state, submitText: \"SUBMIT\" });\r\n      setState({ ...state, error: payload.message });\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = async () => {\r\n    console.log(\"state is\", state);\r\n\r\n    setState({\r\n      ...state,\r\n      waitingOverlay: true,\r\n      submitText: \"Please Wait...\",\r\n      error: false,\r\n      submitPressed: true,\r\n    });\r\n    const { existingDefaultAddress } = modal.modal.state;\r\n    console.log(\"existing address\", existingDefaultAddress);\r\n\r\n    //if k andar yeh b aaega ==> existingDefaultAddress &&\r\n    if (existingDefaultAddress && state[\"is_default\"] === \"1\") {\r\n      const { payload: payload1 } = await dispatch(\r\n        postAddAddress(\r\n          {\r\n            ...existingDefaultAddress,\r\n            is_default: \"0\",\r\n          },\r\n          true\r\n        )\r\n      );\r\n      !payload1.success && handleResponse(payload1);\r\n      if (payload1.success) {\r\n        const { payload } = await dispatch(\r\n          postAddAddress(state, modal.modal.state.editMode)\r\n        );\r\n\r\n        handleResponse(payload);\r\n      }\r\n    } else {\r\n      const { payload } = await dispatch(\r\n        postAddAddress(\r\n          state,\r\n\r\n          modal.modal.state.editMode\r\n        )\r\n      );\r\n      if (payload.success) {\r\n        props.refetchAddresses(true);\r\n      }\r\n\r\n      console.log(\"payload on post\", payload);\r\n      setState({ ...state, payload });\r\n\r\n      handleResponse(payload);\r\n\r\n      dispatch(closeModal());\r\n    }\r\n  };\r\n\r\n  // const fetchAddressList = async () => {\r\n  //   const payload = await dispatch(fetchAddressesList(user.user.clientId));\r\n  //   const resp = payload.data;\r\n  //   setState({ ...state, resp });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log(\"state in add address\", state);\r\n  }, [state]);\r\n  return (\r\n    <>\r\n      <div id=\"parent\" className=\"modal-container\">\r\n        <div className=\"align-container-center\">\r\n          <div className=\"choose-address-box\" style={{ height: \"auto\" }}>\r\n            <div className=\"close\" style={{ marginTop: \"10px\" }}>\r\n              <IconButton\r\n                onClick={closeLoginModal}\r\n                style={\r\n                  {\r\n                    //   backgroundColor: \"#6244da\",\r\n                    //   marginRight: \"-45px\",\r\n                    //   marginTop: \"-35px\",\r\n                  }\r\n                }\r\n              >\r\n                {\" \"}\r\n                <CloseIcon style={{ color: \"Black\" }} />{\" \"}\r\n              </IconButton>\r\n            </div>\r\n            <div\r\n              className=\"header\"\r\n              style={{ marginLeft: \"35%\", marginTop: \"30px\" }}\r\n            >\r\n              <strong style={{ color: \"#5d5e5e\", fontSize: \"20px\" }}>\r\n                {modal.modal.state.editMode ? \"Edit Address\" : \"Add Address\"}\r\n              </strong>\r\n            </div>\r\n            <div className=\"content\" style={{ marginTop: \"-10px\" }}>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  size=\"medium\"\r\n                  placeholder=\"Full Name\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.name || null}\r\n                  onChange={(e) => handleNameChange(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.address1 || null}\r\n                  //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.address2}\r\n                  onChange={(e) => handleAddress2Change(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  disabled\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.city || null}\r\n                  //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  size=\"medium\"\r\n                  placeholder=\"state\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.state || null}\r\n                  onChange={(e) => handleStateChange(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  disabled\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.zipcode || null}\r\n                  //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  disabled\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ borderRadius: \"5px\" }}\r\n                  value={state.country || null}\r\n                  //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n\r\n                  display: \"flex\",\r\n                  marginLeft: \"30px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ width: \"25%\", borderRadius: \"5px\" }}\r\n                  //value={this.state.address2 || null}\r\n                  //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n                />\r\n                &nbsp;\r\n                <Input\r\n                  size=\"medium\"\r\n                  placeholder=\"Address Line 2\"\r\n                  style={{ width: \"75%\", borderRadius: \"5px\" }}\r\n                  //value={this.state.address2 || null}\r\n                  //onChange={(e) => this.handleAddress2Change(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                className=\"address-type\"\r\n                style={{\r\n                  marginLeft: \"15px\",\r\n                  // marginTop: \"5px\",\r\n                }}\r\n              >\r\n                <input\r\n                  className=\"check_payment\"\r\n                  type=\"radio\"\r\n                  name=\"delivery_type\"\r\n                  id=\"home\"\r\n                  value=\"home\"\r\n                  onChange={(e) => locationOfDelivery(e.target.value)}\r\n                />\r\n                <label\r\n                  //onClick={paymentoptioncardClick}\r\n                  for=\"home\"\r\n                  class=\"btn_radio_type\"\r\n                >\r\n                  Home &nbsp;\r\n                  <HomeIcon />\r\n                </label>\r\n\r\n                <input\r\n                  className=\"check_payment\"\r\n                  type=\"radio\"\r\n                  name=\"delivery_type\"\r\n                  id=\"work\"\r\n                  value=\"work\"\r\n                  onChange={(e) => locationOfDelivery(e.target.value)}\r\n                />\r\n                <label\r\n                  //onClick={paymentoptioncardClick}\r\n                  for=\"work\"\r\n                  class=\"btn_radio_type\"\r\n                >\r\n                  Work &nbsp; <WorkIcon />\r\n                </label>\r\n\r\n                <input\r\n                  className=\"check_payment\"\r\n                  type=\"radio\"\r\n                  name=\"delivery_type\"\r\n                  id=\"others\"\r\n                  value=\"others\"\r\n                  onChange={(e) => locationOfDelivery(e.target.value)}\r\n                />\r\n                <label\r\n                  //onClick={paymentoptioncardClick}\r\n                  for=\"others\"\r\n                  class=\"btn_radio_type\"\r\n                >\r\n                  Others &nbsp; <HomeIcon />\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"set-default\" style={{ marginLeft: \"30px\" }}>\r\n                <Checkbox\r\n                  checked={state[\"is_default\"] === \"1\"}\r\n                  onChange={(e) => onChangeSetDefault(e.target.value)}\r\n                >\r\n                  {state[\"is_default\"] === \"1\" ? \"Default\" : \"Set To Default?\"}\r\n                </Checkbox>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginLeft: \"25px\",\r\n                  marginBottom: \"10px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={onFormSubmit}\r\n                  style={{\r\n                    backgroundColor: \"black\",\r\n                    padding: \"7px\",\r\n                    color: \"white\",\r\n                    width: \"90%\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AddAddress;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\ManageAddress\\Address.jsx",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\online-ordering-new\\src\\components\\AppModal\\AppModal.jsx",["524","525","526","527","528"],{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","replacedBy":"532"},{"ruleId":"533","severity":1,"message":"534","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":18},{"ruleId":"533","severity":1,"message":"537","line":3,"column":20,"nodeType":"535","messageId":"536","endLine":3,"endColumn":25},{"ruleId":"533","severity":1,"message":"538","line":3,"column":27,"nodeType":"535","messageId":"536","endLine":3,"endColumn":33},{"ruleId":"533","severity":1,"message":"539","line":5,"column":8,"nodeType":"535","messageId":"536","endLine":5,"endColumn":17},{"ruleId":"533","severity":1,"message":"540","line":6,"column":8,"nodeType":"535","messageId":"536","endLine":6,"endColumn":14},{"ruleId":"533","severity":1,"message":"541","line":7,"column":8,"nodeType":"535","messageId":"536","endLine":7,"endColumn":16},{"ruleId":"533","severity":1,"message":"542","line":12,"column":10,"nodeType":"535","messageId":"536","endLine":12,"endColumn":15},{"ruleId":"533","severity":1,"message":"543","line":12,"column":17,"nodeType":"535","messageId":"536","endLine":12,"endColumn":25},{"ruleId":"533","severity":1,"message":"544","line":13,"column":9,"nodeType":"535","messageId":"536","endLine":13,"endColumn":13},{"ruleId":"533","severity":1,"message":"545","line":8,"column":10,"nodeType":"535","messageId":"536","endLine":8,"endColumn":22},{"ruleId":"533","severity":1,"message":"546","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":14},{"ruleId":"533","severity":1,"message":"547","line":19,"column":9,"nodeType":"535","messageId":"536","endLine":19,"endColumn":16},{"ruleId":"548","severity":1,"message":"549","line":56,"column":13,"nodeType":"550","endLine":59,"endColumn":14},{"ruleId":"551","severity":1,"message":"552","line":58,"column":20,"nodeType":"553","messageId":"554","endLine":58,"endColumn":41},{"ruleId":"555","severity":1,"message":"556","line":64,"column":17,"nodeType":"550","endLine":64,"endColumn":71},{"ruleId":"548","severity":1,"message":"549","line":66,"column":15,"nodeType":"550","endLine":66,"endColumn":64},{"ruleId":"548","severity":1,"message":"557","line":89,"column":19,"nodeType":"550","endLine":91,"endColumn":20},{"ruleId":"548","severity":1,"message":"557","line":103,"column":23,"nodeType":"550","endLine":103,"endColumn":51},{"ruleId":"548","severity":1,"message":"557","line":108,"column":23,"nodeType":"550","endLine":108,"endColumn":51},{"ruleId":"548","severity":1,"message":"557","line":123,"column":25,"nodeType":"550","endLine":127,"endColumn":26},{"ruleId":"548","severity":1,"message":"557","line":135,"column":25,"nodeType":"550","endLine":139,"endColumn":26},{"ruleId":"558","severity":1,"message":"559","line":137,"column":27,"nodeType":"560","endLine":137,"endColumn":53},{"ruleId":"548","severity":1,"message":"557","line":147,"column":25,"nodeType":"550","endLine":150,"endColumn":26},{"ruleId":"548","severity":1,"message":"557","line":155,"column":25,"nodeType":"550","endLine":158,"endColumn":26},{"ruleId":"548","severity":1,"message":"557","line":167,"column":19,"nodeType":"550","endLine":172,"endColumn":20},{"ruleId":"548","severity":1,"message":"557","line":177,"column":19,"nodeType":"550","endLine":182,"endColumn":20},{"ruleId":"555","severity":1,"message":"561","line":11,"column":17,"nodeType":"550","endLine":11,"endColumn":66},{"ruleId":"533","severity":1,"message":"562","line":23,"column":8,"nodeType":"535","messageId":"536","endLine":23,"endColumn":20},{"ruleId":"533","severity":1,"message":"563","line":26,"column":8,"nodeType":"535","messageId":"536","endLine":26,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":278,"column":36,"nodeType":"566","messageId":"567","endLine":278,"endColumn":38},{"ruleId":"564","severity":1,"message":"565","line":281,"column":93,"nodeType":"566","messageId":"567","endLine":281,"endColumn":95},{"ruleId":"568","severity":1,"message":"569","line":469,"column":29,"nodeType":"570","messageId":"571","endLine":485,"endColumn":6},{"ruleId":"572","severity":1,"message":"573","line":469,"column":37,"nodeType":"570","messageId":"574","endLine":469,"endColumn":39},{"ruleId":"533","severity":1,"message":"575","line":13,"column":3,"nodeType":"535","messageId":"536","endLine":13,"endColumn":20},{"ruleId":"533","severity":1,"message":"576","line":14,"column":3,"nodeType":"535","messageId":"536","endLine":14,"endColumn":10},{"ruleId":"533","severity":1,"message":"577","line":15,"column":3,"nodeType":"535","messageId":"536","endLine":15,"endColumn":13},{"ruleId":"533","severity":1,"message":"578","line":16,"column":3,"nodeType":"535","messageId":"536","endLine":16,"endColumn":17},{"ruleId":"533","severity":1,"message":"579","line":18,"column":3,"nodeType":"535","messageId":"536","endLine":18,"endColumn":13},{"ruleId":"533","severity":1,"message":"580","line":19,"column":3,"nodeType":"535","messageId":"536","endLine":19,"endColumn":17},{"ruleId":"533","severity":1,"message":"581","line":20,"column":3,"nodeType":"535","messageId":"536","endLine":20,"endColumn":22},{"ruleId":"533","severity":1,"message":"582","line":23,"column":3,"nodeType":"535","messageId":"536","endLine":23,"endColumn":29},{"ruleId":"533","severity":1,"message":"583","line":24,"column":3,"nodeType":"535","messageId":"536","endLine":24,"endColumn":22},{"ruleId":"533","severity":1,"message":"584","line":27,"column":10,"nodeType":"535","messageId":"536","endLine":27,"endColumn":28},{"ruleId":"533","severity":1,"message":"585","line":28,"column":10,"nodeType":"535","messageId":"536","endLine":28,"endColumn":31},{"ruleId":"533","severity":1,"message":"586","line":30,"column":3,"nodeType":"535","messageId":"536","endLine":30,"endColumn":22},{"ruleId":"533","severity":1,"message":"587","line":31,"column":3,"nodeType":"535","messageId":"536","endLine":31,"endColumn":21},{"ruleId":"533","severity":1,"message":"588","line":33,"column":10,"nodeType":"535","messageId":"536","endLine":33,"endColumn":26},{"ruleId":"589","severity":1,"message":"590","line":64,"column":6,"nodeType":"591","endLine":64,"endColumn":26,"suggestions":"592"},{"ruleId":"533","severity":1,"message":"593","line":1,"column":16,"nodeType":"535","messageId":"536","endLine":1,"endColumn":25},{"ruleId":"533","severity":1,"message":"594","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":15},{"ruleId":"533","severity":1,"message":"595","line":9,"column":3,"nodeType":"535","messageId":"536","endLine":9,"endColumn":17},{"ruleId":"533","severity":1,"message":"596","line":11,"column":8,"nodeType":"535","messageId":"536","endLine":11,"endColumn":18},{"ruleId":"533","severity":1,"message":"597","line":12,"column":8,"nodeType":"535","messageId":"536","endLine":12,"endColumn":22},{"ruleId":"533","severity":1,"message":"598","line":19,"column":8,"nodeType":"535","messageId":"536","endLine":19,"endColumn":18},{"ruleId":"533","severity":1,"message":"599","line":24,"column":8,"nodeType":"535","messageId":"536","endLine":24,"endColumn":14},{"ruleId":"533","severity":1,"message":"600","line":26,"column":8,"nodeType":"535","messageId":"536","endLine":26,"endColumn":13},{"ruleId":"533","severity":1,"message":"601","line":28,"column":8,"nodeType":"535","messageId":"536","endLine":28,"endColumn":21},{"ruleId":"533","severity":1,"message":"602","line":29,"column":8,"nodeType":"535","messageId":"536","endLine":29,"endColumn":18},{"ruleId":"533","severity":1,"message":"603","line":33,"column":9,"nodeType":"535","messageId":"536","endLine":33,"endColumn":13},{"ruleId":"533","severity":1,"message":"604","line":68,"column":10,"nodeType":"535","messageId":"536","endLine":68,"endColumn":26},{"ruleId":"589","severity":1,"message":"605","line":89,"column":6,"nodeType":"591","endLine":89,"endColumn":8,"suggestions":"606"},{"ruleId":"533","severity":1,"message":"607","line":201,"column":9,"nodeType":"535","messageId":"536","endLine":201,"endColumn":15},{"ruleId":"558","severity":1,"message":"559","line":84,"column":11,"nodeType":"560","endLine":84,"endColumn":30},{"ruleId":"555","severity":1,"message":"556","line":91,"column":15,"nodeType":"550","endLine":91,"endColumn":58},{"ruleId":"533","severity":1,"message":"608","line":8,"column":3,"nodeType":"535","messageId":"536","endLine":8,"endColumn":18},{"ruleId":"548","severity":1,"message":"549","line":6,"column":5,"nodeType":"550","endLine":9,"endColumn":6},{"ruleId":"555","severity":1,"message":"556","line":13,"column":11,"nodeType":"550","endLine":13,"endColumn":44},{"ruleId":"533","severity":1,"message":"609","line":8,"column":47,"nodeType":"535","messageId":"536","endLine":8,"endColumn":53},{"ruleId":"548","severity":1,"message":"557","line":130,"column":11,"nodeType":"550","endLine":130,"endColumn":43},{"ruleId":"533","severity":1,"message":"593","line":1,"column":27,"nodeType":"535","messageId":"536","endLine":1,"endColumn":36},{"ruleId":"533","severity":1,"message":"610","line":13,"column":7,"nodeType":"535","messageId":"536","endLine":13,"endColumn":22},{"ruleId":"572","severity":1,"message":"611","line":18,"column":28,"nodeType":"570","messageId":"612","endLine":18,"endColumn":30},{"ruleId":"572","severity":1,"message":"611","line":23,"column":27,"nodeType":"570","messageId":"612","endLine":23,"endColumn":29},{"ruleId":"533","severity":1,"message":"613","line":22,"column":11,"nodeType":"535","messageId":"536","endLine":22,"endColumn":29},{"ruleId":"589","severity":1,"message":"614","line":31,"column":74,"nodeType":"591","endLine":33,"endColumn":6,"suggestions":"615"},{"ruleId":"533","severity":1,"message":"616","line":86,"column":11,"nodeType":"535","messageId":"536","endLine":86,"endColumn":23},{"ruleId":"533","severity":1,"message":"617","line":1,"column":17,"nodeType":"535","messageId":"536","endLine":1,"endColumn":25},{"ruleId":"533","severity":1,"message":"618","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":16},{"ruleId":"533","severity":1,"message":"619","line":6,"column":10,"nodeType":"535","messageId":"536","endLine":6,"endColumn":19},{"ruleId":"533","severity":1,"message":"620","line":6,"column":21,"nodeType":"535","messageId":"536","endLine":6,"endColumn":31},{"ruleId":"533","severity":1,"message":"621","line":9,"column":10,"nodeType":"535","messageId":"536","endLine":9,"endColumn":32},{"ruleId":"533","severity":1,"message":"622","line":6,"column":8,"nodeType":"535","messageId":"536","endLine":6,"endColumn":25},{"ruleId":"533","severity":1,"message":"623","line":12,"column":22,"nodeType":"535","messageId":"536","endLine":12,"endColumn":35},{"ruleId":"533","severity":1,"message":"624","line":15,"column":9,"nodeType":"535","messageId":"536","endLine":15,"endColumn":14},{"ruleId":"533","severity":1,"message":"625","line":16,"column":9,"nodeType":"535","messageId":"536","endLine":16,"endColumn":14},{"ruleId":"533","severity":1,"message":"626","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"627","line":2,"column":21,"nodeType":"535","messageId":"536","endLine":2,"endColumn":26},{"ruleId":"533","severity":1,"message":"628","line":2,"column":28,"nodeType":"535","messageId":"536","endLine":2,"endColumn":33},{"ruleId":"572","severity":1,"message":"629","line":65,"column":35,"nodeType":"570","messageId":"574","endLine":65,"endColumn":37},{"ruleId":"572","severity":1,"message":"629","line":8,"column":39,"nodeType":"570","messageId":"574","endLine":8,"endColumn":41},{"ruleId":"533","severity":1,"message":"626","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"627","line":2,"column":21,"nodeType":"535","messageId":"536","endLine":2,"endColumn":26},{"ruleId":"533","severity":1,"message":"628","line":2,"column":28,"nodeType":"535","messageId":"536","endLine":2,"endColumn":33},{"ruleId":"533","severity":1,"message":"593","line":1,"column":17,"nodeType":"535","messageId":"536","endLine":1,"endColumn":26},{"ruleId":"533","severity":1,"message":"617","line":1,"column":28,"nodeType":"535","messageId":"536","endLine":1,"endColumn":36},{"ruleId":"533","severity":1,"message":"630","line":6,"column":3,"nodeType":"535","messageId":"536","endLine":6,"endColumn":11},{"ruleId":"533","severity":1,"message":"563","line":10,"column":8,"nodeType":"535","messageId":"536","endLine":10,"endColumn":13},{"ruleId":"533","severity":1,"message":"603","line":16,"column":9,"nodeType":"535","messageId":"536","endLine":16,"endColumn":13},{"ruleId":"533","severity":1,"message":"631","line":208,"column":12,"nodeType":"535","messageId":"536","endLine":208,"endColumn":30},{"ruleId":"533","severity":1,"message":"632","line":227,"column":9,"nodeType":"535","messageId":"536","endLine":227,"endColumn":23},{"ruleId":"533","severity":1,"message":"633","line":251,"column":7,"nodeType":"535","messageId":"536","endLine":251,"endColumn":22},{"ruleId":"634","severity":1,"message":"635","line":277,"column":65,"nodeType":"636","messageId":"637","endLine":277,"endColumn":67},{"ruleId":"533","severity":1,"message":"638","line":65,"column":9,"nodeType":"535","messageId":"536","endLine":65,"endColumn":25},{"ruleId":"533","severity":1,"message":"639","line":129,"column":31,"nodeType":"535","messageId":"536","endLine":129,"endColumn":38},{"ruleId":"640","severity":1,"message":"641","line":162,"column":5,"nodeType":"642","messageId":"643","endLine":182,"endColumn":6},{"ruleId":"644","severity":1,"message":"645","line":231,"column":19,"nodeType":"535","messageId":"646","endLine":231,"endColumn":26},{"ruleId":"644","severity":1,"message":"645","line":232,"column":16,"nodeType":"535","messageId":"646","endLine":232,"endColumn":23},{"ruleId":"644","severity":1,"message":"645","line":234,"column":17,"nodeType":"535","messageId":"646","endLine":234,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":290,"column":9,"nodeType":"649","messageId":"637","endLine":290,"endColumn":19},{"ruleId":"533","severity":1,"message":"639","line":307,"column":31,"nodeType":"535","messageId":"536","endLine":307,"endColumn":38},{"ruleId":"533","severity":1,"message":"650","line":17,"column":10,"nodeType":"535","messageId":"536","endLine":17,"endColumn":22},{"ruleId":"533","severity":1,"message":"544","line":20,"column":9,"nodeType":"535","messageId":"536","endLine":20,"endColumn":13},{"ruleId":"533","severity":1,"message":"651","line":22,"column":10,"nodeType":"535","messageId":"536","endLine":22,"endColumn":15},{"ruleId":"533","severity":1,"message":"652","line":22,"column":17,"nodeType":"535","messageId":"536","endLine":22,"endColumn":25},{"ruleId":"555","severity":1,"message":"561","line":123,"column":17,"nodeType":"550","endLine":128,"endColumn":19},{"ruleId":"533","severity":1,"message":"653","line":12,"column":8,"nodeType":"535","messageId":"536","endLine":12,"endColumn":24},{"ruleId":"533","severity":1,"message":"654","line":19,"column":10,"nodeType":"535","messageId":"536","endLine":19,"endColumn":31},{"ruleId":"533","severity":1,"message":"655","line":21,"column":8,"nodeType":"535","messageId":"536","endLine":21,"endColumn":14},{"ruleId":"533","severity":1,"message":"544","line":24,"column":9,"nodeType":"535","messageId":"536","endLine":24,"endColumn":13},{"ruleId":"533","severity":1,"message":"656","line":115,"column":9,"nodeType":"535","messageId":"536","endLine":115,"endColumn":22},{"ruleId":"555","severity":1,"message":"561","line":298,"column":17,"nodeType":"550","endLine":303,"endColumn":19},{"ruleId":"533","severity":1,"message":"594","line":1,"column":10,"nodeType":"535","messageId":"536","endLine":1,"endColumn":15},{"ruleId":"533","severity":1,"message":"657","line":14,"column":8,"nodeType":"535","messageId":"536","endLine":14,"endColumn":17},{"ruleId":"533","severity":1,"message":"540","line":15,"column":8,"nodeType":"535","messageId":"536","endLine":15,"endColumn":14},{"ruleId":"533","severity":1,"message":"658","line":38,"column":9,"nodeType":"535","messageId":"536","endLine":38,"endColumn":20},{"ruleId":"589","severity":1,"message":"659","line":78,"column":6,"nodeType":"591","endLine":78,"endColumn":8,"suggestions":"660"},{"ruleId":"533","severity":1,"message":"539","line":1,"column":8,"nodeType":"535","messageId":"536","endLine":1,"endColumn":17},{"ruleId":"533","severity":1,"message":"661","line":12,"column":3,"nodeType":"535","messageId":"536","endLine":12,"endColumn":19},{"ruleId":"533","severity":1,"message":"544","line":20,"column":9,"nodeType":"535","messageId":"536","endLine":20,"endColumn":13},{"ruleId":"589","severity":1,"message":"662","line":37,"column":6,"nodeType":"591","endLine":37,"endColumn":8,"suggestions":"663"},{"ruleId":"634","severity":1,"message":"635","line":196,"column":32,"nodeType":"636","messageId":"637","endLine":196,"endColumn":34},{"ruleId":"634","severity":1,"message":"635","line":197,"column":32,"nodeType":"636","messageId":"637","endLine":197,"endColumn":34},{"ruleId":"533","severity":1,"message":"581","line":7,"column":10,"nodeType":"535","messageId":"536","endLine":7,"endColumn":29},{"ruleId":"533","severity":1,"message":"664","line":12,"column":8,"nodeType":"535","messageId":"536","endLine":12,"endColumn":26},{"ruleId":"533","severity":1,"message":"665","line":13,"column":3,"nodeType":"535","messageId":"536","endLine":13,"endColumn":19},{"ruleId":"533","severity":1,"message":"666","line":14,"column":3,"nodeType":"535","messageId":"536","endLine":14,"endColumn":12},{"ruleId":"533","severity":1,"message":"667","line":16,"column":10,"nodeType":"535","messageId":"536","endLine":16,"endColumn":22},{"ruleId":"533","severity":1,"message":"668","line":18,"column":10,"nodeType":"535","messageId":"536","endLine":18,"endColumn":14},{"ruleId":"533","severity":1,"message":"669","line":21,"column":8,"nodeType":"535","messageId":"536","endLine":21,"endColumn":17},{"ruleId":"533","severity":1,"message":"619","line":22,"column":10,"nodeType":"535","messageId":"536","endLine":22,"endColumn":19},{"ruleId":"533","severity":1,"message":"670","line":28,"column":9,"nodeType":"535","messageId":"536","endLine":28,"endColumn":13},{"ruleId":"533","severity":1,"message":"671","line":31,"column":10,"nodeType":"535","messageId":"536","endLine":31,"endColumn":23},{"ruleId":"533","severity":1,"message":"672","line":31,"column":25,"nodeType":"535","messageId":"536","endLine":31,"endColumn":41},{"ruleId":"533","severity":1,"message":"673","line":44,"column":10,"nodeType":"535","messageId":"536","endLine":44,"endColumn":26},{"ruleId":"533","severity":1,"message":"674","line":44,"column":28,"nodeType":"535","messageId":"536","endLine":44,"endColumn":47},{"ruleId":"533","severity":1,"message":"675","line":77,"column":9,"nodeType":"535","messageId":"536","endLine":77,"endColumn":33},{"ruleId":"676","severity":1,"message":"677","line":387,"column":9,"nodeType":"678","messageId":"679","endLine":468,"endColumn":10},{"ruleId":"533","severity":1,"message":"544","line":12,"column":9,"nodeType":"535","messageId":"536","endLine":12,"endColumn":13},{"ruleId":"589","severity":1,"message":"680","line":41,"column":6,"nodeType":"591","endLine":41,"endColumn":8,"suggestions":"681"},{"ruleId":"589","severity":1,"message":"682","line":171,"column":6,"nodeType":"591","endLine":171,"endColumn":8,"suggestions":"683"},{"ruleId":"533","severity":1,"message":"539","line":1,"column":8,"nodeType":"535","messageId":"536","endLine":1,"endColumn":17},{"ruleId":"533","severity":1,"message":"618","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":14},{"ruleId":"533","severity":1,"message":"684","line":6,"column":8,"nodeType":"535","messageId":"536","endLine":6,"endColumn":32},{"ruleId":"533","severity":1,"message":"685","line":7,"column":8,"nodeType":"535","messageId":"536","endLine":7,"endColumn":17},{"ruleId":"533","severity":1,"message":"686","line":11,"column":3,"nodeType":"535","messageId":"536","endLine":11,"endColumn":16},{"ruleId":"533","severity":1,"message":"630","line":16,"column":3,"nodeType":"535","messageId":"536","endLine":16,"endColumn":11},{"ruleId":"533","severity":1,"message":"687","line":19,"column":10,"nodeType":"535","messageId":"536","endLine":19,"endColumn":20},{"ruleId":"533","severity":1,"message":"688","line":27,"column":10,"nodeType":"535","messageId":"536","endLine":27,"endColumn":36},{"ruleId":"533","severity":1,"message":"689","line":79,"column":10,"nodeType":"535","messageId":"536","endLine":79,"endColumn":14},{"ruleId":"533","severity":1,"message":"690","line":79,"column":16,"nodeType":"535","messageId":"536","endLine":79,"endColumn":23},{"ruleId":"533","severity":1,"message":"543","line":81,"column":17,"nodeType":"535","messageId":"536","endLine":81,"endColumn":25},{"ruleId":"533","severity":1,"message":"691","line":100,"column":11,"nodeType":"535","messageId":"536","endLine":100,"endColumn":26},{"ruleId":"589","severity":1,"message":"692","line":122,"column":6,"nodeType":"591","endLine":122,"endColumn":8,"suggestions":"693"},{"ruleId":"533","severity":1,"message":"633","line":277,"column":7,"nodeType":"535","messageId":"536","endLine":277,"endColumn":22},{"ruleId":"634","severity":1,"message":"635","line":404,"column":27,"nodeType":"636","messageId":"637","endLine":404,"endColumn":29},{"ruleId":"533","severity":1,"message":"639","line":484,"column":23,"nodeType":"535","messageId":"536","endLine":484,"endColumn":30},{"ruleId":"634","severity":1,"message":"635","line":488,"column":16,"nodeType":"636","messageId":"637","endLine":488,"endColumn":18},{"ruleId":"634","severity":1,"message":"635","line":490,"column":41,"nodeType":"636","messageId":"637","endLine":490,"endColumn":43},{"ruleId":"634","severity":1,"message":"635","line":492,"column":48,"nodeType":"636","messageId":"637","endLine":492,"endColumn":50},{"ruleId":"533","severity":1,"message":"617","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":18},{"ruleId":"694","severity":1,"message":"695","line":21,"column":7,"nodeType":"696","messageId":"697","endLine":21,"endColumn":27,"fix":"698"},{"ruleId":"572","severity":1,"message":"611","line":35,"column":20,"nodeType":"570","messageId":"612","endLine":35,"endColumn":22},{"ruleId":"647","severity":1,"message":"699","line":151,"column":5,"nodeType":"649","messageId":"637","endLine":151,"endColumn":13},{"ruleId":"533","severity":1,"message":"700","line":18,"column":10,"nodeType":"535","messageId":"536","endLine":18,"endColumn":22},{"ruleId":"533","severity":1,"message":"602","line":23,"column":8,"nodeType":"535","messageId":"536","endLine":23,"endColumn":18},{"ruleId":"533","severity":1,"message":"701","line":24,"column":10,"nodeType":"535","messageId":"536","endLine":24,"endColumn":18},{"ruleId":"533","severity":1,"message":"630","line":28,"column":3,"nodeType":"535","messageId":"536","endLine":28,"endColumn":11},{"ruleId":"533","severity":1,"message":"620","line":31,"column":21,"nodeType":"535","messageId":"536","endLine":31,"endColumn":31},{"ruleId":"533","severity":1,"message":"702","line":93,"column":9,"nodeType":"535","messageId":"536","endLine":93,"endColumn":19},{"ruleId":"533","severity":1,"message":"689","line":102,"column":10,"nodeType":"535","messageId":"536","endLine":102,"endColumn":14},{"ruleId":"589","severity":1,"message":"703","line":126,"column":6,"nodeType":"591","endLine":126,"endColumn":11,"suggestions":"704"},{"ruleId":"533","severity":1,"message":"691","line":131,"column":11,"nodeType":"535","messageId":"536","endLine":131,"endColumn":26},{"ruleId":"589","severity":1,"message":"705","line":153,"column":6,"nodeType":"591","endLine":153,"endColumn":8,"suggestions":"706"},{"ruleId":"533","severity":1,"message":"707","line":283,"column":9,"nodeType":"535","messageId":"536","endLine":283,"endColumn":27},{"ruleId":"533","severity":1,"message":"708","line":429,"column":9,"nodeType":"535","messageId":"536","endLine":429,"endColumn":27},{"ruleId":"589","severity":1,"message":"709","line":555,"column":13,"nodeType":"570","endLine":565,"endColumn":4},{"ruleId":"589","severity":1,"message":"710","line":565,"column":6,"nodeType":"591","endLine":565,"endColumn":17,"suggestions":"711"},{"ruleId":"555","severity":1,"message":"561","line":636,"column":15,"nodeType":"550","endLine":640,"endColumn":17},{"ruleId":"634","severity":1,"message":"635","line":846,"column":19,"nodeType":"636","messageId":"637","endLine":846,"endColumn":21},{"ruleId":"634","severity":1,"message":"635","line":864,"column":24,"nodeType":"636","messageId":"637","endLine":864,"endColumn":26},{"ruleId":"634","severity":1,"message":"635","line":882,"column":26,"nodeType":"636","messageId":"637","endLine":882,"endColumn":28},{"ruleId":"634","severity":1,"message":"635","line":900,"column":26,"nodeType":"636","messageId":"637","endLine":900,"endColumn":28},{"ruleId":"634","severity":1,"message":"635","line":918,"column":26,"nodeType":"636","messageId":"637","endLine":918,"endColumn":28},{"ruleId":"634","severity":1,"message":"635","line":936,"column":26,"nodeType":"636","messageId":"637","endLine":936,"endColumn":28},{"ruleId":"634","severity":1,"message":"635","line":993,"column":32,"nodeType":"636","messageId":"637","endLine":993,"endColumn":34},{"ruleId":"533","severity":1,"message":"540","line":8,"column":8,"nodeType":"535","messageId":"536","endLine":8,"endColumn":14},{"ruleId":"533","severity":1,"message":"712","line":9,"column":8,"nodeType":"535","messageId":"536","endLine":9,"endColumn":22},{"ruleId":"533","severity":1,"message":"599","line":10,"column":8,"nodeType":"535","messageId":"536","endLine":10,"endColumn":14},{"ruleId":"634","severity":1,"message":"635","line":38,"column":24,"nodeType":"636","messageId":"637","endLine":38,"endColumn":26},{"ruleId":"572","severity":1,"message":"611","line":52,"column":25,"nodeType":"570","messageId":"612","endLine":52,"endColumn":27},{"ruleId":"533","severity":1,"message":"713","line":63,"column":7,"nodeType":"535","messageId":"536","endLine":63,"endColumn":17},{"ruleId":"533","severity":1,"message":"714","line":74,"column":13,"nodeType":"535","messageId":"536","endLine":74,"endColumn":26},{"ruleId":"634","severity":1,"message":"635","line":76,"column":35,"nodeType":"636","messageId":"637","endLine":76,"endColumn":37},{"ruleId":"589","severity":1,"message":"715","line":85,"column":6,"nodeType":"591","endLine":85,"endColumn":8,"suggestions":"716"},{"ruleId":"548","severity":1,"message":"549","line":142,"column":23,"nodeType":"550","endLine":148,"endColumn":24},{"ruleId":"634","severity":1,"message":"635","line":155,"column":64,"nodeType":"636","messageId":"637","endLine":155,"endColumn":66},{"ruleId":"634","severity":1,"message":"635","line":163,"column":64,"nodeType":"636","messageId":"637","endLine":163,"endColumn":66},{"ruleId":"634","severity":1,"message":"635","line":168,"column":64,"nodeType":"636","messageId":"637","endLine":168,"endColumn":66},{"ruleId":"548","severity":1,"message":"549","line":180,"column":23,"nodeType":"550","endLine":186,"endColumn":24},{"ruleId":"533","severity":1,"message":"717","line":39,"column":12,"nodeType":"535","messageId":"536","endLine":39,"endColumn":33},{"ruleId":"533","severity":1,"message":"718","line":63,"column":12,"nodeType":"535","messageId":"536","endLine":63,"endColumn":30},{"ruleId":"555","severity":1,"message":"561","line":9,"column":9,"nodeType":"550","endLine":12,"endColumn":11},{"ruleId":"533","severity":1,"message":"719","line":18,"column":14,"nodeType":"535","messageId":"536","endLine":18,"endColumn":35},{"ruleId":"529","replacedBy":"720"},{"ruleId":"531","replacedBy":"721"},{"ruleId":"533","severity":1,"message":"722","line":3,"column":17,"nodeType":"535","messageId":"536","endLine":3,"endColumn":22},{"ruleId":"533","severity":1,"message":"723","line":3,"column":34,"nodeType":"535","messageId":"536","endLine":3,"endColumn":45},{"ruleId":"533","severity":1,"message":"581","line":10,"column":10,"nodeType":"535","messageId":"536","endLine":10,"endColumn":29},{"ruleId":"533","severity":1,"message":"584","line":13,"column":3,"nodeType":"535","messageId":"536","endLine":13,"endColumn":21},{"ruleId":"533","severity":1,"message":"619","line":16,"column":10,"nodeType":"535","messageId":"536","endLine":16,"endColumn":19},{"ruleId":"533","severity":1,"message":"724","line":17,"column":10,"nodeType":"535","messageId":"536","endLine":17,"endColumn":26},{"ruleId":"533","severity":1,"message":"603","line":19,"column":9,"nodeType":"535","messageId":"536","endLine":19,"endColumn":13},{"ruleId":"533","severity":1,"message":"725","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":17},{"ruleId":"726","severity":2,"message":"727","line":27,"column":17,"nodeType":"535","messageId":"728","endLine":27,"endColumn":28},{"ruleId":"533","severity":1,"message":"729","line":28,"column":9,"nodeType":"535","messageId":"536","endLine":28,"endColumn":17},{"ruleId":"726","severity":2,"message":"730","line":28,"column":20,"nodeType":"535","messageId":"728","endLine":28,"endColumn":31},{"ruleId":"644","severity":1,"message":"731","line":31,"column":19,"nodeType":"535","messageId":"646","endLine":31,"endColumn":43},"no-native-reassign",["732"],"no-negated-in-lhs",["733"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Appheader' is defined but never used.","'Footer' is defined but never used.","'Checkout' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'menu' is assigned a value but never used.","'createLogger' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'PageNotFound' is defined but never used.","'Login' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'countDownTime', 'countDownDateTime', 'countDownTime'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setLoadingDisplay' is defined but never used.","'addItem' is defined but never used.","'removeItem' is defined but never used.","'setSearchQuery' is defined but never used.","'clearState' is defined but never used.","'clearMenuState' is defined but never used.","'displayAddressModal' is defined but never used.","'fetchRestuarantInformation' is defined but never used.","'fetchRestuarantList' is defined but never used.","'fetchAddressesList' is defined but never used.","'setSelectedRestaurant' is defined but never used.","'showLoginFormMethod' is defined but never used.","'setSelectedAddress' is defined but never used.","'getFilterredList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.","ArrayExpression",["734"],"'useEffect' is defined but never used.","'Table' is defined but never used.","'updatePassword' is defined but never used.","'LoadingBar' is defined but never used.","'MyOrderDetails' is defined but never used.","'IconButton' is defined but never used.","'moment' is defined but never used.","'axios' is defined but never used.","'ChooseAddress' is defined but never used.","'AddAddress' is defined but never used.","'main' is assigned a value but never used.","'currentorderData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchdata' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setstate(s => ...)' if you only need 'state' in the 'setstate' call.",["735"],"'status' is assigned a value but never used.","'CarouselCaption' is defined but never used.","'scroll' is defined but never used.","'isFmHaveDetours' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'allforcedModifiers' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'findCategory'. Either include it or remove the dependency array.",["736"],"'getItemPrice' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'openModal' is defined but never used.","'closeModal' is defined but never used.","'isHappyHourStillActive' is defined but never used.","'OptionalModifiers' is defined but never used.","'setradiovalue' is assigned a value but never used.","'allFm' is assigned a value but never used.","'allOm' is assigned a value but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'setTimer' is defined but never used.","'getDiscountedPrice' is defined but never used.","'getActualPrice' is assigned a value but never used.","'isDecimalAmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onPasswordChange' is assigned a value but never used.","'message' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-use-before-define","'payload' was used before it was defined.","usedBeforeDefined","no-dupe-keys","Duplicate key 'showLoader'.","ObjectExpression","'notification' is defined but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'PhoneAndroidIcon' is defined but never used.","'setSelectedCategoryId' is defined but never used.","'Loader' is defined but never used.","'goBackToLogin' is assigned a value but never used.","'AppHeader' is defined but never used.","'handleEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postProfileChange'. Either include it or remove the dependency array.",["737"],"'fetchMyOrderList' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchAddressList'. Either include them or remove the dependency array.",["738"],"'PlacesAutocomplete' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","'setPhoneCode' is defined but never used.","'Menu' is defined but never used.","'TextField' is defined but never used.","'user' is assigned a value but never used.","'addressdetail' is assigned a value but never used.","'setaddressdetail' is assigned a value but never used.","'customeraddress1' is assigned a value but never used.","'setcustomeraddress1' is assigned a value but never used.","'phonecodetoCountryMaping' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'props' and 'setMarkerPosition'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["739"],"React Hook useEffect has missing dependencies: 'calculateDistance', 'props', and 'setMarkerPosition'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["740"],"'AccountBalanceWalletIcon' is defined but never used.","'MoneyIcon' is defined but never used.","'setIsTakeAway' is defined but never used.","'TimePicker' is defined but never used.","'CompassCalibrationOutlined' is defined but never used.","'show' is assigned a value but never used.","'setshow' is assigned a value but never used.","'deliveryOptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'dispatch', 'getDeliveryCharges', 'main.deliveryRange', 'main.selectedRestaurant.order_option', and 'main.selectedRestaurant.payment_option_ids'. Either include them or remove the dependency array. You can also do a functional update 'setdata(d => ...)' if you only need 'data' in the 'setdata' call.",["741"],"no-useless-rename","Destructuring assignment modifiers unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"742","text":"743"},"Duplicate key 'comments'.","'PinDropSharp' is defined but never used.","'useTheme' is defined but never used.","'initialize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.pickupTime', 'dispatch', and 'fetchAddresses'. Either include them or remove the dependency array.",["744"],"React Hook useEffect has missing dependencies: 'data', 'dispatch', 'main.selectedRestaurant.order_option', 'main.selectedRestaurant.payment_option_ids', and 'user.defaultAddress'. Either include them or remove the dependency array. You can also do a functional update 'setdata(d => ...)' if you only need 'data' in the 'setdata' call.",["745"],"'getDisabledMinutes' is assigned a value but never used.","'getDeliveryCharges' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'add', 'dispatch', and 'user.user.clientId'. Either include them or remove the dependency array. You can also do a functional update 'setadd(a => ...)' if you only need 'add' in the 'setadd' call.",["746"],"'WaitingOverlay' is defined but never used.","'ordersData' is assigned a value but never used.","'payload_again' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchdata'. Either include it or remove the dependency array.",["747"],"'renderHappyHourOffers' is defined but never used.","'renderPizzaDetails' is defined but never used.","'handleSelectionChange' is defined but never used.",["732"],["733"],"'Radio' is defined but never used.","'InputNumber' is defined but never used.","'ContactsOutlined' is defined but never used.","'connect' is defined but never used.","no-undef","'useSelector' is not defined.","undef","'dispatch' is assigned a value but never used.","'useDispatch' is not defined.","'getModalContentComponent' was used before it was defined.","no-global-assign","no-unsafe-negation",{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},[490,510],"modifiers",{"desc":"764","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},"Update the dependencies array to be: [initialize, props.restaurantId]",{"range":"772","text":"773"},"Update the dependencies array to be: [fetchdata, state]",{"range":"774","text":"775"},"Update the dependencies array to be: [findCategory, selectedCategoryId]",{"range":"776","text":"777"},"Update the dependencies array to be: [postProfileChange]",{"range":"778","text":"779"},"Update the dependencies array to be: [dispatch, fetchAddressList]",{"range":"780","text":"781"},"Update the dependencies array to be: [props, setMarkerPosition]",{"range":"782","text":"783"},"Update the dependencies array to be: [calculateDistance, props, setMarkerPosition]",{"range":"784","text":"785"},"Update the dependencies array to be: [data, dispatch, getDeliveryCharges, main.deliveryRange, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids]",{"range":"786","text":"787"},"Update the dependencies array to be: [api, data.pickupTime, dispatch, fetchAddresses]",{"range":"788","text":"789"},"Update the dependencies array to be: [data, dispatch, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids, user.defaultAddress]",{"range":"790","text":"791"},"Update the dependencies array to be: [add, dispatch, handleadd, user.user.clientId]",{"range":"792","text":"793"},"Update the dependencies array to be: [fetchdata]",{"range":"794","text":"795"},[2621,2641],"[initialize, props.restaurantId]",[2972,2974],"[fetchdata, state]",[1273,1308],"[findCategory, selectedCategoryId]",[2157,2159],"[postProfileChange]",[1203,1205],"[dispatch, fetchAddressList]",[1178,1180],"[props, setMarkerPosition]",[4760,4762],"[calculateDistance, props, setMarkerPosition]",[4172,4174],"[data, dispatch, getDeliveryCharges, main.deliveryRange, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids]",[4061,4066],"[api, data.pickupTime, dispatch, fetchAddresses]",[4865,4867],"[data, dispatch, main.selectedRestaurant.order_option, main.selectedRestaurant.payment_option_ids, user.defaultAddress]",[17157,17168],"[add, dispatch, handleadd, user.user.clientId]",[2854,2856],"[fetchdata]"]