[{"/Users/sachinananthakumar/Zotto_version_2/src/index.js":"1","/Users/sachinananthakumar/Zotto_version_2/src/reportWebVitals.js":"2","/Users/sachinananthakumar/Zotto_version_2/src/App.js":"3","/Users/sachinananthakumar/Zotto_version_2/src/state-management/store.js":"4","/Users/sachinananthakumar/Zotto_version_2/src/state-management/modal/reducer.js":"5","/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/reducer.js":"6","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/reducer.js":"7","/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/reducer.js":"8","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/RestaurantList.jsx":"9","/Users/sachinananthakumar/Zotto_version_2/src/state-management/modal/actionTypes.js":"10","/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/actionTypes.js":"11","/Users/sachinananthakumar/Zotto_version_2/src/state-management/operations.js":"12","/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/operations.js":"13","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/actionTypes.js":"14","/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/actionTypes.js":"15","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/operations.js":"16","/Users/sachinananthakumar/Zotto_version_2/src/state-management/utils/localStorage.js":"17","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/actions.js":"18","/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/asyncActions.js":"19","/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/actions.js":"20","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/Restaurants/index.js":"21","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/utils.js":"22","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/Restaurants/Restaurants.jsx":"23","/Users/sachinananthakumar/Zotto_version_2/src/components/AppHeader/AppHeader.jsx":"24","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/Restaurants/RestaurantCard/RestaurantCard.jsx":"25","/Users/sachinananthakumar/Zotto_version_2/src/components/Slider/Slider.jsx":"26","/Users/sachinananthakumar/Zotto_version_2/src/components/Footer/Footer.jsx":"27","/Users/sachinananthakumar/Zotto_version_2/src/components/PageNotFound/PageNotFound.jsx":"28","/Users/sachinananthakumar/Zotto_version_2/src/components/LoadingBar/LoadingBar.jsx":"29","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantInformation/RestaurantInformation.jsx":"30","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/asyncActions.js":"31","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/selectors.js":"32","/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/actions.js":"33","/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/asyncActions.js":"34","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantInformation/Information/Information.jsx":"35","/Users/sachinananthakumar/Zotto_version_2/src/components/MenuCategories/MenuCategories.jsx":"36","/Users/sachinananthakumar/Zotto_version_2/src/containers/MenuItems/MenuItems.jsx":"37","/Users/sachinananthakumar/Zotto_version_2/src/components/MenuTable/MenuTable.jsx":"38","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modals/MenuModal.jsx":"39","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modifiers/ForcedModifiers/ForcedModifiers.jsx":"40","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modifiers/OptionalModifiers/OptionalModifiers.jsx":"41","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modifiers/ForcedModifiers/ModifiersCategory/ModifierCategory.jsx":"42","/Users/sachinananthakumar/Zotto_version_2/src/components/MyOrders/MyOrders.jsx":"43","/Users/sachinananthakumar/Zotto_version_2/src/components/MyOrderDetails/MyOrderDetails.jsx":"44"},{"size":659,"mtime":1611702723596,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1611138388239,"results":"47","hashOfConfig":"46"},{"size":429,"mtime":1611699048674,"results":"48","hashOfConfig":"46"},{"size":945,"mtime":1611140264122,"results":"49","hashOfConfig":"46"},{"size":865,"mtime":1611140264120,"results":"50","hashOfConfig":"46"},{"size":2531,"mtime":1611140264112,"results":"51","hashOfConfig":"46"},{"size":7841,"mtime":1612718238268,"results":"52","hashOfConfig":"46"},{"size":6716,"mtime":1611140264126,"results":"53","hashOfConfig":"46"},{"size":4181,"mtime":1612703614678,"results":"54","hashOfConfig":"46"},{"size":81,"mtime":1611140264119,"results":"55","hashOfConfig":"46"},{"size":1106,"mtime":1611140264108,"results":"56","hashOfConfig":"46"},{"size":961,"mtime":1611140264121,"results":"57","hashOfConfig":"46"},{"size":829,"mtime":1611140264111,"results":"58","hashOfConfig":"46"},{"size":2857,"mtime":1611140264113,"results":"59","hashOfConfig":"46"},{"size":4622,"mtime":1611140264123,"results":"60","hashOfConfig":"46"},{"size":17149,"mtime":1611140408450,"results":"61","hashOfConfig":"46"},{"size":546,"mtime":1611140264126,"results":"62","hashOfConfig":"46"},{"size":4846,"mtime":1611140264115,"results":"63","hashOfConfig":"46"},{"size":1799,"mtime":1611140264110,"results":"64","hashOfConfig":"46"},{"size":1742,"mtime":1611140264110,"results":"65","hashOfConfig":"46"},{"size":37,"mtime":1611142600333,"results":"66","hashOfConfig":"46"},{"size":3600,"mtime":1611140399331,"results":"67","hashOfConfig":"46"},{"size":1598,"mtime":1612702283341,"results":"68","hashOfConfig":"46"},{"size":3943,"mtime":1614184142052,"results":"69","hashOfConfig":"46"},{"size":1404,"mtime":1612697932548,"results":"70","hashOfConfig":"46"},{"size":2430,"mtime":1611698204764,"results":"71","hashOfConfig":"46"},{"size":3646,"mtime":1611703822773,"results":"72","hashOfConfig":"46"},{"size":265,"mtime":1612524314146,"results":"73","hashOfConfig":"46"},{"size":414,"mtime":1612524523455,"results":"74","hashOfConfig":"46"},{"size":3452,"mtime":1614184114773,"results":"75","hashOfConfig":"46"},{"size":5069,"mtime":1611140264115,"results":"76","hashOfConfig":"46"},{"size":1017,"mtime":1611140264117,"results":"77","hashOfConfig":"46"},{"size":7747,"mtime":1611140264124,"results":"78","hashOfConfig":"46"},{"size":8507,"mtime":1611140264125,"results":"79","hashOfConfig":"46"},{"size":9426,"mtime":1612866258727,"results":"80","hashOfConfig":"46"},{"size":4383,"mtime":1612791256582,"results":"81","hashOfConfig":"46"},{"size":6027,"mtime":1613042063208,"results":"82","hashOfConfig":"46"},{"size":2515,"mtime":1613046328810,"results":"83","hashOfConfig":"46"},{"size":2336,"mtime":1614186379333,"results":"84","hashOfConfig":"46"},{"size":966,"mtime":1613059679821,"results":"85","hashOfConfig":"46"},{"size":1641,"mtime":1613044075381,"results":"86","hashOfConfig":"46"},{"size":1098,"mtime":1613060576539,"results":"87","hashOfConfig":"46"},{"size":3912,"mtime":1614187415835,"results":"88","hashOfConfig":"46"},{"size":6178,"mtime":1614190104762,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"ecq9qz",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"92"},"/Users/sachinananthakumar/Zotto_version_2/src/index.js",[],["198","199"],"/Users/sachinananthakumar/Zotto_version_2/src/reportWebVitals.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/App.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/store.js",["200"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport menuReducer from \"./menu/reducer\";\nimport mainReducer from \"./main/reducer\";\nimport userReducer from \"./user/reducer\";\nimport modalReducer from \"./modal/reducer\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      /* Options like actionSanitizer, stateSanitizer */\n    })\n  : compose;\nconst middlewareCandidates = [thunk];\n\n// if (process.env.NODE_ENV === \"development\") {\n//   middlewareCandidates.push(createLogger());\n// }\nconst enhancer = composeEnhancers(applyMiddleware(...middlewareCandidates));\nconst rootReducer = combineReducers({\n  menu: menuReducer,\n  main: mainReducer,\n  user: userReducer,\n  modal: modalReducer,\n});\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","/Users/sachinananthakumar/Zotto_version_2/src/state-management/modal/reducer.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/reducer.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/reducer.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/reducer.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/RestaurantList.jsx",["201"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n// import RestaurantInformation from \"../RestaurantInformation\";\nimport { setSelectedRestaurant } from \"../../state-management/main/actions\";\nimport {\n  setLoadingDisplay,\n  clearMenuState,\n  clearState,\n  showHideOverlay,\n} from \"../../state-management/menu/actions\";\nimport {\n  fetchRestuarantInformation,\n  fetchRestuarantList,\n} from \"../../state-management/main/asyncActions\";\n// import \"./RestaurantList.scss\";\nimport  Restaurants  from \"./Restaurants/\";\nimport PageNotFound from \"../../components/PageNotFound/PageNotFound\";\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\nimport RestaurantInformation from \"../RestaurantInformation/RestaurantInformation\";\n// import { LoadingBar } from \"../../components/LoadingBar\";\n\nclass RestaurantList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { showLoading: true };\n    this.initialize();\n  }\n\n  async initialize() {\n    const param = window.location.href.split(\"feedmi/?/\")[1];\n\n    if (param) {\n      const restOrChainId = param.split(\"=\")[0];\n      const chainText = param.split(\"=\")[1];\n\n      if (!chainText) {\n        this.setState({ showLoading: false });\n        this.props.setLoadingDisplay(true);\n\n        return;\n      }\n      const value = chainText.split(\"/\")[0];\n\n      if (restOrChainId === \"chainId\") {\n        this.fetchRestaurantList(value);\n      } else {\n        const { payload } = await this.props.fetchRestuarantInformation(value);\n\n        if (payload) {\n          this.props.setSelectedRestaurant(payload[0], value);\n        }\n        this.props.setLoadingDisplay(true);\n      }\n    }\n  }\n\n  async fetchRestaurantList(chainId) {\n    await this.props.fetchRestuarantList(chainId);\n    this.setState({ showLoading: false });\n    this.props.setLoadingDisplay(true);\n  }\n\n  handleHomeClick = (chainId) => {\n    this.setState({ showLoading: true });\n    this.props.setLoadingDisplay(false);\n    this.props.clearMenuState();\n    this.fetchRestaurantList(chainId);\n    window.location.replace(\n      `${process.env.REACT_APP_PUBLIC_URL}chainId=${chainId}`\n    );\n  };\n\n  renderRestaurantList() {\n    return <Restaurants restaurants={this.props.restaurants} />;\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n        {this.props.canShow ? (\n          <div className={\"restaurant-list-container\"}>\n            <Switch>\n              <Route exact path=\"/\">\n                {this.props.restId ? (\n                  <Redirect to={`/restId=${this.props.restId}`} />\n                ) : (\n                  this.renderRestaurantList()\n                )}\n              </Route>\n              <Route\n                exact\n                path={`/chainId=${this.props.chainId}`}\n                children={this.renderRestaurantList()}\n              />\n              {/* <Route path=\"*\">\n                <PageNotFound />\n              </Route> */}\n            {/* Should fimd a way to redirect 404 */}\n            </Switch>\n            {console.log(\"selectedRestaurant\", this.props.selectedRestaurant)}\n            {this.props.selectedRestaurant ? (\n              <RestaurantInformation\n                restaurantId={this.props.restId}\n                onHomeClick={this.handleHomeClick}\n              />\n            ) : null}\n          </div>\n        ) : (\n          <LoadingBar />\n        )}\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps({ main, menu }) {\n  return {\n    restaurants: main.restaurants,\n    chainId: main.chainId,\n    restId: main.restId,\n    canShow: menu.canShow,\n    displayAddressModal: menu.displayAddressModal,\n    selectedRestaurant: main.selectedRestaurant,\n    showHideOverlay: menu.showHideOverlay,\n    previousSelectedRestaurantId: menu.restaurantId,\n  };\n}\n\nexport const mapDispatchToProps = {\n  setSelectedRestaurant,\n  fetchRestuarantInformation,\n  setLoadingDisplay,\n  fetchRestuarantList,\n  clearMenuState,\n  showHideOverlay,\n  clearState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\n","/Users/sachinananthakumar/Zotto_version_2/src/state-management/modal/actionTypes.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/actionTypes.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/operations.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/operations.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/actionTypes.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/actionTypes.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/operations.js",["202","203","204","205"],"import { getModifierIds, getDetours, isSameItem } from './utils';\nimport { truncateDecimal } from './utils';\n\nexport function updateMenuItemsWithCart(menuList, cart) {\n  const updatedItems = menuList.map((item) => {\n    const cartItems = cart.filter(({ id }) => item.id === id);\n    const totalQty = cartItems.reduce((acc, item) => acc + item.qty, 0);\n    const totalHappyHourQty = cartItems.reduce((acc, item) => acc + (item.happyHourItem ? item.happyHourItem.qty : 0), 0);\n    const cartItemsWithNonZeroQty = cartItems.filter((item) => item.qty > 0);\n\n    if (cartItems.length) {\n      return {\n        ...item,\n        ...cartItems[0],\n        subTotal: cartItems.reduce((acc, item) => acc + item.subTotal, 0) || Number(item.price),\n        qty: cartItems.length > 1 ? totalQty : cartItems[cartItems.length - 1].qty,\n        similarItems: cartItemsWithNonZeroQty.length ? cartItemsWithNonZeroQty : [],\n        happyHourItem: cartItems[cartItems.length - 1].happyHourItem && totalHappyHourQty !== 0\n          ? {\n            ...cartItems[cartItems.length - 1].happyHourItem,\n            qty: cartItems.length > 1 ? totalHappyHourQty : cartItems[cartItems.length - 1].happyHourItem.qty,\n          }\n          : null,\n      };\n    }\n\n    return getInitialMenuItem(item);\n  });\n\n  return updatedItems;\n}\n\nexport function updatePizzaItemsWithCart(pizzaList, cart) {\n  const updatedItems = pizzaList.map((item) => {\n    const cartItems = cart.filter(({ id }) => item.pizza_id === id);\n    const totalQty = cartItems.reduce((acc, item) => acc + item.qty, 0);\n    const totalHappyHourQty = cartItems.reduce((acc, item) => acc + (item.happyHourItem ? item.happyHourItem.qty : 0), 0);\n    const cartItemsWithNonZeroQty = cartItems.filter((item) => item.qty > 0);\n\n    if (cartItems.length) {\n      return {\n        ...item,\n        ...cartItems[0],\n        subTotal: cartItems.reduce((acc, item) => acc + item.subTotal, 0) || Number(item.price),\n        qty: cartItems.length > 1 ? totalQty : cartItems[cartItems.length - 1].qty,\n        similarItems: cartItemsWithNonZeroQty.length ? cartItemsWithNonZeroQty : [],\n        happyHourItem: cartItems[cartItems.length - 1].happyHourItem && totalHappyHourQty !== 0\n          ? {\n            ...cartItems[cartItems.length - 1].happyHourItem,\n            qty: cartItems.length > 1 ? totalHappyHourQty : cartItems[cartItems.length - 1].happyHourItem.qty,\n          }\n          : null,\n      };\n    }\n\n    return getInitialPizzaItem(item);\n  });\n\n  return updatedItems;\n}\n\nfunction getInitialMenuItem(item) {\n  return {\n    ...item,\n    similarItems: [],\n    modifiers: null,\n    subTotal: 0,\n    grandTotal: 0,\n    fmId: '',\n    omId: '',\n    detours: '',\n    qty: 0,\n    vat: 0,\n    tax: 0,\n    happyHourItem: null,\n    'service_tax': 0,\n    'local_tax': 0,\n    'other_tax': 0,\n  };\n}\n\nfunction getInitialPizzaItem(item) {\n  return {\n    ...item,\n    similarItems: [],\n    modifiers: null,\n    subTotal: 0,\n    grandTotal: 0,\n    toppingIdx1: [],\n    baseId: null,\n    sizeId: null,\n    selectedBase: null,\n    defaultToppings: [],\n    optionalToppings: [],\n    firstHalf: null,\n    secondHalf: null,\n    qty: 0,\n    vat: 0,\n    tax: 0,\n    happyHourItem: null,\n    'service_tax': 0,\n    'local_tax': 0,\n    'other_tax': 0,\n  };\n}\n\nexport function revertMenuItemsToInitialState(menuItems) {\n  return menuItems.map((menuItem) => getInitialMenuItem(menuItem));\n}\n\nexport function revertCartItemsToInitialState(pizzaItems) {\n  return pizzaItems.map((pizzaItem) => getInitialPizzaItem(pizzaItem));\n}\n\nfunction getNewQuantity(itemExisted, qty, buyQty, getQty) {\n  if (itemExisted.happyHourItem && itemExisted.happyHourItem.qty) {\n    if (buyQty > getQty) {\n      return ((qty % (buyQty + getQty)) === 0) ? (qty / (buyQty + getQty) * getQty) : itemExisted.happyHourItem.freeQty;\n    } else if (buyQty === getQty) {\n      const reminder = qty % (buyQty + getQty);\n\n      return reminder > buyQty || reminder === 0 ? (itemExisted.happyHourItem.freeQty || 0) + 1 : itemExisted.happyHourItem.freeQty || 0;\n    } else {\n      const val = qty % (buyQty + getQty);\n\n      if (val && val % getQty === 0) {\n        return (itemExisted.happyHourItem.freeQty || 0) + ((qty % (buyQty + getQty)) / getQty);\n      } else if (qty % (buyQty + getQty) === 0) {\n        return (qty / (buyQty + getQty)) * getQty;\n      }\n\n      return itemExisted.happyHourItem.freeQty;\n    }\n  }\n\n  return itemExisted.happyHourItem ? itemExisted.happyHourItem.freeQty : 0;\n}\n\nfunction getHappyHoursSubTotalAndQuantity(item) {\n  switch (item.happyHourDetail.type) {\n    case 'Discount': {\n      const newTotal = ((item.grandTotal / item.qty) || Number(item.price));\n      const grandTotal = item.grandTotal - (item.qty * (newTotal * (Number(item.happyHourDetail.discount) / 100)));\n\n      return {\n        subTotal: grandTotal - item.tax,\n        grandTotal,\n        qty: item.qty,\n      };\n    }\n    case 'Amount': {\n      const grandTotal = item.grandTotal - (Number(item.qty) * Number(item.happyHourDetail.amount));\n\n      return {\n        subTotal: grandTotal - item.tax,\n        grandTotal,\n        qty: item.qty,\n      };\n    }\n    default: {\n      const buyQty = Number(item.happyHourDetail['buy_qty']);\n      const getQty = Number(item.happyHourDetail['get_qty']);\n\n      if (item.qty >= buyQty) {\n        const freeQty = getNewQuantity(item, item.qty, buyQty, getQty);\n        const freeSubTotal = freeQty ? item.subTotal - (freeQty * (item.subTotal / item.qty)) : item.subTotal;\n        const freeGrandTotal = freeQty ? item.grandTotal - (freeQty * (item.grandTotal / item.qty)) : item.grandTotal;\n\n        return {\n          qty: item.qty,\n          subTotal: freeSubTotal,\n          grandTotal: freeGrandTotal,\n          freeQty,\n        };\n      }\n\n      return {\n        subTotal: item.subTotal,\n        grandTotal: item.grandTotal,\n        qty: item.qty,\n        freeQty: 0,\n      };\n    }\n  }\n}\n\nexport function addItem(item, modifiers, subTotal, menuList, cart, restaurantInfo, pizzas) {\n  const itemFmId = modifiers ? getModifierIds(modifiers.forcedModifier) || item.fmId : '';\n  const itemOmId = modifiers ? getModifierIds(modifiers.optionalModifier) || item.omId : '';\n  const itemDetours = modifiers ? getDetours(modifiers.forcedModifier) || item.detours : '';\n  const itemExisted = cart.find((cartItem) => isSameItem(item, modifiers, cartItem));\n  const { isHappyHourActive } = item;\n\n  const minQty = Number(item.min_qty) === 0 ? 1 : Number(item.min_qty);\n\n  let newItem = itemExisted\n    ? {\n      ...itemExisted,\n      qty: itemExisted.qty + 1,\n      subTotal: itemExisted.subTotal + ((item.subTotal / itemExisted.qty) || Number(item.price)),\n    }\n    : {\n      ...item,\n      qty: minQty,\n      fmId: itemFmId,\n      omId: itemOmId,\n      detours: itemDetours,\n      modifiers,\n      subTotal: (subTotal * minQty) || (Number(item.price) * minQty),\n      happyHourItem: null,\n    };\n  const taxes = getTaxes(item, newItem.subTotal, restaurantInfo);\n\n  newItem = {\n    ...newItem,\n    grandTotal: newItem.subTotal + taxes.tax,\n    ...taxes,\n  };\n\n  newItem = {\n    ...newItem,\n    happyHourItem: isHappyHourActive\n      ? {\n        ...getHappyHoursSubTotalAndQuantity(newItem),\n        ...taxes,\n      }\n      : null,\n  };\n\n  const updatedCart = itemExisted\n    ? cart.map((item) => {\n      if (isSameItem(newItem, modifiers, item)) {\n        return newItem;\n      } else if (!itemExisted && (newItem.id === item.id)) {\n        return {\n          ...item,\n          grandTotal: subTotal + taxes.taxSubtotal,\n          ...taxes,\n        };\n      }\n\n      return item;\n    })\n    : [\n      ...cart,\n      newItem,\n    ];\n\n  return {\n    cart: updatedCart,\n    menuItems: updateMenuItemsWithCart(menuList, updatedCart),\n    pizzas: updatePizzaItemsWithCart(pizzas, updatedCart),\n  };\n}\n\nfunction getHappyHourDetailsForRemovedItem(item, qty) {\n  switch (item.happyHourDetail.type) {\n    case 'Amount':\n    case 'Discount': {\n      const subTotal = item.happyHourItem.subTotal - (item.happyHourItem.subTotal / item.qty);\n      const grandTotal = item.happyHourItem.grandTotal - (item.happyHourItem.grandTotal / item.qty);\n\n      return {\n        subTotal,\n        grandTotal,\n        qty,\n      };\n    }\n    default: {\n      const happyQty = item.happyHourItem.qty - item.happyHourItem.freeQty;\n      const happySubTotal = item.happyHourItem.subTotal - (item.happyHourItem.subTotal / happyQty);\n      const happyGrandTotal = item.happyHourItem.grandTotal - (item.happyHourItem.grandTotal / happyQty);\n      const buyQty = Number(item.happyHourDetail['buy_qty']);\n      const getQty = Number(item.happyHourDetail['get_qty']);\n      const reminder = item.happyHourItem.qty % (buyQty + getQty);\n\n      if (\n        item.happyHourItem.freeQty &&\n        (\n          (buyQty > getQty && item.happyHourItem.qty % (buyQty + getQty) === 0) ||\n          (buyQty < getQty && (item.happyHourItem.qty % (buyQty + getQty)) % getQty === 0)) ||\n          (buyQty === getQty && (reminder === 0 || reminder > buyQty))\n      ) {\n        return {\n          qty,\n          freeQty: item.happyHourItem.freeQty - 1,\n          subTotal: item.happyHourItem.subTotal,\n          grandTotal: item.happyHourItem.grandTotal,\n        };\n      }\n\n      return {\n        qty,\n        freeQty: item.happyHourItem.freeQty,\n        subTotal: happySubTotal,\n        grandTotal: happyGrandTotal,\n      };\n    }\n  }\n}\n\nexport function removeItem(item, menuList, cart, restaurantInfo, pizzas) {\n  const updatedCart = cart.map((cartItem) => {\n    if (isSameItem(item, item.modifiers, cartItem)) {\n      const minQty = Number(item.min_qty) === 0 ? 1 : Number(item.min_qty);\n\n      let subtractQty = 1;\n\n      if (minQty > 0 && cartItem.qty === minQty) {\n        subtractQty = minQty;\n      }\n      const qty = cartItem.qty - subtractQty;\n      const subTotal = cartItem.subTotal - (cartItem.subTotal / cartItem.qty);\n      const { isHappyHourActive } = cartItem;\n      const taxes = getTaxes(item, subTotal, restaurantInfo);\n      const happyHrDetails = cartItem.happyHourItem && isHappyHourActive ? getHappyHourDetailsForRemovedItem(cartItem, qty, subTotal, taxes.tax) : null;\n\n      return {\n        ...cartItem,\n        qty,\n        subTotal: qty > 0 ? subTotal : 0,\n        grandTotal: qty > 0 ? subTotal + taxes.tax : 0,\n        fmId: qty > 0 ? cartItem.fmId : '',\n        omId: qty > 0 ? cartItem.omId : '',\n        detours: qty > 0 ? cartItem.detours : '',\n        modifiers: qty > 0 ? item.modifiers : null,\n        ...taxes,\n        happyHourItem: qty && isHappyHourActive && happyHrDetails && happyHrDetails.qty\n          ? {\n            ...happyHrDetails,\n            ...taxes,\n          }\n          : null,\n      };\n    }\n\n    return cartItem;\n  });\n\n  return {\n    cart: updatedCart.filter((item) => item.qty > 0),\n    menuItems: updateMenuItemsWithCart(menuList, updatedCart),\n    pizzas: updatePizzaItemsWithCart(pizzas, updatedCart),\n  };\n}\n\nexport function removeCartItem(item, menuList, pizzas, cart) {\n  const updatedCart = cart.filter((_, i) => i !== item.index);\n  const updatedMenuItems = menuList.map((menuItem) => {\n    if (menuItem.id === item.id) {\n      return getInitialMenuItem(menuItem);\n    }\n\n    return menuItem;\n  });\n\n  const updatedPizzaItems = pizzas.map((pizza) => {\n    if (pizza.pizza_id === item.id) {\n      return getInitialPizzaItem(pizza);\n    }\n\n    return pizza;\n  });\n\n  return {\n    cart: updatedCart,\n    menuItems: item.qty > 0 ? updateMenuItemsWithCart(menuList, updatedCart) : updatedMenuItems,\n    pizzas: (item.qty > 0 && item.isPizza) ? updatePizzaItemsWithCart(pizzas, updatedCart) : updatedPizzaItems,\n  };\n}\n\nexport function getTaxes(item, subTotal, restaurantInfo) {\n  const { 'is_localtax': isLocal, 'is_othertax': isOther, 'is_vat': isVat, 'is_servicetax': isService } = item;\n  const { 'local_tax': localTax, vat: vatAmt, 'service_tax': serviceTax, 'other_tax': otherTax } = restaurantInfo;\n  const service = Number(isService) ? subTotal * (Number(serviceTax) / 100) : 0;\n  const vat = Number(isVat) ? subTotal * (Number(vatAmt) / 100) : 0;\n  const local = Number(isLocal) ? subTotal * (Number(localTax) / 100) : 0;\n  const other = Number(isOther) ? subTotal * (Number(otherTax) / 100) : 0;\n  const tax = service + vat + local + other;\n\n  return {\n    'vatAmt': vat,\n    tax,\n    'serviceTax': service,\n    'localTax': local,\n    'otherTax': other,\n  };\n}\n\nexport function getPizzaActualPrice(pizza, price, restaurantInfo) {\n  const isPriceWithoutTax = Number(restaurantInfo['price_without_tax_flag']);\n\n  return isPriceWithoutTax ? Number(price) : truncateDecimal(Number(price) + Number(getTaxes(pizza, Number(price), restaurantInfo).tax));\n}\n\nexport function getSelectedCategoryId(categoryList) {\n  if (categoryList.length) {\n    const subCategory = categoryList[0]['sub_category'] ? categoryList[0]['sub_category'][0] : null;\n\n    return subCategory ? subCategory['category_id'] : '';\n  }\n}\n\n// happy hours related.\nexport function updateHappyHourInfoToMenuItems(menuList, restInfo, happyHours) {\n  // check for each Item if happy hour is avaliable\n  // If available then add happy hour related info in item object\n  // like happy hour data(type, discount) , time left for availing offer\n\n  const menuItems = menuList.map(function(item) {\n    const result = isAvailableInHappyHours(item, restInfo, happyHours);\n    // if item don't have offer Id return as it is\n\n    if (!result.isHappyHourActive) {\n      item.isHappyHourActive = false;\n    } else {\n      // update happy hours details Item object and return\n      item.isHappyHourActive = true;\n      item.happyHourDetail = result.happyHourDetail;\n    }\n\n    return item;\n  });\n\n  return menuItems;\n}\n\nexport function isAvailableInHappyHours(item, restInfo, happyHours) {\n  // check if this item is available in happy hours or not\n  const result = {\n    isHappyHourActive: false,\n    happyHourDetail: {},\n    timeoutIndex: 0,\n  };\n\n  const options = {\n    timeZone: restInfo.timezone,\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: false,\n  };\n\n  const getRestaurantTimeNDay = new Date().toLocaleString('en-SG', options);\n\n  const currentDay = getRestaurantTimeNDay.split(',')[0].trim();\n\n  const currentTime = getRestaurantTimeNDay.split(',')[2].trim();\n\n  const currentMonthDay = `${getRestaurantTimeNDay.split(',')[1].trim().split(' ')[0].trim()} ${getRestaurantTimeNDay.split(',')[1].trim().split(' ')[1].trim()}`;\n\n  const currentYear = getRestaurantTimeNDay.split(',')[1].trim().split(' ')[2].trim();\n\n  const happyHourIds = item.happy_hours_id.split(',');\n\n  let countDownTime;\n\n  let countDownDateTime;\n\n  let timeoutIndex = 0;\n\n  let found;\n\n  for (let i = 0; i < happyHourIds.length; i++) {\n    found = happyHours.find(element => {\n      if (element.happy_hours_id === happyHourIds[i]\n          && isDayAvailable(currentDay, element) && isAvailableInTimeLimit(element, currentTime)\n      ) {\n        // if length is 1 then straight away return element\n        countDownTime = `${element.time_to}:00`;\n        countDownDateTime = `${currentDay}, ${currentMonthDay} ${currentYear}, ${countDownTime}`;\n\n        if (happyHourIds.length === 1) {\n          return element;\n        } else if (element.type === 'Buy_n_Get') { //\n          return element;\n        } else if (i === happyHourIds.length - 1) {\n          return element;\n        }\n      }\n    });\n  }\n\n  if (found !== undefined) {\n    result.isHappyHourActive = true;\n    result.happyHourDetail = found;\n    result.happyHourDetail.countDownDate = countDownDateTime;\n    //setTimer(getRestaurantTimeNDay, countDownDateTime);\n    result.happyHourDetail.happyHourTimeOutIndex = timeoutIndex;\n    timeoutIndex++;\n\n    if (found.type === 'Buy_n_Get') {\n      result.happyHourDetail.happyHourDisplayText = `Pay for ${Number(found.buy_qty)} get upto ${Number(found.get_qty) + Number(found.buy_qty)}`;\n    } else if (found.type === 'Amount') {\n      result.happyHourDetail.happyHourDisplayText = `Get ${restInfo.monetary_symbol} ${found.amount} Off`;\n    } else {\n      result.happyHourDetail.happyHourDisplayText = `Get ${found.discount}% Off`;\n    }\n  }\n\n  return result;\n}\n\nexport function isDayAvailable(day, happyHour) {\n  let result = false;\n  const found = happyHour.day.split(',').find(element => element.toLowerCase() === day.toLowerCase());\n\n  if (found !== undefined) {\n    result = true;\n  }\n\n  return result;\n}\n\nexport function isAvailableInTimeLimit(item, time) {\n  const currentHour = parseInt(time.split(':')[0]);\n\n  const currentMinute = parseInt(time.split(':')[1]);\n\n  const timeFromHour = parseInt(item.time_from.split(':')[0]);\n\n  const timeFromMinute = parseInt(item.time_from.split(':')[1]);\n\n  const timeToHour = parseInt(item.time_to.split(':')[0]);\n\n  const timeToMinute = parseInt(item.time_to.split(':')[1]);\n\n  if ((currentHour > timeFromHour || (currentHour === timeFromHour && currentMinute >= timeFromMinute))\n      && (currentHour < timeToHour || (currentHour === timeToHour && currentMinute <= timeToMinute))\n  ) {\n    return true;\n  }\n\n  return false;\n}","/Users/sachinananthakumar/Zotto_version_2/src/state-management/utils/localStorage.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/actions.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/asyncActions.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/main/actions.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/Restaurants/index.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/utils.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/Restaurants/Restaurants.jsx",["206"],"import React, {useEffect} from 'react'\nimport {Row, Col } from 'reactstrap';\nimport Slider from '../../../components/Slider/Slider';\n\nimport RestaurantCard from './RestaurantCard/RestaurantCard';\n// import './Restaurants.scss'\n\nconst Restaurants = ({restaurants}) => {\n\n  // useEffect(() => {\n  //   let slider = document.getElementById(\"layerslider\");\n  //   slider.layerSlider({\n  //     autoStart: true,\n  //     responsive: true,\n  //     responsiveUnder: 1280,\n  //     layersContainer: 1170,\n  //     navButtons:false,\n  //     showCircleTimer:false,\n  //     navStartStop:false,\n  //     // skinsPath: require('../../../assets/layerslider/skins')\n  //     // Please make sure that you didn't forget to add a comma to the line endings\n  //     // except the last line!\n  // });\n  // }, []);\n\n\n  return (\n    <>\n      <Slider/>\n      <div className=\"white_bg\">\n        <div className=\"container margin_60\">\n          <div className=\"main_title\">\n            <h2 className=\"nomargin_top\">Choose from Most Popular</h2>\n            <p>Your Favourite Restaurants</p>\n          </div>\n          <Row className=\"row\">\n            \n              {restaurants.map((restaurant)=>{\n                return (\n                  <Col key={restaurant.restaurant_id} className=\"col-lg-6\">\n                    <RestaurantCard restaurant={restaurant} />\n                  </Col>\n                );\n              })}\n              {/* End strip_list*/}\n            \n          </Row>\n          {/* End row */}\n        </div>\n        {/* End container */}\n      </div>\n    </>\n  );\n\n};\n\nexport default Restaurants\n","/Users/sachinananthakumar/Zotto_version_2/src/components/AppHeader/AppHeader.jsx",["207","208","209","210","211","212","213"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Logo from '../../assets/img/zottoLogo.png'\n// import \"./AppHeader.scss\";\n\nconst Appheader = () => {\n  const menu = useSelector((state)=>state.menu)\n  const [navbar, setNavbar] = useState(false);\n  const history = useHistory()\n\n  const changeBackground = () =>{\n    if (window.scrollY>=60){\n      setNavbar(true);\n    }\n    else{\n      setNavbar(false);\n    }\n  }\n\n  window.addEventListener('scroll', changeBackground);\n\n  return (\n    <header\n      style={{\n        background: `${navbar ? \"#242B2E\" : \"transparent\"}`,\n        boxShadow: \"1px 6px 18px -4px #000000\",\n      }}\n    >\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div\n            className=\"col-md-4 col-sm-4 col-4\"\n            style={{ fontSize: \"1.2rem\", color: \"black\" }}\n          >\n            {/* paste logo here */}\n            <img width=\"100px\" height=\"30px\" src={Logo} alt=\"zotto\" />\n          </div>\n          <nav className=\"col-md-8 col-sm-8 col-8\">\n            <a\n              className=\"cmn-toggle-switch cmn-toggle-switch__htx open_close\"\n              href=\"javascript:void(0);\"\n            >\n              <span>Menu mobile</span>\n            </a>\n            <div className=\"main-menu\">\n              <div id=\"header_menu\">\n                <img src=\"img/logo.png\" width={190} height={23} alt />\n              </div>\n              <a href=\"#\" className=\"open_close\" id=\"close_in\">\n                <i className=\"icon_close\" />\n              </a>\n              <ul>\n                {Number(menu.restaurantInfo[\"chain_owner_id\"]) ? (\n                  <li key={11} className=\"navigation-buttons\">\n                    {/* Should figure out why Link is not working as expected, page getting redirected */}\n                    <a\n                      // onClick={() =>\n                      //   history.push(\n                      //     `${process.env.REACT_APP_PUBLIC_URL}chainId=${menu.restaurantInfo.chain_owner_id}`\n                      //   )\n                      // }\n                      href={`${process.env.REACT_APP_PUBLIC_URL}chainId=${menu.restaurantInfo.chain_owner_id}`}\n                    >\n                      Home\n                    </a>\n                  </li>\n                ) : null}\n                <li>\n                  <a href=\"about.html\">About us</a>\n                </li>\n                <li className=\"submenu\">\n                  <a href=\"javascript:void(0);\" className=\"show-submenu\">\n                    User\n                    <i className=\"icon-down-open-mini\" />\n                  </a>\n                  <ul>\n                    <li>\n                      <a href=\"list_page.html\">Edit Profile</a>\n                    </li>\n                    <li>\n                      <a href=\"grid_list.html\">Manage Addresses</a>\n                    </li>\n                    <li>\n                      <Link\n                        to={`${process.env.REACT_APP_PUBLIC_URL}restId=${menu.restaurantInfo.restaurant_id}/myOrders`}\n                      >\n                        My Orders\n                      </Link>\n                    </li>\n                    <li>\n                      <a href=\"detail_page.html\">Logout</a>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <a href=\"#0\" data-toggle=\"modal\" data-target=\"#login_2\">\n                    Login\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#0\" data-toggle=\"modal\" data-target=\"#login_2\">\n                    Register\n                  </a>\n                </li>\n              </ul>\n            </div>\n            {/* End main-menu */}\n          </nav>\n        </div>\n        {/* End row */}\n      </div>\n      {/* End container */}\n    </header>\n  );\n};\n\nexport default Appheader;\n","/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantList/Restaurants/RestaurantCard/RestaurantCard.jsx",["214","215"],"import React from \"react\";\n// import \"./RestaurantCard.scss\";\n\nconst RestaurantCard = ({ restaurant }) => {\n  return (\n    <a\n      href={`${`${process.env.REACT_APP_PUBLIC_URL}restId=${restaurant.restaurant_id}/menu`}`}\n      className=\"strip_list\"\n    >\n      <div className=\"ribbon_1\">Popular</div>\n      <div className=\"desc\">\n        <div className=\"thumb_strip\">\n          <img src={restaurant.logo} alt />\n        </div>\n        {console.log(restaurant)}\n        <div className=\"rating\">\n          <i className=\"icon_star voted\" />\n          <i className=\"icon_star voted\" />\n          <i className=\"icon_star voted\" />\n          <i className=\"icon_star voted\" />\n          <i className=\"icon_star\" />\n        </div>\n        <h3>{restaurant.rname}</h3>\n        <div className=\"type\">{restaurant.description}</div>\n        <div className=\"location\">\n          {restaurant.address} {restaurant.city}\n          {restaurant.zipcode}\n          <span className=\"opening\">Opens at 17:00</span>\n        </div>\n        <ul>\n          {restaurant?.order_option?.split(\",\").map((option, i) => {\n            return (\n              <li key={i} style={{ textTransform: \"capitalize\" }}>\n                {option}\n                <i className=\"icon_check_alt2 ok\" />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      {/* End desc*/}\n    </a>\n  );\n};\n\nexport default RestaurantCard;\n","/Users/sachinananthakumar/Zotto_version_2/src/components/Slider/Slider.jsx",["216"],"import React, {useState} from \"react\";\n\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n} from \"reactstrap\";\n\n\nconst items = [\n  {\n    src:\n      \"https://images.unsplash.com/photo-1604382354936-07c5d9983bd3?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80\",\n    altText: \"Slide 1\",\n    caption: \"Slide 1\",\n  },\n  {\n    src:\n      \"https://images.unsplash.com/photo-1598514982901-ae62764ae75e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80\",\n    altText: \"Slide 2\",\n    caption: \"Slide 2\",\n  },\n  {\n    src:\n      \"https://images.unsplash.com/photo-1548943487-a2e4e43b4853?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjB8fHNvdXBzfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    altText: \"Slide 3\",\n    caption: \"Slide 3\",\n  },\n];\n\n\nconst Slider = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img style={{width:\"100%\", height:\"600px\"}} src={item.src} alt={item.altText} />\n        {/* <CarouselCaption\n          captionText={item.caption}\n          captionHeader={item.caption}\n        /> */}\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel style={{height:\"400px\"}} activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={items}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction=\"prev\"\n        directionText=\"Previous\"\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction=\"next\"\n        directionText=\"Next\"\n        onClickHandler={next}\n      />\n    </Carousel>\n  );\n};\n\nexport default Slider;","/Users/sachinananthakumar/Zotto_version_2/src/components/Footer/Footer.jsx",["217"],"import React from 'react'\n\nconst Footer = () => {\n    return (\n      <footer>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <h3>Secure payments with</h3>\n              <p>\n                <img src=\"img/cards.png\" className=\"img-fluid\" />\n              </p>\n            </div>\n            <div className=\"col-md-4\">\n              <h3>About</h3>\n              <ul>\n                <li>\n                  <a href=\"about.html\">About us</a>\n                </li>\n                <li>\n                  <a href=\"faq.html\">Faq</a>\n                </li>\n                <li>\n                  <a href=\"contacts.html\">Contacts</a>\n                </li>\n                <li>\n                  <a href=\"#0\" data-toggle=\"modal\" data-target=\"#login_2\">\n                    Login\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#0\" data-toggle=\"modal\" data-target=\"#register\">\n                    Register\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#0\">Terms and conditions</a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-md-2\">\n              <h3>Settings</h3>\n              <div className=\"styled-select\">\n                <select name=\"lang\" id=\"lang\">\n                  <option value=\"English\" selected>\n                    English\n                  </option>\n                  <option value=\"French\">Norweigien</option>\n                  <option value=\"Spanish\">Spanish</option>\n                  <option value=\"Russian\">German</option>\n                </select>\n              </div>\n              <div className=\"styled-select\">\n                <select name=\"currency\" id=\"currency\">\n                  <option value=\"USD\" selected>\n                    USD\n                  </option>\n                  <option value=\"EUR\">EUR</option>\n                  <option value=\"GBP\">GBP</option>\n                  <option value=\"RUB\">KR</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          {/* End row */}\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div id=\"social_footer\">\n                <ul>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-facebook\" />\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-twitter\" />\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-google\" />\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-instagram\" />\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-pinterest\" />\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-vimeo\" />\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#0\">\n                      <i className=\"icon-youtube-play\" />\n                    </a>\n                  </li>\n                </ul>\n                <p>© Quick Food 2020</p>\n              </div>\n            </div>\n          </div>\n          {/* End row */}\n        </div>\n        {/* End container */}\n      </footer>\n    );\n}\n\nexport default Footer\n","/Users/sachinananthakumar/Zotto_version_2/src/components/PageNotFound/PageNotFound.jsx",[],"/Users/sachinananthakumar/Zotto_version_2/src/components/LoadingBar/LoadingBar.jsx",[],"/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantInformation/RestaurantInformation.jsx",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport {useSelector,useDispatch} from 'react-redux'\nimport {\n  fetchCategories,\n  fetchMenuItems,\n  fetchPizzas,\n  fetchAllForcedModifiers,\n  fetchAllOptionalModifiers,\n  fetchHappyHours,\n} from \"../../state-management/menu/asyncActions\";\nimport {\n  setLoadingDisplay,\n  addItem,\n  removeItem,\n  setSearchQuery,\n  initializeStoreState,\n  clearState,\n  clearMenuState,\n  displayAddressModal,\n} from \"../../state-management/menu/actions\";\nimport {\n  fetchRestuarantInformation,\n  fetchRestuarantList,\n  fetchRestuarantDeliveryRange,\n} from \"../../state-management/main/asyncActions\";\nimport { fetchAddressesList } from \"../../state-management/user/asyncActions\";\nimport { setSelectedRestaurant } from \"../../state-management/main/actions\";\nimport {\n  showLoginFormMethod,\n  setSelectedAddress,\n} from \"../../state-management/user/actions\";\nimport { getFilterredList } from \"../../state-management/menu/selectors\";\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\nimport Information from \"./Information/Information\";\nimport MyOrders from \"../../components/MyOrders/MyOrders\";\nconst RestaurantInformation = (props) => {\n    const dispatch = useDispatch()\n    const user = useSelector((state)=>state.user)\n    const main = useSelector((state)=>state.main)\n    const menu = useSelector((state)=>state.menu)\n    const [loading, setLoading] = useState(true)\n    const initialize = async () =>{\n        dispatch(initializeStoreState(props.restaurantId));\n        dispatch(fetchHappyHours(props.restaurantId));\n        dispatch(fetchMenuItems(props.restaurantId));\n        dispatch(fetchPizzas(props.restaurantId));\n        dispatch(fetchRestuarantDeliveryRange(props.restaurantId));\n        await dispatch(fetchCategories(props.restaurantId));\n        dispatch(fetchAllForcedModifiers(props.restaurantId));\n        dispatch(fetchAllOptionalModifiers(props.restaurantId));\n        setLoading(false)\n\n    }\n\n    useEffect(()=>{\n        initialize()\n    },[])\n\n    // console.log(\"user\",user, \"menu\",menu, \"main\", main);\n    const handleAddItem = (item) => {\n      \n    }\n    const handleRemoveItem = () => {\n        \n    }\n    const renderMenuItems = () => {\n     return (\n       <Information\n         searchQuery={menu.searchQuery}\n         categories={menu.categoriesList}\n         selectedCategoryId={menu.selectedCategoryId}\n         menuItems={menu.menuItems}\n         pizzas={menu.pizzas}\n         categoriesList={menu.categoriesList}\n         restaurantInfo={menu.restaurantInfo}\n         happyHours={menu.happyHours}\n         onAddItem={handleAddItem}\n         onRemoveItem={handleRemoveItem}\n       />\n     );\n   }\n  return (\n    <>\n      {/* {console.log(\"ResInfo-props\", props)} */}\n      {/* {console.log(\"user\", user, \"menu\", menu, \"main\", main)} */}\n      {loading && <LoadingBar />}\n      <Switch>\n        <Route exact path={`/restId=${props.restaurantId}`}>\n          <Redirect to={`/restId=${props.restaurantId}/menu`} />\n        </Route>\n        <Route\n          exact\n          path={`/restId=${props.restaurantId}/menu`}\n          children={renderMenuItems()}\n        />\n        <Route\n          exact\n          path={`/restId=${props.restaurantId}/myOrders`}\n        >\n          <MyOrders restaurantId={props.restaurantId} />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default RestaurantInformation;\n","/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/asyncActions.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/menu/selectors.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/actions.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/state-management/user/asyncActions.js",[],"/Users/sachinananthakumar/Zotto_version_2/src/containers/RestaurantInformation/Information/Information.jsx",["235","236"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {animateScroll as scroll} from 'react-scroll'\nimport MenuCategories from \"../../../components/MenuCategories/MenuCategories\";\nimport MenuItems from \"../../MenuItems/MenuItems\";\n\nconst buttonStyle = {\n  position:\"fixed\",\n  bottom: \"5%\",\n  right:\"10%\",\n  border:\"none\",\n  outline:\"none\",\n  backgroundColor:\"#5B53CD\",\n  borderRadius: \"20px\",\n  height:\"50px\",\n  color:\"white\",\n  fontSize:\"0.8rem\",\n  fontWeight:\"600\",\n}\n\nconst Information = (props) => {\n  const menu = useSelector((state) => state.menu);\n  const scrollToTop = () =>{\n    scroll.scrollToTop()\n  }\n  return (\n    <>\n      {console.log(\"informations\", props)}\n      <section\n        className=\"parallax-window\"\n        data-parallax=\"scroll\"\n        // data-image-src=\"https://cutt.ly/Kkb7BY9\"\n        style={{\n          background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\n          backgroundSize: \"cover\",\n        }}\n        data-natural-width={1400}\n        data-natural-height={470}\n      >\n        <button\n          style={{ zIndex: \"1000\" }}\n          onClick={scrollToTop}\n          style={buttonStyle}\n        >\n          Scroll to Top\n        </button>\n        <div id=\"subheader\">\n          <div id=\"sub_content\">\n            <div id=\"thumb\">\n              <img src={props.restaurantInfo.logo} alt />\n            </div>\n            {/* <div className=\"rating\">\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star\" /> (\n              <small>\n                <a href=\"detail_page_2.html\">Read 98 reviews</a>\n              </small>\n              )\n            </div> */}\n            <h1>{props.restaurantInfo.rname}</h1>\n            <div>\n              <em>{props.restaurantInfo.description}</em>\n            </div>\n            <div>\n              <i className=\"icon_pin\" />{\" \"}\n              {`${props.restaurantInfo.address} - ${props.restaurantInfo.city} - ${props.restaurantInfo.country}`}{\" \"}\n              <strong>Delivery charge:</strong> free over{\" \"}\n              {props.restaurantInfo?.monetary_symbol}-\n              {props.restaurantInfo.cost.free_delivery_eligible_amount}.\n            </div>\n          </div>\n          {/* End sub_content */}\n        </div>\n        {/* End subheader */}\n      </section>\n      {/* End section */}\n      {/* content */}\n      <div className=\"container margin_60_35\">\n        <div className=\"row\">\n          <div className=\"col-lg-3\">\n            <p>\n              <a\n                href=\"list_page.html\"\n                className=\"btn_side\"\n                style={{ backgroundColor: \"#5B53CD\" }}\n              >\n                Back to search\n              </a>\n            </p>\n            <MenuCategories categories={menu.categoriesList} />\n\n            {/* End box_style_1 */}\n            <div className=\"box_style_2 d-none d-sm-block\" id=\"help\">\n              <i className=\"icon_lifesaver\" />\n              <h4>\n                Need <span>Help?</span>\n              </h4>\n              <a\n                href=\"tel://004542344599\"\n                className=\"phone\"\n                style={{ color: \"#5B53CD\" }}\n              >\n                {props.restaurantInfo.phone}\n              </a>\n              <small>Monday to Friday 9.00am - 7.30pm</small>\n            </div>\n          </div>\n          {/* End col */}\n          <div className=\"col-lg-6\">\n            <div className=\"box_style_2\" id=\"main_menu\">\n              <h2 className=\"inner\" style={{ backgroundColor: \"#5B53CD\" }}>\n                Menu\n              </h2>\n              <MenuItems\n                pizzas={menu.pizzas}\n                selectedCategoryId={menu.selectedCategoryId}\n                menuItems={menu.menuItems}\n                restaurantInfo={menu.restaurantInfo}\n                searchQuery={menu.searchQuery}\n                categories={menu.categoriesList}\n                happyhours={menu.happyHours}\n              />\n            </div>\n            {/* End box_style_1 */}\n          </div>\n          {/* End col */}\n          <div className=\"col-lg-3\" id=\"sidebar\">\n            <div\n              className=\"theiaStickySidebar\"\n              style={{ position: \"sticky\", top: \"65px\" }}\n            >\n              <div id=\"cart_box\">\n                <h3>\n                  Your order <i className=\"icon_cart_alt float-right\" />\n                </h3>\n                <table className=\"table table_summary\">\n                  <tbody>\n                    <tr>\n                      <td>\n                        <a href=\"#0\" className=\"remove_item\">\n                          <i className=\"icon_minus_alt\" />\n                        </a>{\" \"}\n                        <strong>1x</strong> Enchiladas\n                      </td>\n                      <td>\n                        <strong className=\"float-right\">$11</strong>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <a href=\"#0\" className=\"remove_item\">\n                          <i className=\"icon_minus_alt\" />\n                        </a>{\" \"}\n                        <strong>2x</strong> Burrito\n                      </td>\n                      <td>\n                        <strong className=\"float-right\">$14</strong>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <a href=\"#0\" className=\"remove_item\">\n                          <i className=\"icon_minus_alt\" />\n                        </a>{\" \"}\n                        <strong>1x</strong> Chicken\n                      </td>\n                      <td>\n                        <strong className=\"float-right\">$20</strong>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <a href=\"#0\" className=\"remove_item\">\n                          <i className=\"icon_minus_alt\" />\n                        </a>{\" \"}\n                        <strong>2x</strong> Corona Beer\n                      </td>\n                      <td>\n                        <strong className=\"float-right\">$9</strong>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <a href=\"#0\" className=\"remove_item\">\n                          <i className=\"icon_minus_alt\" />\n                        </a>{\" \"}\n                        <strong>2x</strong> Cheese Cake\n                      </td>\n                      <td>\n                        <strong className=\"float-right\">$12</strong>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <hr />\n                <div className=\"row\" id=\"options_2\">\n                  <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        defaultValue\n                        defaultChecked\n                        name=\"option_2\"\n                        className=\"icheck\"\n                      />\n                      Delivery\n                    </label>\n                  </div>\n                  <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        defaultValue\n                        name=\"option_2\"\n                        className=\"icheck\"\n                      />\n                      Eat In\n                    </label>\n                  </div>\n                  <div className=\"col-xl-4 col-md-12 col-sm-12 col-4\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        defaultValue\n                        name=\"option_2\"\n                        className=\"icheck\"\n                      />\n                      Take Away\n                    </label>\n                  </div>\n                </div>\n                {/* Edn options 2 */}\n                <hr />\n                <table className=\"table table_summary\">\n                  <tbody>\n                    <tr>\n                      <td>\n                        Subtotal <span className=\"float-right\">$56</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        Delivery fee <span className=\"float-right\">$10</span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"total\">\n                        TOTAL <span className=\"float-right\">$66</span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <hr />\n                <a\n                  className=\"btn_full\"\n                  href=\"cart.html\"\n                  style={{ backgroundColor: \"#5B53CD\" }}\n                >\n                  Order now\n                </a>\n              </div>\n              {/* End cart_box */}\n            </div>\n            {/* End theiaStickySidebar */}\n          </div>\n          {/* End col */}\n        </div>\n        {/* End row */}\n      </div>\n    </>\n  );\n};\n\nexport default Information;\n","/Users/sachinananthakumar/Zotto_version_2/src/components/MenuCategories/MenuCategories.jsx",["237","238"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedCategoryId, displayHappyHours, displayPizzas } from \"../../state-management/menu/actions\";\nimport {Link as ScrollLink, animateScroll as scroll} from 'react-scroll'\nconst MenuCategories = React.memo(({ categories }) => {\n  const menu = useSelector((state) => state.menu);\n  const dispatch = useDispatch();\n  const [dishes, showDishes] = useState(false)\n  const [drinks, showDrinks] = useState(false) \n  const isPizzaAvailable = menu.pizzas.length;\n  const isHappyHoursActive = isHappyHoursActiveInMenu();\n\n\n  const onDishClick  = () => {\n    showDishes(!dishes)\n  }\n  const onDrinksClick = () =>{\n    showDrinks(!drinks)\n    \n  }\n  function isHappyHoursActiveInMenu() {\n    return menu.menuItems.some(({ isHappyHourActive }) => isHappyHourActive);\n  }\n\n\n  return (\n    <>\n      <div className=\"box_style_1\">\n        <ul id=\"cat_nav\">\n          {console.log(\"categories\", categories)}\n          {console.log(\"menu items\", menu.menuItems)}\n          {menu.isHappyHoursApplicable && isHappyHoursActive ? (\n            <li key=\"happyHours\" style={{ cursor: \"pointer\" }}>\n              <ScrollLink\n                activeClass=\"active\"\n                smooth={true}\n                spy={true}\n                to=\"Happy Hours\"\n                offset={-70}\n                onClick={() => {\n                  dispatch(displayHappyHours());\n                }}\n              >\n                Happy hours <span> ({menu?.happyHours?.length}) </span>\n              </ScrollLink>\n            </li>\n          ) : null}\n          <li style={{ cursor: \"pointer\" }}>\n            <ScrollLink\n              activeClass=\"active\"\n              smooth={true}\n              spy={true}\n              to={dishes ? \"\" : categories[0]?.cname}\n              offset={-70}\n              onClick={onDishClick}\n            >\n              Dishes <span>({categories[0]?.sub_category.length})</span>{\" \"}\n            </ScrollLink>\n          </li>\n          {categories.map((category, i) => {\n            return category.cname === \"Dishes\" && dishes ? (\n              <MenuSubCategory\n                list={category.sub_category}\n                searchQuery={menu.searchQuery}\n                selectedCategoryId={menu.selectedCategoryId}\n                setSelectedCategoryId={setSelectedCategoryId}\n              />\n            ) : null;\n          })}\n          <li style={{ cursor: \"pointer\" }}>\n            <ScrollLink\n              activeClass=\"active\"\n              smooth={true}\n              spy={true}\n              to={drinks ? \"\" : categories[1]?.cname}\n              offset={-70}\n              onClick={onDrinksClick}\n            >\n              Drinks<span>({categories[1]?.sub_category.length})</span>\n            </ScrollLink>\n          </li>\n          {categories.map((category, i) => {\n            return category.cname === \"Drinks\" && drinks ? (\n              <MenuSubCategory\n                list={category.sub_category}\n                searchQuery={menu.searchQuery}\n                selectedCategoryId={menu.selectedCategoryId}\n                setSelectedCategoryId={setSelectedCategoryId}\n                // hideCategoryList={() => hideCategory()}\n              />\n            ) : null;\n          })}\n          {isPizzaAvailable ? (\n            <li key=\"pizza\" style={{ cursor: \"pointer\" }}>\n              <ScrollLink\n                activeClass=\"active\"\n                smooth={true}\n                spy={true}\n                to=\"Pizza\"\n                offset={-70}\n                onClick={() => dispatch(displayPizzas())}\n              >\n                Pizza's <span> ({isPizzaAvailable}) </span>\n              </ScrollLink>\n            </li>\n          ) : null}\n        </ul>\n      </div>\n    </>\n  );\n});\n\nconst MenuSubCategory = React.memo(({list, searchQuery, selectedCategoryId, setSelectedCategoryId}) =>{\n  const dispatch = useDispatch();\n  const handleClick = (e, item) =>{\n    // e.stopPropagation();\n    dispatch(setSelectedCategoryId(item.category_id))\n    console.log(item);\n  }\n  return list.map((s_category) => {\n    return (\n      <li key={s_category.category_id} style={{ cursor: \"pointer\" }} onClick = {(e)=>handleClick(e, s_category)}>\n        <a style={{ color: \"#5B53CD\" }}>{s_category?.cname}</a>\n      </li>\n    );\n  });\n})\n\nexport default MenuCategories;\n","/Users/sachinananthakumar/Zotto_version_2/src/containers/MenuItems/MenuItems.jsx",["239","240","241"],"import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MenuTable from \"../../components/MenuTable/MenuTable\";\nimport { getTaxes } from \"../../state-management/menu/operations\";\nconst MenuItems = React.memo(\n  ({\n    categories,\n    pizzas,\n    happyhours,\n    selectedCategoryId,\n    menuItems,\n    restaurantInfo,\n    searchQuery,\n  }) => {\n    //! [x] Need to refractored, should create a seperate Table (presentational component)\n    //! Should filter isOnline isHappyhour active and need to implement details page for menun with subcategory,\n    //! Should implement modifiers for the menu items,\n    //? Need code splitting, load lazily because this is data intensive operation, create a suspense in main route.\n    \n    //? Need to filter Pizzas and HappyHours based on isActive and isOnline\n    const menu = useSelector((state) => state.menu);\n    const allforcedModifiers = menu.allForcedModifier;\n    const findCategory = (selectedCategoryId) => {\n      console.log(\"memoized value\");\n      return menuItems.filter(\n        ({ category_id: cid, online }) => cid === selectedCategoryId && online === '1'\n      );\n    };\n\n    const filteredIems = useMemo(() => findCategory(selectedCategoryId), [\n      selectedCategoryId,\n    ]);\n\n    function getSelectedCategoryName() {\n      if (\n        categories.length &&\n        selectedCategoryId &&\n        selectedCategoryId.length > 0\n      ) {\n        const category = categories.find(\n          (category) =>\n            category[\"sub_category\"] &&\n            category[\"sub_category\"].find(\n              ({ category_id: cId }) => cId === selectedCategoryId\n            )\n        );\n        console.log(\"category\", category);\n        const subCategory =\n          category &&\n          category[\"sub_category\"] &&\n          category[\"sub_category\"].find(\n            ({ category_id: cId }) => cId === selectedCategoryId\n          );\n        // cname = subCategory ? subCategory.cname : \"\";\n        return subCategory ? subCategory.cname : \"\";\n      }\n\n      if (selectedCategoryId === -1) {\n        return \"Happy Hours\";\n      } else if (selectedCategoryId === -2) {\n        return \"Pizza's\";\n      }\n    }\n\n    const isPriceWithoutTax = () => {\n      return Number(menu.restaurantInfo[\"price_without_tax_flag\"]);\n    };\n\n    const getActualPrice = (item) => {\n      if (menu.restaurantInfo) {\n        // console.log(\"actual price\", typeof(this.isPriceWithoutTax()));\n        return isPriceWithoutTax()\n          ? item.price\n          : (\n              Number(item.price) +\n              Number(getTaxes(item, item.price, menu.restaurantInfo).tax)\n            ).toFixed(2);\n      }\n\n      return 0;\n    };\n\n    const getItemPrice = (item, isStillActive) => {\n    if (item.happyHourItem && isStillActive) {\n      if (item.similarItems && item.similarItems.length > 0) {\n        let totalPrice = 0;\n\n        for (let i = 0; i < item.similarItems.length;i++) {\n          totalPrice += this.isPriceWithoutTax() ? item.similarItems[i].happyHourItem.subTotal : item.similarItems[i].happyHourItem.grandTotal;\n        }\n\n        return Number(totalPrice).toFixed(2);\n      } else {\n        console.log(\"sub\", Number(item.happyHourItem.subTotal).toFixed(2));\n        console.log(\"grand\", Number(item.happyHourItem.grandTotal).toFixed(2));\n        return this.isPriceWithoutTax()\n          ? Number(item.happyHourItem.subTotal).toFixed(2)\n          : Number(item.happyHourItem.grandTotal).toFixed(2);\n      }\n    } else if (item.subTotal && item.grandTotal) {\n      if (item.similarItems && item.similarItems.length > 0) {\n        let totalPrice = 0;\n\n        for (let i = 0; i < item.similarItems.length;i++) {\n          totalPrice += this.isPriceWithoutTax() ? (item.similarItems[i].subTotal || item.similarItems[i].price) : (item.similarItems[i].grandTotal || this.getActualPrice(item.similarItems[i]));\n        }\n\n        return Number(totalPrice).toFixed(2);\n      } else {\n        console.log(\"log\", this.isPriceWithoutTax() ? (item.subTotal || item.price) : (item.grandTotal || this.getActualPrice(item)));\n        return this.isPriceWithoutTax() ? (item.subTotal || item.price) : (item.grandTotal || this.getActualPrice(item));\n      }\n    }\n  }\n\n    return (\n      <>\n        {/* {console.log(\"seleted category name\", getSelectedCategoryName())}\n        {console.log(\"pizzas\", pizzas, \"happyhopurs\", happyhours)} */}\n        {console.log(\"categories\", categories)}\n        {/* { (selectedCategoryId !== -1 && selectedCategoryId !== -2) ? categories.map((category) => {\n          return category.cname === \"Dishes\" || category.cname === \"Drinks\" ? (\n            <>\n              <MenuTable\n                category_name={category.cname}\n                list={category.sub_category}\n              />\n            </>\n          ) : null;\n        }): null} */}\n        {/* {\n          selectedCategoryId \n        } */}\n        {/* {console.log(\n          \"find selected category\",\n          // menuItems.filter(({ category_id: cid }) => cid === selectedCategoryId)\n          filteredIems\n        )} */}\n        \n        {console.log(\"fltered items\", filteredIems)}\n        {console.log(\"check product type\", filteredIems[0]?.productType)}\n        {(filteredIems[0]?.productType === \"Dishes\" || filteredIems[0]?.productType === \"Drinks\") ? (\n          <MenuTable\n            symbol={restaurantInfo.monetary_symbol}\n            actualPrice = {getActualPrice}\n            category_name={getSelectedCategoryName()}\n            list={filteredIems}\n          />\n        ) : null}\n        {selectedCategoryId === -2 ? (\n          <MenuTable\n            symbol={restaurantInfo.monetary_symbol}\n            category_name=\"Pizza\"\n            list={pizzas}\n          />\n        ) : null}\n        {selectedCategoryId === -1 ? (\n          <MenuTable\n            symbol={restaurantInfo.monetary_symbol}\n            category_name=\"Happy Hours\"\n            list={happyhours}\n          />\n        ) : null}\n      </>\n    );\n  }\n);\n\nexport default MenuItems;\n","/Users/sachinananthakumar/Zotto_version_2/src/components/MenuTable/MenuTable.jsx",["242"],"import React from \"react\";\nimport { Button } from \"react-scroll\";\n\nimport MenuModal from \"../../containers/Modals/MenuModal\";\n\nconst MenuTable = ({ category_name, list, symbol, actualPrice }) => {\n  return (\n    <>\n      <h3\n        className=\"nomargin_top\"\n        id={category_name}\n        style={{ color: \"#5B53CD\" }}\n      >\n        {category_name}\n      </h3>\n      <p>\n        Te ferri iisque aliquando pro, posse nonumes efficiantur in cum.\n        Sensibus reprimique eu pro. Fuisset mentitum deleniti sit ea.\n      </p>\n      <table className=\"table table-striped cart-list\">\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Price</th>\n            <th>Order</th>\n          </tr>\n        </thead>\n        <tbody>\n          {console.log(\"list\", list)}\n          {list.map((item) => {\n            return (\n              <tr>\n                <td>\n                  <figure className=\"thumb_menu_list\">\n                    <img\n                      src={item?.image ?? \"https://cutt.ly/gkb8C6Z\"}\n                      alt=\"thumb\"\n                    />\n                  </figure>\n                  <h5>{item.cname || item.name || item.title}</h5>\n                  <p>{item?.description || item.happyHourDisplayText}</p>\n                </td>\n                <td>\n                  <strong>{`${symbol} ${\n                    actualPrice ? actualPrice(item) : item?.price\n                  }`}</strong>\n                </td>\n                <td className=\"options\">\n                  {item.forced_modifier ? (\n                    <MenuModal item={item} />\n                  ) : (\n                    <>\n                      <button\n                        style={{\n                          background:\"#5B53CD\",\n                          fontSize:\"1.3rem\",\n                          width:\"30px\",\n                          height:\"30px\",\n                          borderRadius: \"50%\",\n                          border: \"none\",\n                          outline: \"none\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                        onClick={() => console.log(\"clicked\")}\n                      >\n                        <span style={{ display: \"block\" }}>+</span>\n                      </button>\n                    </>\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <hr />\n    </>\n  );\n};\n\nexport default MenuTable;\n","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modals/MenuModal.jsx",[],"/Users/sachinananthakumar/Zotto_version_2/src/containers/Modifiers/ForcedModifiers/ForcedModifiers.jsx",["243","244","245","246"],"import React from 'react'\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport ModifierCategory from './ModifiersCategory/ModifierCategory';\n\nconst ForcedModifiers = ({forcedModifier, symbol}) => {\n    return (\n      <div style={{ width: \"100%\" }}>\n        \n        {console.log(\"comp forcedModifier\", forcedModifier)}\n        {forcedModifier.map((item) => {\n            \n          if (item) {\n            return (\n              <>\n                <h4>{item.fm_cat_name}</h4>\n                <span>Please select only 1 of the following options</span>\n                {item.items.map((fItem) => {\n                  return (\n                    <ModifierCategory\n                      detours={item.detour_ids}\n                      fItem={fItem}\n                      symbol={symbol}\n                    />\n                  );\n                })}\n              </>\n            );\n          }\n        })}\n      </div>\n    );\n}\n\nexport default ForcedModifiers\n","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modifiers/OptionalModifiers/OptionalModifiers.jsx",["247"],"import React from 'react'\nimport { FormGroup, Input, Label } from 'reactstrap';\n\nconst OptionalModifiers = ({ optionalModifier , symbol}) => {\n  return(\n      <div>\n          {optionalModifier.map((item)=>{\n              if(item){\n                  return(\n                      <div key={item.om_cat_id}>\n                        <h4>\n                            {item.om_cat_name}\n                        </h4>\n                        {item.items.map((oItem)=>{\n                            return (\n                              <div\n                                key={oItem.id}\n                                style={{\n                                  //   background: \"red\",\n                                  display: \"flex\",\n                                  justifyContent: \"space-between\",\n                                  margin: \"10px\",\n                                  height: \"20px\",\n                                }}\n                              >\n                                <FormGroup check>\n                                  <Label check>\n                                    <Input type=\"checkbox\" id={oItem.id} /> {oItem.name}\n                                  </Label>\n                                </FormGroup>\n                                <span style={{ display: \"block\" }}>\n                                  {symbol}&nbsp;{oItem.price}\n                                </span>\n                              </div>\n                            );\n                        })}\n\n                      </div>\n                  )\n              }\n          })}\n      </div>\n  )\n};\n\nexport default OptionalModifiers\n","/Users/sachinananthakumar/Zotto_version_2/src/containers/Modifiers/ForcedModifiers/ModifiersCategory/ModifierCategory.jsx",["248","249","250"],"import React, { useState } from 'react'\nimport { FormGroup, Input, Label } from 'reactstrap';\n\nconst ModifierCategory = ({fItem, symbol, detours}) => {\n    const [selectedModifierOption, setModifierOption] = useState('')\n    const getSelectedModifierCategoryId = (id) =>{\n        setModifierOption(id);\n\n    }\n    return (\n      <div\n        key={fItem.id}\n        style={{\n          //   background: \"red\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          margin: \"10px\",\n          height: \"20px\",\n        }}\n      >\n        <FormGroup check >\n          <Label check>\n            <Input type=\"radio\" name=\"fRadio\" /> {fItem.name}\n          </Label>\n        </FormGroup>\n        {/* { isChecked ?  <ModifierOptions /> : null} */}\n        <span style={{ display: \"block\" }}>\n          {symbol}&nbsp;{fItem.price}\n        </span>\n        \n      </div>\n    );\n}\n\nconst ModifierOptions = React.memo(({ item, optionId}) =>{\n    // const detours = getForcedModifiersDetours(item, optionId)\n    return (\n        <>\n\n        </>\n    )\n});\n\n\nexport default ModifierCategory\n\n\n",["251","252"],"/Users/sachinananthakumar/Zotto_version_2/src/components/MyOrders/MyOrders.jsx",["253","254","255","256"],"import React, {useEffect, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table } from 'reactstrap'\nimport {fetchMyOrderList, fetchMyOrderDetails} from '../../state-management/user/asyncActions'\nimport LoadingBar from '../LoadingBar/LoadingBar'\nimport MyOrderDetails from '../MyOrderDetails/MyOrderDetails'\nimport './MyOrders.scss'\nconst MyOrders = React.memo(({restaurantId}) => {\n    const [loading, setLoading] = useState(false)\n    const [orders, setOrders] = useState([])\n    const [orderDetails, setOrderDetails] = useState({})\n    const userState = useSelector((state)=>state.user)\n    const menuState = useSelector((state)=>state.menu)\n    const dispatch = useDispatch()\n    const fetchOrders = async () =>{\n        setLoading(true);\n        const {payload} = await dispatch(fetchMyOrderList(userState.user.clientId));\n        // console.log(payload.data)\n        if(payload.status === '200') {\n            const dataSource = payload.data.filter(\n                (order) => order.restaurant_id === restaurantId\n              )\n              setOrders(dataSource);\n              setLoading(false);\n\n        }\n    }\n    \n  \n    useEffect(()=>{\n        console.log(\"passed\")\n        fetchOrders()\n    },[])\n\n    return (\n      <>\n        <section\n          className=\"parallax-window\"\n          data-parallax=\"scroll\"\n          // data-image-src=\"https://cutt.ly/Kkb7BY9\"\n          style={{\n            background: `url('https://cutt.ly/Kkb7BY9') no-repeat center`,\n            backgroundSize: \"cover\",\n          }}\n          data-natural-width={1400}\n          data-natural-height={470}\n        >\n          <div id=\"subheader\">\n            <div id=\"sub_content\">\n              <div id=\"thumb\">\n                <img src={menuState.restaurantInfo.logo} alt />\n              </div>\n              {/* <div className=\"rating\">\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star voted\" />\n              <i className=\"icon_star\" /> (\n              <small>\n                <a href=\"detail_page_2.html\">Read 98 reviews</a>\n              </small>\n              )\n            </div> */}\n              <h1>{menuState.restaurantInfo.rname}</h1>\n              <div>\n                <h1>Your Orders</h1>\n              </div>\n            </div>\n            {/* End sub_content */}\n          </div>\n        </section>\n        <div className=\"ordersContainer\">\n          {loading && <LoadingBar />}\n          {console.log(\"orders\", orderDetails)}\n          <div className =\"ordersContainer__ordersTable\" >\n            <Table striped responsive hover>\n              <thead>\n                <tr>\n                  <th>Order No</th>\n                  <th>Order Date</th>\n                  <th>Paid</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* <tr>\n                <th scope=\"row\">1</th>\n                <td>Mark</td>\n                <td>Otto</td>\n                <td>@mdo</td>\n              </tr> */}\n                {orders.map((order) => {\n                  return (\n                    <tr key={order.order_id}>\n                      <th>{order.order_id}</th>\n                      <th>{order.order_date}</th>\n                      <th>{order.paid === \"0\" ? \"NO\" : \"YES\"}</th>\n                      <th>{order.order_status}</th>\n                      <th\n                        style={{cursor:\"pointer\"}}\n                      >\n                        <MyOrderDetails loading = {setLoading} orderId = {order.order_id} />\n                      </th>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </>\n    );\n})\n\nexport default MyOrders\n","/Users/sachinananthakumar/Zotto_version_2/src/components/MyOrderDetails/MyOrderDetails.jsx",["257","258","259","260"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from \"reactstrap\";\nimport { fetchMyOrderDetails } from \"../../state-management/user/asyncActions\";\n\nconst isFmHaveDetours = (fmId, detoursList) => {\n  let data = \"\";\n\n  let result = false;\n\n  detoursList.map((detour) => {\n    if (detour.fm_item_id === fmId) {\n      // detour availabe\n      result = true;\n      // now loop through items\n      detour.dom.map((op) => {\n        data += ` , ${op.om_item_name}`;\n      });\n    }\n  });\n\n  return {\n    result,\n    data,\n  };\n};\n\nconst MyOrderDetails = (props) => {\n  const dispatch = useDispatch();\n  const [details, setDetails] = useState({});\n  const [modal, setModal] = useState(false);\n  const fetchAndShowOrderDetails = async (orderId) => {\n    props.loading(true);\n    const { payload } = await dispatch(fetchMyOrderDetails(orderId));\n    console.log(payload.data);\n    if (payload.status === \"200\") {\n      setDetails(payload.data[0]);\n    }\n    props.loading(false);\n  };\n  const toggle = () => {\n    setModal(!modal);\n  };\n  const openModal = () => {\n    setModal(!modal);\n    fetchAndShowOrderDetails(props.orderId);\n  };\n  //   const itemList = details?.products?.map((item, i) => {\n  //     let forcedModifier = \"\";\n\n  //     let optionalModifier = \"\";\n\n  //     let toppings = \"\";\n\n  //     let sizeAndBase = \"\";\n\n  //     let halfNhalf = \"\";\n\n  //     if (\n  //       item.forced_modifier === undefined ||\n  //       item.forced_modifier.length !== 0\n  //     ) {\n  //       item.forced_modifier.map(function (fm) {\n  //         // check if there is detour availabe\n  //         const detours = isFmHaveDetours(fm.fmid, item.detours);\n\n  //         forcedModifier += `, ${fm.name}`;\n  //         forcedModifier = forcedModifier.replace(/[\\s,]+/, \" \").trim();\n  //         if (detours.result) {\n  //           detours.data = detours.data.replace(/[\\s,]+/, \" \").trim();\n  //           forcedModifier += `(${detours.data})`;\n  //         }\n  //       });\n  //     }\n  //     if (\n  //       item.optional_modifier === undefined ||\n  //       item.optional_modifier.length !== 0\n  //     ) {\n  //       item.optional_modifier.map(function (om) {\n  //         optionalModifier += `, ${om.name}`;\n  //       });\n  //       optionalModifier = optionalModifier.replace(/[\\s,]+/, \" \").trim();\n  //     }\n\n  //     // PIZZA Details\n\n  //     // Toppings\n  //     if (item.toppings !== undefined) {\n  //       item.toppings.map(function (top) {\n  //         toppings += `, ${top.name}`;\n  //       });\n  //       toppings = toppings.replace(/[\\s,]+/, \" \").trim();\n  //     }\n\n  //     // SizeAndBase\n  //     if (item.base !== undefined) {\n  //       console.log(\"pizaa bug\", item);\n  //       sizeAndBase = `${item.size_vlaue} ${item.base.base_name}`;\n  //     }\n\n  //     // HalfNhalf\n  //     if (\n  //       item.first_half_toppings !== undefined &&\n  //       item.second_half_toppings !== undefined &&\n  //       item.first_half_toppings.length > 0 &&\n  //       item.second_half_toppings.length > 0\n  //     ) {\n  //       halfNhalf = `First Half: ${item.first_half_toppings[0].name}, Second Half: ${item.second_half_toppings[0].name}`;\n  //     }\n\n  //   });\n  return (\n    <div>\n      <Button color=\"black\" onClick={openModal}>\n        Details\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} style={{ top: \"25%\" }}>\n        <ModalHeader toggle={toggle}>Order Details</ModalHeader>\n        <ModalBody>\n          <div>\n            <strong>Order No - </strong>\n            <span>&nbsp;{details.order_id}</span>\n          </div>\n          <div>\n            <strong>Order Date - </strong>\n            <span>&nbsp;{details.order_date}</span>\n          </div>\n          <div>\n            <strong>Order Status - </strong>\n            <span>&nbsp;{details.order_status}</span>\n          </div>\n          <div>\n            <strong>Order Type - </strong>\n            <span>&nbsp;{details.delivery_option}</span>\n          </div>\n          <div>\n            <strong>Order Time - </strong>\n            <span>&nbsp;{details.order_time}</span>\n          </div>\n          <div>\n            <strong>Comments - </strong>\n            <span>&nbsp;{details.comments}</span>\n          </div>\n          <Table responsive hover striped>\n            <thead>\n              <tr>\n                <th>Product</th>\n                <th>Quantity x Price</th>\n                <th>Tax</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {details &&\n                details?.products?.map((product, i) => {\n                  return (\n                    <tr key={i}>\n                      <th>{product.product_name}</th>\n                      <th>{`${product.quantity} X ${product.price}`}</th>\n                      <th>{product.tax}</th>\n                      <th>\n                        {Number(product.quantity) * Number(product.price)}\n                      </th>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n          <div style={{ width: \"100%\" }}>\n            <div>\n              <strong>Subtotal - </strong>\n              <span>&nbsp;{details.subtotal}</span>\n            </div>\n            <div>\n              <strong>Tax - </strong>\n              <span>&nbsp;{details.tax}</span>\n            </div>\n            <div>\n              <strong>Delivery Cost - </strong>\n              <span>&nbsp;{details.delivery_cost}</span>\n            </div>\n            {details.happy_hours_discount ? (\n              <div>\n                <strong>Happy Hour Discount - </strong>\n                <span>&nbsp;{details.happy_hours_discount}</span>\n              </div>\n            ) : null}\n          </div>\n          <div>\n            <strong>Total - </strong>\n            <span>&nbsp;{details.total}</span>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={toggle}>\n            Close\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default MyOrderDetails;\n",{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":7,"column":10,"nodeType":"267","messageId":"268","endLine":7,"endColumn":22},{"ruleId":"265","severity":1,"message":"269","line":23,"column":8,"nodeType":"267","messageId":"268","endLine":23,"endColumn":20},{"ruleId":"270","severity":1,"message":"271","line":278,"column":36,"nodeType":"272","messageId":"273","endLine":278,"endColumn":38},{"ruleId":"270","severity":1,"message":"271","line":281,"column":93,"nodeType":"272","messageId":"273","endLine":281,"endColumn":95},{"ruleId":"274","severity":1,"message":"275","line":469,"column":29,"nodeType":"276","messageId":"277","endLine":485,"endColumn":6},{"ruleId":"278","severity":1,"message":"279","line":469,"column":37,"nodeType":"276","messageId":"280","endLine":469,"endColumn":39},{"ruleId":"265","severity":1,"message":"281","line":1,"column":16,"nodeType":"267","messageId":"268","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"282","line":10,"column":9,"nodeType":"267","messageId":"268","endLine":10,"endColumn":16},{"ruleId":"283","severity":1,"message":"284","line":40,"column":13,"nodeType":"285","endLine":43,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":42,"column":20,"nodeType":"288","messageId":"289","endLine":42,"endColumn":41},{"ruleId":"290","severity":1,"message":"291","line":48,"column":17,"nodeType":"285","endLine":48,"endColumn":71},{"ruleId":"283","severity":1,"message":"284","line":50,"column":15,"nodeType":"285","endLine":50,"endColumn":64},{"ruleId":"283","severity":1,"message":"284","line":73,"column":19,"nodeType":"285","endLine":73,"endColumn":74},{"ruleId":"286","severity":1,"message":"287","line":73,"column":27,"nodeType":"288","messageId":"289","endLine":73,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":6,"column":5,"nodeType":"285","endLine":9,"endColumn":6},{"ruleId":"290","severity":1,"message":"291","line":13,"column":11,"nodeType":"285","endLine":13,"endColumn":44},{"ruleId":"265","severity":1,"message":"292","line":8,"column":3,"nodeType":"267","messageId":"268","endLine":8,"endColumn":18},{"ruleId":"290","severity":1,"message":"293","line":11,"column":17,"nodeType":"285","endLine":11,"endColumn":66},{"ruleId":"265","severity":1,"message":"294","line":13,"column":3,"nodeType":"267","messageId":"268","endLine":13,"endColumn":20},{"ruleId":"265","severity":1,"message":"295","line":14,"column":3,"nodeType":"267","messageId":"268","endLine":14,"endColumn":10},{"ruleId":"265","severity":1,"message":"296","line":15,"column":3,"nodeType":"267","messageId":"268","endLine":15,"endColumn":13},{"ruleId":"265","severity":1,"message":"297","line":16,"column":3,"nodeType":"267","messageId":"268","endLine":16,"endColumn":17},{"ruleId":"265","severity":1,"message":"298","line":18,"column":3,"nodeType":"267","messageId":"268","endLine":18,"endColumn":13},{"ruleId":"265","severity":1,"message":"299","line":19,"column":3,"nodeType":"267","messageId":"268","endLine":19,"endColumn":17},{"ruleId":"265","severity":1,"message":"300","line":20,"column":3,"nodeType":"267","messageId":"268","endLine":20,"endColumn":22},{"ruleId":"265","severity":1,"message":"301","line":23,"column":3,"nodeType":"267","messageId":"268","endLine":23,"endColumn":29},{"ruleId":"265","severity":1,"message":"302","line":24,"column":3,"nodeType":"267","messageId":"268","endLine":24,"endColumn":22},{"ruleId":"265","severity":1,"message":"303","line":27,"column":10,"nodeType":"267","messageId":"268","endLine":27,"endColumn":28},{"ruleId":"265","severity":1,"message":"304","line":28,"column":10,"nodeType":"267","messageId":"268","endLine":28,"endColumn":31},{"ruleId":"265","severity":1,"message":"305","line":30,"column":3,"nodeType":"267","messageId":"268","endLine":30,"endColumn":22},{"ruleId":"265","severity":1,"message":"306","line":31,"column":3,"nodeType":"267","messageId":"268","endLine":31,"endColumn":21},{"ruleId":"265","severity":1,"message":"307","line":33,"column":10,"nodeType":"267","messageId":"268","endLine":33,"endColumn":26},{"ruleId":"265","severity":1,"message":"308","line":39,"column":11,"nodeType":"267","messageId":"268","endLine":39,"endColumn":15},{"ruleId":"265","severity":1,"message":"309","line":40,"column":11,"nodeType":"267","messageId":"268","endLine":40,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":58,"column":7,"nodeType":"312","endLine":58,"endColumn":9,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":43,"column":11,"nodeType":"316","endLine":43,"endColumn":30},{"ruleId":"290","severity":1,"message":"291","line":50,"column":15,"nodeType":"285","endLine":50,"endColumn":58},{"ruleId":"265","severity":1,"message":"317","line":4,"column":46,"nodeType":"267","messageId":"268","endLine":4,"endColumn":52},{"ruleId":"283","severity":1,"message":"318","line":123,"column":9,"nodeType":"285","endLine":123,"endColumn":41},{"ruleId":"265","severity":1,"message":"319","line":22,"column":11,"nodeType":"267","messageId":"268","endLine":22,"endColumn":29},{"ruleId":"310","severity":1,"message":"320","line":30,"column":74,"nodeType":"312","endLine":32,"endColumn":6,"suggestions":"321"},{"ruleId":"265","severity":1,"message":"322","line":83,"column":11,"nodeType":"267","messageId":"268","endLine":83,"endColumn":23},{"ruleId":"265","severity":1,"message":"323","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":16},{"ruleId":"265","severity":1,"message":"324","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":19},{"ruleId":"265","severity":1,"message":"325","line":2,"column":21,"nodeType":"267","messageId":"268","endLine":2,"endColumn":26},{"ruleId":"265","severity":1,"message":"326","line":2,"column":28,"nodeType":"267","messageId":"268","endLine":2,"endColumn":33},{"ruleId":"278","severity":1,"message":"327","line":10,"column":36,"nodeType":"276","messageId":"280","endLine":10,"endColumn":38},{"ruleId":"278","severity":1,"message":"327","line":7,"column":39,"nodeType":"276","messageId":"280","endLine":7,"endColumn":41},{"ruleId":"265","severity":1,"message":"328","line":5,"column":12,"nodeType":"267","messageId":"268","endLine":5,"endColumn":34},{"ruleId":"265","severity":1,"message":"329","line":6,"column":11,"nodeType":"267","messageId":"268","endLine":6,"endColumn":40},{"ruleId":"265","severity":1,"message":"330","line":35,"column":7,"nodeType":"267","messageId":"268","endLine":35,"endColumn":22},{"ruleId":"261","replacedBy":"331"},{"ruleId":"263","replacedBy":"332"},{"ruleId":"265","severity":1,"message":"333","line":4,"column":27,"nodeType":"267","messageId":"268","endLine":4,"endColumn":46},{"ruleId":"265","severity":1,"message":"334","line":11,"column":26,"nodeType":"267","messageId":"268","endLine":11,"endColumn":41},{"ruleId":"310","severity":1,"message":"335","line":33,"column":7,"nodeType":"312","endLine":33,"endColumn":9,"suggestions":"336"},{"ruleId":"290","severity":1,"message":"291","line":51,"column":17,"nodeType":"285","endLine":51,"endColumn":64},{"ruleId":"265","severity":1,"message":"281","line":1,"column":27,"nodeType":"267","messageId":"268","endLine":1,"endColumn":36},{"ruleId":"265","severity":1,"message":"337","line":13,"column":7,"nodeType":"267","messageId":"268","endLine":13,"endColumn":22},{"ruleId":"278","severity":1,"message":"338","line":18,"column":28,"nodeType":"276","messageId":"339","endLine":18,"endColumn":30},{"ruleId":"278","severity":1,"message":"338","line":23,"column":27,"nodeType":"276","messageId":"339","endLine":23,"endColumn":29},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'createLogger' is defined but never used.","Identifier","unusedVar","'PageNotFound' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'countDownTime', 'countDownDateTime', 'countDownTime'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useEffect' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","'CarouselCaption' is defined but never used.","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setLoadingDisplay' is defined but never used.","'addItem' is defined but never used.","'removeItem' is defined but never used.","'setSearchQuery' is defined but never used.","'clearState' is defined but never used.","'clearMenuState' is defined but never used.","'displayAddressModal' is defined but never used.","'fetchRestuarantInformation' is defined but never used.","'fetchRestuarantList' is defined but never used.","'fetchAddressesList' is defined but never used.","'setSelectedRestaurant' is defined but never used.","'showLoginFormMethod' is defined but never used.","'setSelectedAddress' is defined but never used.","'getFilterredList' is defined but never used.","'user' is assigned a value but never used.","'main' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.","ArrayExpression",["342"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'scroll' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'allforcedModifiers' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'findCategory'. Either include it or remove the dependency array.",["343"],"'getItemPrice' is assigned a value but never used.","'Button' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'selectedModifierOption' is assigned a value but never used.","'getSelectedModifierCategoryId' is assigned a value but never used.","'ModifierOptions' is assigned a value but never used.",["340"],["341"],"'fetchMyOrderDetails' is defined but never used.","'setOrderDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["344"],"'isFmHaveDetours' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [initialize]",{"range":"351","text":"352"},"Update the dependencies array to be: [findCategory, selectedCategoryId]",{"range":"353","text":"354"},"Update the dependencies array to be: [fetchOrders]",{"range":"355","text":"356"},[2072,2074],"[initialize]",[1237,1270],"[findCategory, selectedCategoryId]",[1247,1249],"[fetchOrders]"]